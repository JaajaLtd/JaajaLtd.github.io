[{"/home/pc/Documents/Project/hesmis-front/src/index.js":"1","/home/pc/Documents/Project/hesmis-front/src/App.js":"2","/home/pc/Documents/Project/hesmis-front/src/reportWebVitals.js":"3","/home/pc/Documents/Project/hesmis-front/src/config/services/historyService.js":"4","/home/pc/Documents/Project/hesmis-front/src/config/services/httpService.js":"5","/home/pc/Documents/Project/hesmis-front/src/config/store/index.js":"6","/home/pc/Documents/Project/hesmis-front/src/config/saga/index.js":"7","/home/pc/Documents/Project/hesmis-front/src/config/services/storageService.js":"8","/home/pc/Documents/Project/hesmis-front/src/config/routes/RoutePaths.js":"9","/home/pc/Documents/Project/hesmis-front/src/components/shared/index.jsx":"10","/home/pc/Documents/Project/hesmis-front/src/containers/Errors/PageNotFound.jsx":"11","/home/pc/Documents/Project/hesmis-front/src/containers/Hooks/usePrevious.jsx":"12","/home/pc/Documents/Project/hesmis-front/src/config/saga/payment/paymentReference.js":"13","/home/pc/Documents/Project/hesmis-front/src/config/actions/index.js":"14","/home/pc/Documents/Project/hesmis-front/src/components/common/index.jsx":"15","/home/pc/Documents/Project/hesmis-front/src/components/shared/SidebarMenu.js":"16","/home/pc/Documents/Project/hesmis-front/src/containers/Dashboard/index.jsx":"17","/home/pc/Documents/Project/hesmis-front/src/components/shared/AuthLayout.jsx":"18","/home/pc/Documents/Project/hesmis-front/src/components/shared/SideTitle.jsx":"19","/home/pc/Documents/Project/hesmis-front/src/components/shared/MainLayout.jsx":"20","/home/pc/Documents/Project/hesmis-front/src/components/shared/SnackBar.jsx":"21","/home/pc/Documents/Project/hesmis-front/src/config/saga/payment/index.js":"22","/home/pc/Documents/Project/hesmis-front/src/components/shared/MainHeader.jsx":"23","/home/pc/Documents/Project/hesmis-front/src/config/reducers/index.js":"24","/home/pc/Documents/Project/hesmis-front/src/components/shared/SideBar.jsx":"25","/home/pc/Documents/Project/hesmis-front/src/config/saga/registration/index.js":"26","/home/pc/Documents/Project/hesmis-front/src/config/saga/auth/index.js":"27","/home/pc/Documents/Project/hesmis-front/src/config/saga/app/index.js":"28","/home/pc/Documents/Project/hesmis-front/src/config/saga/enrollment/index.js":"29","/home/pc/Documents/Project/hesmis-front/src/config/saga/result/index.js":"30","/home/pc/Documents/Project/hesmis-front/src/config/actions/payment/paymentReference.js":"31","/home/pc/Documents/Project/hesmis-front/src/config/actions/app/server.js":"32","/home/pc/Documents/Project/hesmis-front/src/config/routes/MenuList.js":"33","/home/pc/Documents/Project/hesmis-front/src/components/common/AlertMessage.jsx":"34","/home/pc/Documents/Project/hesmis-front/src/components/common/DataSpinner.jsx":"35","/home/pc/Documents/Project/hesmis-front/src/components/common/CustomModal.jsx":"36","/home/pc/Documents/Project/hesmis-front/src/components/common/InputSelectField.jsx":"37","/home/pc/Documents/Project/hesmis-front/src/components/common/InputText.jsx":"38","/home/pc/Documents/Project/hesmis-front/src/components/common/PageLoader.jsx":"39","/home/pc/Documents/Project/hesmis-front/src/components/common/DataNotFound.jsx":"40","/home/pc/Documents/Project/hesmis-front/src/components/common/ReloadButton.jsx":"41","/home/pc/Documents/Project/hesmis-front/src/components/common/TabMenu.jsx":"42","/home/pc/Documents/Project/hesmis-front/src/components/common/SubmitButton.jsx":"43","/home/pc/Documents/Project/hesmis-front/src/components/common/AccordionHeader.jsx":"44","/home/pc/Documents/Project/hesmis-front/src/components/common/SelectInput.jsx":"45","/home/pc/Documents/Project/hesmis-front/src/containers/Errors/ErrorBoundary.jsx":"46","/home/pc/Documents/Project/hesmis-front/src/containers/Dashboard/AuthUserLoader.jsx":"47","/home/pc/Documents/Project/hesmis-front/src/config/reducers/payment/paymentReference.js":"48","/home/pc/Documents/Project/hesmis-front/src/config/actions/payment/index.js":"49","/home/pc/Documents/Project/hesmis-front/src/config/actions/app/index.js":"50","/home/pc/Documents/Project/hesmis-front/src/config/actions/setting/index.js":"51","/home/pc/Documents/Project/hesmis-front/src/config/actions/auth/index.js":"52","/home/pc/Documents/Project/hesmis-front/src/config/actions/enrollment/index.js":"53","/home/pc/Documents/Project/hesmis-front/src/config/actions/registration/index.js":"54","/home/pc/Documents/Project/hesmis-front/src/config/actions/result/index.js":"55","/home/pc/Documents/Project/hesmis-front/src/containers/Dashboard/Header.jsx":"56","/home/pc/Documents/Project/hesmis-front/src/containers/Auth/Login.jsx":"57","/home/pc/Documents/Project/hesmis-front/src/containers/Auth/ResetPassword.jsx":"58","/home/pc/Documents/Project/hesmis-front/src/containers/Pages/ComingSoon.jsx":"59","/home/pc/Documents/Project/hesmis-front/src/containers/MyProfile/Avatar.jsx":"60","/home/pc/Documents/Project/hesmis-front/src/containers/Payments/SearchPayment.jsx":"61","/home/pc/Documents/Project/hesmis-front/src/containers/Payments/MyInvoices.jsx":"62","/home/pc/Documents/Project/hesmis-front/src/containers/Payments/MyTransactions.jsx":"63","/home/pc/Documents/Project/hesmis-front/src/containers/Events/CurrentEvents.jsx":"64","/home/pc/Documents/Project/hesmis-front/src/helpers/dataFormatter.js":"65","/home/pc/Documents/Project/hesmis-front/src/containers/Dashboard/ProgrammeTab.jsx":"66","/home/pc/Documents/Project/hesmis-front/src/containers/Auth/LoginForm.jsx":"67","/home/pc/Documents/Project/hesmis-front/src/containers/Auth/ResetForm.jsx":"68","/home/pc/Documents/Project/hesmis-front/src/containers/Services/index.jsx":"69","/home/pc/Documents/Project/hesmis-front/src/containers/MyProfile/index.jsx":"70","/home/pc/Documents/Project/hesmis-front/src/containers/Results/index.jsx":"71","/home/pc/Documents/Project/hesmis-front/src/containers/RegistrationHistory/index.jsx":"72","/home/pc/Documents/Project/hesmis-front/src/config/initialState/index.js":"73","/home/pc/Documents/Project/hesmis-front/src/containers/PaymentReferences/index.jsx":"74","/home/pc/Documents/Project/hesmis-front/src/containers/NewUser/index.jsx":"75","/home/pc/Documents/Project/hesmis-front/src/containers/EnrollmentHistory/index.jsx":"76","/home/pc/Documents/Project/hesmis-front/src/containers/AcademicCalender/index.jsx":"77","/home/pc/Documents/Project/hesmis-front/src/containers/Payments/Invoice.jsx":"78","/home/pc/Documents/Project/hesmis-front/src/config/initialState/result.js":"79","/home/pc/Documents/Project/hesmis-front/src/config/initialState/paymentReference.js":"80","/home/pc/Documents/Project/hesmis-front/src/config/initialState/auth.js":"81","/home/pc/Documents/Project/hesmis-front/src/config/initialState/enrollment.js":"82","/home/pc/Documents/Project/hesmis-front/src/config/initialState/setting.js":"83","/home/pc/Documents/Project/hesmis-front/src/config/initialState/payment.js":"84","/home/pc/Documents/Project/hesmis-front/src/config/initialState/registration.js":"85","/home/pc/Documents/Project/hesmis-front/src/containers/Services/Refund.jsx":"86","/home/pc/Documents/Project/hesmis-front/src/containers/MyProfile/NextOfKin.jsx":"87","/home/pc/Documents/Project/hesmis-front/src/containers/MyProfile/AcademicDetail.jsx":"88","/home/pc/Documents/Project/hesmis-front/src/containers/MyProfile/ChangePassword.jsx":"89","/home/pc/Documents/Project/hesmis-front/src/containers/MyProfile/GuardianDetail.jsx":"90","/home/pc/Documents/Project/hesmis-front/src/containers/PaymentReferences/SinglePaymentReference.jsx":"91","/home/pc/Documents/Project/hesmis-front/src/containers/PaymentReferences/ReferenceModal.jsx":"92","/home/pc/Documents/Project/hesmis-front/src/containers/PaymentReferences/GeneratePaymentReference.jsx":"93","/home/pc/Documents/Project/hesmis-front/src/containers/MyProfile/ProfileData.jsx":"94","/home/pc/Documents/Project/hesmis-front/src/config/initialState/app.js":"95","/home/pc/Documents/Project/hesmis-front/src/containers/RegistrationHistory/SingleRegistrationHistory.jsx":"96","/home/pc/Documents/Project/hesmis-front/src/containers/EnrollmentHistory/Enrollments.jsx":"97","/home/pc/Documents/Project/hesmis-front/src/containers/Results/MyResult.jsx":"98","/home/pc/Documents/Project/hesmis-front/src/helpers/dataTableCustomStyle.js":"99","/home/pc/Documents/Project/hesmis-front/src/containers/Services/ChangeOfProgramme.jsx":"100","/home/pc/Documents/Project/hesmis-front/src/containers/PaymentReferences/helper.js":"101","/home/pc/Documents/Project/hesmis-front/src/containers/PaymentReferences/UnPaidInvoices.jsx":"102","/home/pc/Documents/Project/hesmis-front/src/containers/RegistrationHistory/CourseUnitsTable.jsx":"103","/home/pc/Documents/Project/hesmis-front/src/containers/EnrollmentHistory/SingleEnrollment.jsx":"104","/home/pc/Documents/Project/hesmis-front/src/containers/EnrollmentHistory/GeneratePaymentReference.jsx":"105","/home/pc/Documents/Project/hesmis-front/src/containers/EnrollmentHistory/InvoiceCard.jsx":"106","/home/pc/Documents/Project/hesmis-front/src/containers/RegistrationHistory/Registration.jsx":"107","/home/pc/Documents/Project/hesmis-front/src/containers/EnrollmentHistory/EnrolledStudent.jsx":"108","/home/pc/Documents/Project/hesmis-front/src/containers/Payments/TransactionTables.jsx":"109","/home/pc/Documents/Project/hesmis-front/src/containers/EnrollmentHistory/EnrollForm.jsx":"110","/home/pc/Documents/Project/hesmis-front/src/containers/EnrollmentHistory/InvoiceForm.jsx":"111","/home/pc/Documents/Project/hesmis-front/src/containers/RegistrationHistory/RegisterStudent.jsx":"112","/home/pc/Documents/Project/hesmis-front/src/containers/RegistrationHistory/RegisteredStudent.jsx":"113","/home/pc/Documents/Project/hesmis-front/src/containers/RegistrationHistory/RegistrationForm.jsx":"114","/home/pc/Documents/Project/hesmis-front/src/containers/RegistrationHistory/SelectedCourseUnits.jsx":"115","/home/pc/Documents/Project/hesmis-front/src/containers/RegistrationHistory/StudyYearCourseUnits.jsx":"116","/home/pc/Documents/Project/hesmis-front/src/containers/RegistrationHistory/RegistrationStatusPopUp.jsx":"117","/home/pc/Documents/Project/hesmis-front/src/config/reducers/payment/myTransaction.js":"118","/home/pc/Documents/Project/hesmis-front/src/config/reducers/payment/myInvoice.js":"119","/home/pc/Documents/Project/hesmis-front/src/config/reducers/app/server.js":"120","/home/pc/Documents/Project/hesmis-front/src/config/reducers/app/index.js":"121","/home/pc/Documents/Project/hesmis-front/src/config/reducers/enrollment/index.js":"122","/home/pc/Documents/Project/hesmis-front/src/config/reducers/result/index.js":"123","/home/pc/Documents/Project/hesmis-front/src/config/reducers/registration/index.js":"124","/home/pc/Documents/Project/hesmis-front/src/config/reducers/setting/index.js":"125","/home/pc/Documents/Project/hesmis-front/src/config/reducers/auth/index.js":"126","/home/pc/Documents/Project/hesmis-front/src/containers/Institutions/index.jsx":"127","/home/pc/Documents/Project/hesmis-front/src/containers/Institutions/ChangeOfProgramme.jsx":"128","/home/pc/Documents/Project/hesmis-front/src/containers/Institutions/Refund.jsx":"129","/home/pc/Documents/Project/hesmis-front/src/containers/Scholarships/index.jsx":"130","/home/pc/Documents/Project/hesmis-front/src/containers/Scholarships/Refund.jsx":"131","/home/pc/Documents/Project/hesmis-front/src/containers/Scholarships/ChangeOfProgramme.jsx":"132","/home/pc/Documents/Project/hesmis-front/src/containers/Scholarships/ScholarshipList.jsx":"133","/home/pc/Documents/Project/hesmis-front/src/config/actions/scholarship/index.js":"134","/home/pc/Documents/Project/hesmis-front/src/config/saga/scholarship/index.js":"135","/home/pc/Documents/Project/hesmis-front/src/config/initialState/scholarship.js":"136","/home/pc/Documents/Project/hesmis-front/src/config/reducers/scholarship/index.js":"137","/home/pc/Documents/Project/hesmis-front/src/containers/Scholarships/ViewMore.jsx":"138","/home/pc/Documents/Project/hesmis-front/src/containers/Scholarships/PDFView.jsx":"139","/home/pc/Documents/Project/hesmis-front/src/containers/NewUser/UserList.jsx":"140","/home/pc/Documents/Project/hesmis-front/src/config/initialState/user.js":"141","/home/pc/Documents/Project/hesmis-front/src/config/actions/user/index.js":"142","/home/pc/Documents/Project/hesmis-front/src/config/reducers/user/index.js":"143","/home/pc/Documents/Project/hesmis-front/src/config/saga/user/index.js":"144","/home/pc/Documents/Project/hesmis-front/src/containers/Scholarships/AdvertForm.jsx":"145"},{"size":1365,"mtime":1657307417167,"results":"146","hashOfConfig":"147"},{"size":1927,"mtime":1657477919426,"results":"148","hashOfConfig":"147"},{"size":362,"mtime":1657307417203,"results":"149","hashOfConfig":"147"},{"size":88,"mtime":1657307416783,"results":"150","hashOfConfig":"147"},{"size":3177,"mtime":1657510718409,"results":"151","hashOfConfig":"147"},{"size":676,"mtime":1657307416811,"results":"152","hashOfConfig":"147"},{"size":625,"mtime":1657527556103,"results":"153","hashOfConfig":"147"},{"size":256,"mtime":1657307416811,"results":"154","hashOfConfig":"147"},{"size":332,"mtime":1657307416383,"results":"155","hashOfConfig":"147"},{"size":373,"mtime":1657307415007,"results":"156","hashOfConfig":"147"},{"size":902,"mtime":1657307416959,"results":"157","hashOfConfig":"147"},{"size":631,"mtime":1657307416963,"results":"158","hashOfConfig":"147"},{"size":2189,"mtime":1657307416619,"results":"159","hashOfConfig":"147"},{"size":1187,"mtime":1657525857691,"results":"160","hashOfConfig":"147"},{"size":693,"mtime":1657307414391,"results":"161","hashOfConfig":"147"},{"size":2954,"mtime":1657532821323,"results":"162","hashOfConfig":"147"},{"size":1088,"mtime":1657511503788,"results":"163","hashOfConfig":"147"},{"size":1803,"mtime":1657477729787,"results":"164","hashOfConfig":"147"},{"size":866,"mtime":1657536926743,"results":"165","hashOfConfig":"147"},{"size":3834,"mtime":1657506873511,"results":"166","hashOfConfig":"147"},{"size":346,"mtime":1657307414963,"results":"167","hashOfConfig":"147"},{"size":2320,"mtime":1657307416619,"results":"168","hashOfConfig":"147"},{"size":4344,"mtime":1657537286603,"results":"169","hashOfConfig":"147"},{"size":955,"mtime":1657527200259,"results":"170","hashOfConfig":"147"},{"size":2927,"mtime":1657537194945,"results":"171","hashOfConfig":"147"},{"size":3219,"mtime":1657517965950,"results":"172","hashOfConfig":"147"},{"size":4409,"mtime":1657511961276,"results":"173","hashOfConfig":"147"},{"size":713,"mtime":1657476821230,"results":"174","hashOfConfig":"147"},{"size":2261,"mtime":1657307416483,"results":"175","hashOfConfig":"147"},{"size":741,"mtime":1657360913878,"results":"176","hashOfConfig":"147"},{"size":797,"mtime":1657307415363,"results":"177","hashOfConfig":"147"},{"size":372,"mtime":1657307415075,"results":"178","hashOfConfig":"147"},{"size":3433,"mtime":1657532739615,"results":"179","hashOfConfig":"147"},{"size":710,"mtime":1657307412795,"results":"180","hashOfConfig":"147"},{"size":680,"mtime":1657307413499,"results":"181","hashOfConfig":"147"},{"size":1593,"mtime":1657429002816,"results":"182","hashOfConfig":"147"},{"size":3106,"mtime":1657307413503,"results":"183","hashOfConfig":"147"},{"size":5589,"mtime":1657307413539,"results":"184","hashOfConfig":"147"},{"size":669,"mtime":1657307413767,"results":"185","hashOfConfig":"147"},{"size":546,"mtime":1657307413283,"results":"186","hashOfConfig":"147"},{"size":487,"mtime":1657307413911,"results":"187","hashOfConfig":"147"},{"size":1366,"mtime":1657307414275,"results":"188","hashOfConfig":"147"},{"size":1161,"mtime":1657307413991,"results":"189","hashOfConfig":"147"},{"size":1076,"mtime":1657307412495,"results":"190","hashOfConfig":"147"},{"size":2245,"mtime":1657307413931,"results":"191","hashOfConfig":"147"},{"size":2137,"mtime":1657307416959,"results":"192","hashOfConfig":"147"},{"size":3133,"mtime":1657537346449,"results":"193","hashOfConfig":"147"},{"size":1394,"mtime":1657307416127,"results":"194","hashOfConfig":"147"},{"size":815,"mtime":1657361760134,"results":"195","hashOfConfig":"147"},{"size":525,"mtime":1657476877895,"results":"196","hashOfConfig":"147"},{"size":372,"mtime":1657307415579,"results":"197","hashOfConfig":"147"},{"size":2298,"mtime":1657468997551,"results":"198","hashOfConfig":"147"},{"size":964,"mtime":1657307415203,"results":"199","hashOfConfig":"147"},{"size":1552,"mtime":1657517574328,"results":"200","hashOfConfig":"147"},{"size":303,"mtime":1657307415539,"results":"201","hashOfConfig":"147"},{"size":2116,"mtime":1657509306319,"results":"202","hashOfConfig":"147"},{"size":2738,"mtime":1657511386693,"results":"203","hashOfConfig":"147"},{"size":1025,"mtime":1657307416855,"results":"204","hashOfConfig":"147"},{"size":701,"mtime":1657307417051,"results":"205","hashOfConfig":"147"},{"size":595,"mtime":1657307416979,"results":"206","hashOfConfig":"147"},{"size":5167,"mtime":1657307417091,"results":"207","hashOfConfig":"147"},{"size":6710,"mtime":1657307417079,"results":"208","hashOfConfig":"147"},{"size":2983,"mtime":1657307417091,"results":"209","hashOfConfig":"147"},{"size":4332,"mtime":1657307416959,"results":"210","hashOfConfig":"147"},{"size":13765,"mtime":1657307417167,"results":"211","hashOfConfig":"147"},{"size":2151,"mtime":1657514575700,"results":"212","hashOfConfig":"147"},{"size":1769,"mtime":1657467010865,"results":"213","hashOfConfig":"147"},{"size":5552,"mtime":1657307416839,"results":"214","hashOfConfig":"147"},{"size":1757,"mtime":1657307417147,"results":"215","hashOfConfig":"147"},{"size":5144,"mtime":1657307417027,"results":"216","hashOfConfig":"147"},{"size":2609,"mtime":1657307417123,"results":"217","hashOfConfig":"147"},{"size":3508,"mtime":1657307417119,"results":"218","hashOfConfig":"147"},{"size":510,"mtime":1657521416309,"results":"219","hashOfConfig":"147"},{"size":5986,"mtime":1657307417071,"results":"220","hashOfConfig":"147"},{"size":4470,"mtime":1657529716937,"results":"221","hashOfConfig":"147"},{"size":1915,"mtime":1657307416959,"results":"222","hashOfConfig":"147"},{"size":450,"mtime":1657307416811,"results":"223","hashOfConfig":"147"},{"size":6244,"mtime":1657307417079,"results":"224","hashOfConfig":"147"},{"size":117,"mtime":1657307415871,"results":"225","hashOfConfig":"147"},{"size":324,"mtime":1657307415847,"results":"226","hashOfConfig":"147"},{"size":828,"mtime":1657511228505,"results":"227","hashOfConfig":"147"},{"size":331,"mtime":1657307415779,"results":"228","hashOfConfig":"147"},{"size":243,"mtime":1657463626833,"results":"229","hashOfConfig":"147"},{"size":289,"mtime":1657307415839,"results":"230","hashOfConfig":"147"},{"size":640,"mtime":1657519645077,"results":"231","hashOfConfig":"147"},{"size":890,"mtime":1657307417123,"results":"232","hashOfConfig":"147"},{"size":706,"mtime":1657307417003,"results":"233","hashOfConfig":"147"},{"size":6276,"mtime":1657307416963,"results":"234","hashOfConfig":"147"},{"size":4090,"mtime":1657307416979,"results":"235","hashOfConfig":"147"},{"size":1742,"mtime":1657307416979,"results":"236","hashOfConfig":"147"},{"size":2420,"mtime":1657307417055,"results":"237","hashOfConfig":"147"},{"size":3463,"mtime":1657307417055,"results":"238","hashOfConfig":"147"},{"size":9091,"mtime":1657307417051,"results":"239","hashOfConfig":"147"},{"size":2461,"mtime":1657307417015,"results":"240","hashOfConfig":"147"},{"size":449,"mtime":1657463672758,"results":"241","hashOfConfig":"147"},{"size":3428,"mtime":1657307417119,"results":"242","hashOfConfig":"147"},{"size":1832,"mtime":1657307416923,"results":"243","hashOfConfig":"147"},{"size":7144,"mtime":1657307417123,"results":"244","hashOfConfig":"147"},{"size":839,"mtime":1657307417167,"results":"245","hashOfConfig":"147"},{"size":936,"mtime":1657307417123,"results":"246","hashOfConfig":"147"},{"size":2346,"mtime":1657307417055,"results":"247","hashOfConfig":"147"},{"size":2656,"mtime":1657307417055,"results":"248","hashOfConfig":"147"},{"size":1748,"mtime":1657307417095,"results":"249","hashOfConfig":"147"},{"size":2476,"mtime":1657307416923,"results":"250","hashOfConfig":"147"},{"size":6766,"mtime":1657307416923,"results":"251","hashOfConfig":"147"},{"size":2571,"mtime":1657307416923,"results":"252","hashOfConfig":"147"},{"size":1350,"mtime":1657307417095,"results":"253","hashOfConfig":"147"},{"size":1068,"mtime":1657307416923,"results":"254","hashOfConfig":"147"},{"size":1786,"mtime":1657307417095,"results":"255","hashOfConfig":"147"},{"size":5107,"mtime":1657307416899,"results":"256","hashOfConfig":"147"},{"size":2005,"mtime":1657307416923,"results":"257","hashOfConfig":"147"},{"size":5576,"mtime":1657307417095,"results":"258","hashOfConfig":"147"},{"size":2409,"mtime":1657307417095,"results":"259","hashOfConfig":"147"},{"size":4111,"mtime":1657307417095,"results":"260","hashOfConfig":"147"},{"size":3411,"mtime":1657307417119,"results":"261","hashOfConfig":"147"},{"size":2207,"mtime":1657307417119,"results":"262","hashOfConfig":"147"},{"size":3410,"mtime":1657307417119,"results":"263","hashOfConfig":"147"},{"size":1195,"mtime":1657307416095,"results":"264","hashOfConfig":"147"},{"size":712,"mtime":1657307416063,"results":"265","hashOfConfig":"147"},{"size":622,"mtime":1657307415923,"results":"266","hashOfConfig":"147"},{"size":1196,"mtime":1657476873123,"results":"267","hashOfConfig":"147"},{"size":2003,"mtime":1657307415943,"results":"268","hashOfConfig":"147"},{"size":741,"mtime":1657307416259,"results":"269","hashOfConfig":"147"},{"size":2891,"mtime":1657519486800,"results":"270","hashOfConfig":"147"},{"size":630,"mtime":1657307416259,"results":"271","hashOfConfig":"147"},{"size":5035,"mtime":1657468936007,"results":"272","hashOfConfig":"147"},{"size":1765,"mtime":1657356115207,"results":"273","hashOfConfig":"147"},{"size":936,"mtime":1657356033263,"results":"274","hashOfConfig":"147"},{"size":890,"mtime":1657356033295,"results":"275","hashOfConfig":"147"},{"size":1865,"mtime":1657536328960,"results":"276","hashOfConfig":"147"},{"size":890,"mtime":1657357405639,"results":"277","hashOfConfig":"147"},{"size":936,"mtime":1657357405579,"results":"278","hashOfConfig":"147"},{"size":7028,"mtime":1657448339326,"results":"279","hashOfConfig":"147"},{"size":898,"mtime":1657361960428,"results":"280","hashOfConfig":"147"},{"size":799,"mtime":1657365516396,"results":"281","hashOfConfig":"147"},{"size":137,"mtime":1657366751067,"results":"282","hashOfConfig":"147"},{"size":835,"mtime":1657368637224,"results":"283","hashOfConfig":"147"},{"size":495,"mtime":1657396112888,"results":"284","hashOfConfig":"147"},{"size":13639,"mtime":1657433744626,"results":"285","hashOfConfig":"147"},{"size":6232,"mtime":1657527773707,"results":"286","hashOfConfig":"147"},{"size":109,"mtime":1657521394586,"results":"287","hashOfConfig":"147"},{"size":472,"mtime":1657521635555,"results":"288","hashOfConfig":"147"},{"size":745,"mtime":1657526096768,"results":"289","hashOfConfig":"147"},{"size":685,"mtime":1657527515587,"results":"290","hashOfConfig":"147"},{"size":7661,"mtime":1657536513585,"results":"291","hashOfConfig":"147"},{"filePath":"292","messages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},"1d86lcz",{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"294"},{"filePath":"298","messages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"300","messages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"302","messages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"304","messages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"306","messages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"308","messages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"310","messages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"312","messages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"314","messages":"315","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"316","messages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"318","messages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"321","messages":"322","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"323","messages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"325","messages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"294"},{"filePath":"328","messages":"329","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"294"},{"filePath":"331","messages":"332","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"294"},{"filePath":"334","messages":"335","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"336","messages":"337","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"294"},{"filePath":"339","messages":"340","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"341","messages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"343","messages":"344","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"345","messages":"346","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"347","messages":"348","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"349","messages":"350","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"352"},{"filePath":"353","messages":"354","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"294"},{"filePath":"356","messages":"357","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"358","messages":"359","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"360","messages":"361","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"362","messages":"363","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"364","messages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"366","messages":"367","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"368","messages":"369","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"370","messages":"371","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"372","messages":"373","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"374","messages":"375","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"376","messages":"377","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"378","messages":"379","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"380","messages":"381","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"382","messages":"383","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"384","messages":"385","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"386","messages":"387","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"388","messages":"389","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"294"},{"filePath":"391","messages":"392","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"393","messages":"394","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"395","messages":"396","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"397","messages":"398","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"399","messages":"400","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"401","messages":"402","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"403","messages":"404","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"405","messages":"406","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"407","messages":"408","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"409","messages":"410","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"411","messages":"412","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"413","messages":"414","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"415","usedDeprecatedRules":"294"},{"filePath":"416","messages":"417","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"418","usedDeprecatedRules":"294"},{"filePath":"419","messages":"420","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"421","messages":"422","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"423","messages":"424","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"425","messages":"426","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"427","usedDeprecatedRules":"320"},{"filePath":"428","messages":"429","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"430","usedDeprecatedRules":"320"},{"filePath":"431","messages":"432","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"433","usedDeprecatedRules":"320"},{"filePath":"434","messages":"435","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"436","usedDeprecatedRules":"320"},{"filePath":"437","messages":"438","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"439","messages":"440","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"441","usedDeprecatedRules":"294"},{"filePath":"442","messages":"443","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"444","messages":"445","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"446","usedDeprecatedRules":"294"},{"filePath":"447","messages":"448","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"449","messages":"450","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"451","usedDeprecatedRules":"320"},{"filePath":"452","messages":"453","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"454","usedDeprecatedRules":"320"},{"filePath":"455","messages":"456","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"457","usedDeprecatedRules":"320"},{"filePath":"458","messages":"459","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"460","messages":"461","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"462","usedDeprecatedRules":"320"},{"filePath":"463","messages":"464","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"465","usedDeprecatedRules":"294"},{"filePath":"466","messages":"467","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"468","usedDeprecatedRules":"320"},{"filePath":"469","messages":"470","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"471","messages":"472","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"473","messages":"474","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"475","messages":"476","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"477","messages":"478","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"479","messages":"480","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"481","messages":"482","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"483","messages":"484","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"485","messages":"486","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"487","messages":"488","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"489","messages":"490","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"491","messages":"492","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"493","messages":"494","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"495","usedDeprecatedRules":"320"},{"filePath":"496","messages":"497","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"498","messages":"499","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"500","messages":"501","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"502","usedDeprecatedRules":"320"},{"filePath":"503","messages":"504","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"505","usedDeprecatedRules":"320"},{"filePath":"506","messages":"507","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"508","messages":"509","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"510","messages":"511","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"512","messages":"513","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"514","messages":"515","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"516","messages":"517","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"518","messages":"519","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"520","messages":"521","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"522","messages":"523","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"524","messages":"525","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"526","messages":"527","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"528","messages":"529","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"530","usedDeprecatedRules":"320"},{"filePath":"531","messages":"532","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"533","messages":"534","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"535","messages":"536","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"537","messages":"538","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"539","messages":"540","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"541","usedDeprecatedRules":"320"},{"filePath":"542","messages":"543","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"544","messages":"545","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"546","usedDeprecatedRules":"320"},{"filePath":"547","messages":"548","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"549","messages":"550","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"551","messages":"552","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"553","messages":"554","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"555","messages":"556","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"557","messages":"558","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"559","messages":"560","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"561","messages":"562","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"563","messages":"564","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"565","messages":"566","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"567","messages":"568","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"569","messages":"570","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"352"},{"filePath":"571","messages":"572","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"573","messages":"574","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"575","messages":"576","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"577","messages":"578","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"579","messages":"580","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"581","messages":"582","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"583","usedDeprecatedRules":"294"},{"filePath":"584","messages":"585","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"586"},{"filePath":"587","messages":"588","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"589","messages":"590","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"591","usedDeprecatedRules":"294"},{"filePath":"592","messages":"593","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"594","messages":"595","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"596","usedDeprecatedRules":"294"},{"filePath":"597","messages":"598","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"599","messages":"600","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"601","usedDeprecatedRules":"294"},{"filePath":"602","messages":"603","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"604","messages":"605","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"606","usedDeprecatedRules":"294"},{"filePath":"607","messages":"608","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"609","usedDeprecatedRules":"294"},{"filePath":"610","messages":"611","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"612","messages":"613","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"614","messages":"615","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"616","usedDeprecatedRules":"294"},{"filePath":"617","messages":"618","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"619","messages":"620","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/pc/Documents/Project/hesmis-front/src/index.js",[],["621","622"],"/home/pc/Documents/Project/hesmis-front/src/App.js",["623","624"],"import { isEmpty } from 'lodash';\nimport React, { Suspense, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { useToasts } from 'react-toast-notifications';\nimport { PageLoader } from './components/common';\nimport { appActions } from './config/actions';\nimport RoutePaths from './config/routes/RoutePaths';\nimport Dashboard from './containers/Dashboard';\nimport PageNotFound from './containers/Errors/PageNotFound';\nimport usePrevious from './containers/Hooks/usePrevious';\nimport './custom.scss';\n\nfunction App() {\n  const dispatch = useDispatch();\n  const { addToast, removeAllToasts } = useToasts();\n  const { serverSuccess, serverError } = useSelector((state) => state.server);\n  const { metadata } = useSelector((state) => state.app);\n  const prevState = usePrevious({ serverSuccess, serverError });\n\n  useEffect(() => {\n    if (isEmpty(metadata)) {\n      dispatch(appActions.getMetadata());\n    }\n  }, []); \n\n  useEffect(() => {\n    if (!isEmpty(prevState)) {\n      if (!isEmpty(serverError) && serverError !== prevState.serverError) {\n        removeAllToasts();\n        addToast(serverError?.server?.message, {\n          autoDismiss: true,\n          appearance: 'error',\n          autoDismissTimeout: 6000,\n        });\n      }\n      if (\n        !isEmpty(serverSuccess) &&\n        serverSuccess !== prevState.serverSuccess\n      ) {\n        addToast(serverSuccess?.server?.message, {\n          autoDismiss: true,\n          appearance: 'success',\n        });\n      }\n    }\n  }, [serverError, serverSuccess]);\n\n  return (\n    <Suspense fallback={<PageLoader />}>\n      <Router>\n        <Switch>\n          <Route exact path={RoutePaths.dashboard.path} component={Dashboard} />\n          <Route path=\"*\" component={PageNotFound} />\n        </Switch>\n      </Router>\n    </Suspense>\n  );\n}\n\nexport default App;","/home/pc/Documents/Project/hesmis-front/src/reportWebVitals.js",[],"/home/pc/Documents/Project/hesmis-front/src/config/services/historyService.js",[],"/home/pc/Documents/Project/hesmis-front/src/config/services/httpService.js",[],"/home/pc/Documents/Project/hesmis-front/src/config/store/index.js",[],"/home/pc/Documents/Project/hesmis-front/src/config/saga/index.js",[],"/home/pc/Documents/Project/hesmis-front/src/config/services/storageService.js",[],"/home/pc/Documents/Project/hesmis-front/src/config/routes/RoutePaths.js",[],"/home/pc/Documents/Project/hesmis-front/src/components/shared/index.jsx",[],"/home/pc/Documents/Project/hesmis-front/src/containers/Errors/PageNotFound.jsx",[],"/home/pc/Documents/Project/hesmis-front/src/containers/Hooks/usePrevious.jsx",[],"/home/pc/Documents/Project/hesmis-front/src/config/saga/payment/paymentReference.js",[],["625","626"],"/home/pc/Documents/Project/hesmis-front/src/config/actions/index.js",[],"/home/pc/Documents/Project/hesmis-front/src/components/common/index.jsx",[],"/home/pc/Documents/Project/hesmis-front/src/components/shared/SidebarMenu.js",["627","628","629","630","631","632","633","634","635","636","637","638","639"],"/* eslint-disable react/react-in-jsx-scope */\nimport {\n  CalendarOutlined,\n  FieldBinaryOutlined,\n  EditOutlined,\n  FileDoneOutlined,\n  ReconciliationOutlined,\n  DollarCircleOutlined,\n  UserOutlined,\n  FileProtectOutlined,\n} from '@ant-design/icons';\nimport {\n  FaClipboardList,\n  FaPaperclip,\n  FaRegCopy,\n  FaRegEdit,\n  FaSearchDollar,\n  FaTasks,\n  FaUserEdit,\n  FaUserGraduate,\n  FaUser,\n} from 'react-icons/fa';\nimport MenuList from '../../config/routes/MenuList';\n\nconst sideBarMenu = [\n  {\n    title: 'Scholarships',\n    key: 'scholarships',\n    icon: <ReconciliationOutlined />,\n    routes: [\n      {\n        ...MenuList.Scholarships,\n        icon: <FaRegEdit />,\n      },\n    ],\n  },\n  {\n    title: 'Users',\n    key: 'registered-users',\n    icon: <ReconciliationOutlined />,\n    routes: [\n      {\n        ...MenuList.UserList,\n        icon: <FaUser />,\n      },\n      {\n        ...MenuList.UserRegister,\n        icon: <UserOutlined />,\n      },\n    ],\n  },\n /* {\n    title: 'Institutions',\n    key: 'institution',\n    icon: <ReconciliationOutlined />,\n    routes: [\n      {\n        ...MenuList.Institutions,\n        icon: <FaRegEdit />,\n      }\n    ],\n  },\n  {\n    title: 'Payments & Invoices',\n    key: 'payments',\n    icon: <DollarCircleOutlined />,\n    routes: [\n      {\n        ...MenuList.MyInvoice,\n        icon: <FaPaperclip />,\n      },\n      {\n        ...MenuList.MyTransaction,\n        icon: <FileProtectOutlined />,\n      },\n    ],\n  },\n  {\n    ...MenuList.SearchPayment,\n    icon: <FaSearchDollar />,\n  },\n  {\n    ...MenuList.PaymentReference,\n    icon: <FieldBinaryOutlined />,\n  },\n  {\n    title: 'Enrollment & Registration',\n    key: 'registration-and-enrollment',\n    icon: <EditOutlined />,\n    routes: [\n      {\n        ...MenuList.SelfEnrollment,\n        icon: <FaUserEdit />,\n      },\n      {\n        ...MenuList.EnrollmentHistory,\n        icon: <FileDoneOutlined />,\n      },\n      {\n        ...MenuList.RegistrationHistory,\n        icon: <FileDoneOutlined />,\n      },\n    ],\n  },\n  {\n    title: 'My Programme',\n    key: 'my-programmes',\n    icon: <FaUserGraduate />,\n    routes: [\n      {\n        ...MenuList.MyResults,\n        icon: <FaTasks />,\n      },\n    ],\n  },\n  {\n    title: 'Services',\n    key: 'services',\n    icon: <ReconciliationOutlined />,\n    routes: [\n      {\n        ...MenuList.Services,\n        icon: <FaRegEdit />,\n      },\n      {\n        title: 'Service History',\n        action: 'service-history',\n        icon: <FaClipboardList />,\n      },\n      {\n        title: 'Complaints',\n        action: 'complaints',\n        icon: <FaRegCopy />,\n      },\n    ],\n  },\n  {\n    ...MenuList.ProfileData,\n    icon: <UserOutlined />,\n  },\n  {\n    ...MenuList.UserRegister,\n    icon: <UserOutlined />,\n  },\n  {\n    ...MenuList.AcademicCalendar,\n    icon: <CalendarOutlined />,\n  },*/\n];\n\nexport default sideBarMenu;\n","/home/pc/Documents/Project/hesmis-front/src/containers/Dashboard/index.jsx",["640"],"import { isEmpty } from 'lodash';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AuthLayout } from '../../components/shared';\nimport MainLayout from '../../components/shared/MainLayout';\nimport { authActions } from '../../config/actions';\nimport { getAccessToken } from '../../config/services/storageService';\nimport ErrorBoundary from '../Errors/ErrorBoundary';\nimport AuthUserLoader from './AuthUserLoader';\n\nconst Dashboard = () => {\n  const dispatch = useDispatch();\n  const { authUser, isAuthenticated } = useSelector((state) => state.auth);\n  const { selectedMenu } = useSelector((state) => state.setting);\n\n  const accessToken = getAccessToken();\n\n  useEffect(() => {\n    if (!isEmpty(accessToken)) dispatch(authActions.setIsAuthenticated(true));\n  }, [accessToken, selectedMenu]);\n\n  return (\n    <ErrorBoundary>\n      {isAuthenticated === true ? (\n        <>{isEmpty(authUser) ? <AuthUserLoader /> : <MainLayout />}</>\n      ) : (\n        <AuthLayout />\n      )}\n    </ErrorBoundary>\n  );\n};\n\nexport default Dashboard;\n","/home/pc/Documents/Project/hesmis-front/src/components/shared/AuthLayout.jsx",["641","642","643","644","645","646"],"import { Image } from 'antd';\nimport { isEmpty } from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport { Col, Container, Row } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Logo from '../../assets/img/default.png';\nimport { appActions } from '../../config/actions';\nimport RoutePaths from '../../config/routes/RoutePaths';\nimport Login from '../../containers/Auth/Login';\nimport ResetPassword from '../../containers/Auth/ResetPassword';\nimport DataSpinner from '../common/DataSpinner';\n\nconst AuthLayout = () => {\n  const [currentPage, setCurrentPage] = useState('login');\n\n  return (\n    <div className=\"text-primary overflow-auto\">\n      <Container fluid>\n        <Row className=\"min-vh-100 justify-content-center py-4 g-0\">\n          <Col md={4} lg={3} sm={6} className=\"my-auto mx-center\">\n            <div className=\"mx-auto text-center\">\n              <Image\n                src={`${process.env.REACT_APP_INSTITUTION_LOGO_PATH}/logo.png`}\n                alt=\"System Logo\"\n                style={{ maxWidth: '200px' }}\n                className=\"text-center\"\n                fallback={Logo}\n                preview={false}\n                draggable={false}\n              />\n            </div>\n            <div className=\"align-centre mt-1 font600 text-uppercase text-md mb-4 mt-3\">\n              ADMIN PORTAL\n            </div>\n            {(currentPage === RoutePaths.login.path && (\n              <Login setCurrentPage={setCurrentPage} />\n            )) ||\n              (currentPage === RoutePaths.resetPassword.path && (\n                <ResetPassword setCurrentPage={setCurrentPage} />\n              )) || <div>PAGE NOT FOUND</div>}\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default AuthLayout;\n","/home/pc/Documents/Project/hesmis-front/src/components/shared/SideTitle.jsx",["647"],"/home/pc/Documents/Project/hesmis-front/src/components/shared/MainLayout.jsx",["648","649","650","651"],"import { Drawer, Layout } from 'antd';\nimport { isEmpty } from 'lodash';\nimport React, { useEffect } from 'react';\nimport Helmet from 'react-helmet';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useMediaQuery } from 'react-responsive';\nimport { appActions, authActions, settingActions } from '../../config/actions';\nimport MenuList from '../../config/routes/MenuList';\nimport HeaderComponent from '../../containers/Dashboard/Header';\nimport ComingSoon from '../../containers/Pages/ComingSoon';\nimport MainHeader from './MainHeader';\nimport SideBar from './SideBar';\nimport SideTitle from './SideTitle';\n\nconst { Sider, Content, Footer } = Layout;\n\nconst MainLayout = () => {\n  const dispatch = useDispatch();\n  const { selectedMenu, isToggled } = useSelector((state) => state.setting);\n  const { authUser, currentStudentProgramme } = useSelector(\n    (state) => state.auth\n  );\n // const { institutionStructure } = useSelector((state) => state.app);\n  const isMobileDevice = useMediaQuery({ maxWidth: 767 });\n\n  useEffect(() => {\n    if (isEmpty(authUser)) {\n      dispatch(authActions.getAuthUser());\n    }\n   /* if (isEmpty(institutionStructure))\n      dispatch(appActions.getInstitutionStructure());*/\n  }, []);\n\n  useEffect(() => {\n    if (isEmpty(selectedMenu)) {\n      dispatch(settingActions.setSelectedMenu(MenuList.Scholarships));\n    }\n  }, [selectedMenu]);\n\n  const renderSwitchStatement = () => {\n    let component = ComingSoon;\n    const findMenuKey = Object.keys(MenuList).find(\n      (menu) => MenuList[menu].action === selectedMenu.action\n    );\n\n    if (findMenuKey) {\n      component = MenuList[findMenuKey].Component;\n    }\n    return React.createElement(component);\n  };\n\n  const hideOrShowSideBar = () => {\n    dispatch(settingActions.setIsToggled(!isToggled));\n  };\n\n  const getToggleMargin = () => {\n    if (isMobileDevice) return 0;\n\n    return isToggled ? 0 : 260;\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>{selectedMenu?.title}</title>\n      </Helmet>\n\n      <Layout style={{ minHeight: '100vh' }} key={`currentStudentProgramme.id`}>{/* change key here */}\n        {isMobileDevice ? (\n          <Drawer\n            title={<SideTitle />}\n            placement=\"left\"\n            closable={false}\n            onClose={hideOrShowSideBar}\n            visible={isToggled}\n            getContainer={false}\n            className=\"p-0\"\n            bodyStyle={{ padding: 0 }}\n            headerStyle={{ padding: '10px 10px' }}\n            style={{\n              overflow: 'auto',\n              height: '100vh',\n              position: 'fixed',\n              left: 0,\n            }}\n          >\n            <SideBar />\n          </Drawer>\n        ) : (\n          <Sider\n            theme=\"light\"\n            breakpoint=\"md\"\n            className=\"border-end\"\n            width={260}\n            collapsible\n            reverseArrow\n            collapsedWidth={0}\n            collapsed={isToggled}\n            onCollapse={hideOrShowSideBar}\n            style={{\n              overflow: 'auto',\n              height: '100vh',\n              position: 'fixed',\n              left: 0,\n            }}\n          >\n            <div className=\"bg-white font600 p-2\">\n              <SideTitle />\n            </div>\n            <SideBar />\n          </Sider>\n        )}\n\n        <Layout\n          style={{\n            marginLeft: getToggleMargin(),\n            transition: 'all 0.2s',\n          }}\n        >\n          <MainHeader />\n          <Content>\n            <HeaderComponent />\n            <div className=\"p-3\">{renderSwitchStatement()}</div>\n          </Content>\n          <Footer className=\"bg-white text-sm text-muted font600 py-3 border-top text-center\">\n            &copy; School System\n          </Footer>\n        </Layout>\n      </Layout>\n    </>\n  );\n};\n\nexport default MainLayout;\n","/home/pc/Documents/Project/hesmis-front/src/components/shared/SnackBar.jsx",[],"/home/pc/Documents/Project/hesmis-front/src/config/saga/payment/index.js",[],"/home/pc/Documents/Project/hesmis-front/src/components/shared/MainHeader.jsx",[],"/home/pc/Documents/Project/hesmis-front/src/config/reducers/index.js",[],"/home/pc/Documents/Project/hesmis-front/src/components/shared/SideBar.jsx",[],"/home/pc/Documents/Project/hesmis-front/src/config/saga/registration/index.js",["652","653","654","655"],"import { takeLatest, fork, put } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { registrationActions } from '../../actions';\n\nfunction* getRegistrationEvent(actions) {\n  try {\n    const response = yield axios({\n      url: '/student-portal/registration/event',\n      method: 'GET',\n      params: actions.data,\n    });\n    yield put({\n      type: registrationActions.GET_REGISTRATION_EVENT_SUCCESS,\n      data: response.data,\n    });\n  } catch (error) {\n    yield put({\n      type: registrationActions.GET_REGISTRATION_EVENT_ERROR,\n      error: error.data,\n    });\n  }\n}\n\nfunction* getRegistrationHistory(actions) {\n  try {\n    const response = yield axios({\n      url: `/student-portal/registration/history/${actions.studentProgrammeId}`,\n      method: 'GET',\n    });\n    yield put({\n      type: registrationActions.GET_REGISTRATION_HISTORY_SUCCESS,\n      data: response.data,\n    });\n  } catch (error) {\n    yield put({\n      type: registrationActions.GET_REGISTRATION_HISTORY_SUCCESS,\n      error: error.data,\n    });\n  }\n}\n\nfunction* registerStudent(actions) {\n  try {\n    const response = yield axios({\n      url: '/student-portal/registration/event/register',\n      method: 'POST',\n      data: actions.data,\n    });\n    yield put({\n      type: registrationActions.REGISTER_STUDENT_SUCCESS,\n      data: response.data,\n    });\n    /*yield put({\n      type: enrollmentActions.GET_CURRENT_EVENTS_REQUEST,\n    });*/\n  } catch (error) {\n    yield put({\n      type: registrationActions.REGISTER_STUDENT_ERROR,\n      error: error.data,\n    });\n  }\n}\n\nfunction* getCourseUnits(actions) {\n  try {\n    const response = yield axios({\n      url: `/student-portal/registration/course-units/${actions.programmeId}`,\n      method: 'GET',\n      params: actions.data,\n    });\n    yield put({\n      type: registrationActions.GET_COURSE_UNITS_SUCCESS,\n      data: response.data,\n    });\n  } catch (error) {\n    yield put({\n      type: registrationActions.GET_COURSE_UNITS_ERROR,\n      error: error.data,\n    });\n  }\n}\n\nfunction* getRegisteredUsers(actions) {\n  try {\n    const response = yield axios({\n      url: `/authenticate-user`,\n      method: 'GET',\n      params: actions.data,\n    });\n    yield put({\n      type: registrationActions.GET_REGISTERED_USERS_SUCCESS ,\n      data: response.data,\n    });\n  } catch (error) {\n    yield put({\n      type: registrationActions.GET_REGISTERED_USERS_ERROR,\n      error: error.data,\n    });\n  }\n}\nfunction* watchGetRegistrationEvent() {\n  yield takeLatest(\n    registrationActions.GET_REGISTRATION_EVENT_REQUEST,\n    getRegistrationEvent\n  );\n}\n\nfunction* watchGetRegistrationHistory() {\n  yield takeLatest(\n    registrationActions.GET_REGISTRATION_HISTORY_REQUEST,\n    getRegistrationHistory\n  );\n}\n\nfunction* watchRegisterStudent() {\n  yield takeLatest(\n    registrationActions.REGISTER_STUDENT_REQUEST,\n    registerStudent\n  );\n}\n\nfunction* watchGetRegisteredUsers() {\n  yield takeLatest(\n    registrationActions.GET_REGISTERED_USERS_REQUEST,\n    getRegisteredUsers\n  );\n}\n\nconst forkFunctions = [\n  //fork(watchGetRegistrationEvent),\n  //fork(watchGetRegistrationHistory),\n  //fork(watchRegisterStudent),\n  fork(watchGetRegisteredUsers),\n];\n\nexport default forkFunctions;\n",["656","657"],"/home/pc/Documents/Project/hesmis-front/src/config/saga/auth/index.js",["658","659"],"import { takeLatest, fork, put } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { authActions } from '../../actions';\nimport { clearToken } from '../../services/storageService';\n\nfunction* loginUser(actions) {\n  try {\n    console.log(actions.data);\n    const response = yield axios({\n      url: '/authenticate-user',\n      method: 'POST',\n      data: actions.data,\n    });\n    yield put({\n      type: authActions.LOGIN_USER_SUCCESS,\n      data: response,\n    });\n    yield put({\n      type: authActions.GET_AUTH_USER_REQUEST,\n    });\n  } catch (error) {\n    console.log(error)\n    yield put({\n      type: authActions.LOGIN_USER_ERROR,\n      error: error.data,\n    });\n  }\n}\n\nfunction* logoutUser() {\n  try {\n    const response = yield axios({\n      url: '/student-portal/auth/logout',\n      method: 'POST',\n    });\n    clearToken();\n    yield put({\n      type: authActions.LOGOUT_SUCCESS,\n      data: response,\n    });\n    yield put({\n      type: authActions.REMOVE_AUTH_USER,\n    });\n    yield put({\n      type: authActions.SET_IS_AUTHENTICATED,\n      payload: false,\n    });\n  } catch (error) {\n    if (error.status === 403 || error.status === 401) clearToken();\n    yield put({\n      type: authActions.LOGOUT_ERROR,\n      error: error.data,\n    });\n  }\n}\n\nfunction* fetchAuthUser() {\n  try {\n    const response = yield axios({\n      url: '/student-portal/auth/profile',\n      method: 'GET',\n    });\n    yield put({\n      type: authActions.GET_AUTH_USER_SUCCESS,\n      data: response.data,\n    });\n    yield put({\n      type: authActions.SET_AUTH_USER,\n      user: response.data,\n    });\n    yield put({\n      type: authActions.GET_AUTH_USER_ACCOUNT_BALANCE_REQUEST,\n    });\n  } catch (error) {\n    yield put({\n      type: authActions.GET_AUTH_USER_ERROR,\n      error: error.data,\n    });\n  }\n}\n\n\n\nfunction* getStudentProgrammes() {\n  try {\n    const response = yield axios({\n      url: '/student-portal/auth/academic-records',\n      method: 'GET',\n    });\n    yield put({\n      type: authActions.GET_STUDENT_PROGRAMMES_SUCCESS,\n      data: response.data,\n    });\n  } catch (error) {\n    yield put({\n      type: authActions.GET_STUDENT_PROGRAMMES_ERROR,\n      error: error.data,\n    });\n  }\n}\n\nfunction* changePassword(action) {\n  try {\n    const response = yield axios({\n      url: `/student-portal/auth/change-password`,\n      method: 'PUT',\n      data: action.data,\n    });\n    yield put({\n      type: authActions.CHANGE_PASSWORD_SUCCESS,\n      data: response,\n    });\n  } catch (error) {\n    yield put({\n      type: authActions.CHANGE_PASSWORD_ERROR,\n      error: error.data,\n    });\n  }\n}\n\nfunction* requestToken(action) {\n  try {\n    const response = yield axios({\n      url: `/student-portal/auth/request-token`,\n      method: 'POST',\n      data: action.data,\n    });\n    yield put({\n      type: authActions.REQUEST_TOKEN_SUCCESS,\n      data: response,\n    });\n  } catch (error) {\n    yield put({\n      type: authActions.REQUEST_TOKEN_ERROR,\n      error: error.data,\n    });\n  }\n}\n\nfunction* resetPassword(action) {\n  try {\n    const response = yield axios({\n      url: `/student-portal/auth/reset-password`,\n      method: 'PUT',\n      data: action.data,\n    });\n    yield put({\n      type: authActions.RESET_PASSWORD_SUCCESS,\n      data: response,\n    });\n  } catch (error) {\n    yield put({\n      type: authActions.RESET_PASSWORD_ERROR,\n      error: error.data,\n    });\n  }\n}\n\nfunction* watchloginUser() {\n  yield takeLatest(authActions.LOGIN_USER_REQUEST, loginUser);\n}\n\nfunction* watchLogout() {\n  yield takeLatest(authActions.LOGOUT_REQUEST, logoutUser);\n}\n\nfunction* watchFetchAuthUser() {\n  yield takeLatest(authActions.GET_AUTH_USER_REQUEST, fetchAuthUser);\n}\n\nfunction* watchGetStudentProgrammes() {\n  yield takeLatest(\n    authActions.GET_STUDENT_PROGRAMMES_REQUEST,\n    getStudentProgrammes\n  );\n}\n\n\nfunction* watchChangePassword() {\n  yield takeLatest(authActions.CHANGE_PASSWORD_REQUEST, changePassword);\n}\n\nfunction* watchRequestToken() {\n  yield takeLatest(authActions.REQUEST_TOKEN_REQUEST, requestToken);\n}\n\nfunction* watchResetPassword() {\n  yield takeLatest(authActions.RESET_PASSWORD_REQUEST, resetPassword);\n}\n\nconst forkFunctions = [\n  fork(watchloginUser),\n  fork(watchLogout),\n  fork(watchFetchAuthUser),\n  //fork(watchGetStudentProgrammes),\n  fork(watchChangePassword),\n  //fork(watchRequestToken),\n  fork(watchResetPassword),\n];\n\nexport default forkFunctions;\n","/home/pc/Documents/Project/hesmis-front/src/config/saga/app/index.js",[],"/home/pc/Documents/Project/hesmis-front/src/config/saga/enrollment/index.js",[],"/home/pc/Documents/Project/hesmis-front/src/config/saga/result/index.js",[],"/home/pc/Documents/Project/hesmis-front/src/config/actions/payment/paymentReference.js",[],"/home/pc/Documents/Project/hesmis-front/src/config/actions/app/server.js",[],"/home/pc/Documents/Project/hesmis-front/src/config/routes/MenuList.js",[],"/home/pc/Documents/Project/hesmis-front/src/components/common/AlertMessage.jsx",[],"/home/pc/Documents/Project/hesmis-front/src/components/common/DataSpinner.jsx",[],"/home/pc/Documents/Project/hesmis-front/src/components/common/CustomModal.jsx",[],"/home/pc/Documents/Project/hesmis-front/src/components/common/InputSelectField.jsx",[],"/home/pc/Documents/Project/hesmis-front/src/components/common/InputText.jsx",[],"/home/pc/Documents/Project/hesmis-front/src/components/common/PageLoader.jsx",[],"/home/pc/Documents/Project/hesmis-front/src/components/common/DataNotFound.jsx",[],"/home/pc/Documents/Project/hesmis-front/src/components/common/ReloadButton.jsx",[],"/home/pc/Documents/Project/hesmis-front/src/components/common/TabMenu.jsx",[],"/home/pc/Documents/Project/hesmis-front/src/components/common/SubmitButton.jsx",[],"/home/pc/Documents/Project/hesmis-front/src/components/common/AccordionHeader.jsx",["660"],"import React from 'react';\nimport PropTypes, { any } from 'prop-types';\nimport { Accordion } from 'react-bootstrap';\n//import { useAccordionButton } from 'react-bootstrap/AccordionButton';\n\nconst AccordionHeader = ({\n  activeKey,\n  setActiveKey,\n  eventKey,\n  children,\n  ...props\n}) => {\n  const handleActiveKeyState = () => {\n    if (activeKey === eventKey) {\n      setActiveKey(null);\n    } else {\n      setActiveKey(eventKey);\n    }\n  };/*\n  const handleOnToggleClick = useAccordionButton(eventKey, () => {\n    handleActiveKeyState();\n  });*/\n\n  return (\n    <>\n      <Accordion.Header\n        className=\"text-info bg-white\"\n        {...props}\n      >\n        <div className=\"text-sm font600\">{children}</div>\n      </Accordion.Header>\n    </>\n  );\n};\n\nAccordionHeader.defaultProps = {\n  activeKey: 1,\n  eventKey: null,\n  children: null,\n};\n\nAccordionHeader.propTypes = {\n  activeKey: PropTypes.oneOfType([any]),\n  setActiveKey: PropTypes.func.isRequired,\n  eventKey: PropTypes.oneOfType([any]),\n  children: PropTypes.oneOfType([any]),\n};\n\nexport default AccordionHeader;\n","/home/pc/Documents/Project/hesmis-front/src/components/common/SelectInput.jsx",[],"/home/pc/Documents/Project/hesmis-front/src/containers/Errors/ErrorBoundary.jsx",[],"/home/pc/Documents/Project/hesmis-front/src/containers/Dashboard/AuthUserLoader.jsx",["661","662","663"],"/home/pc/Documents/Project/hesmis-front/src/config/reducers/payment/paymentReference.js",[],"/home/pc/Documents/Project/hesmis-front/src/config/actions/payment/index.js",[],"/home/pc/Documents/Project/hesmis-front/src/config/actions/app/index.js",[],"/home/pc/Documents/Project/hesmis-front/src/config/actions/setting/index.js",[],"/home/pc/Documents/Project/hesmis-front/src/config/actions/auth/index.js",[],"/home/pc/Documents/Project/hesmis-front/src/config/actions/enrollment/index.js",[],"/home/pc/Documents/Project/hesmis-front/src/config/actions/registration/index.js",[],"/home/pc/Documents/Project/hesmis-front/src/config/actions/result/index.js",[],"/home/pc/Documents/Project/hesmis-front/src/containers/Dashboard/Header.jsx",["664","665","666","667","668","669","670","671","672","673"],"import { isEmpty } from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport { ButtonGroup, Card, Button } from 'react-bootstrap';\nimport { FaUserCheck, FaUserTimes } from 'react-icons/fa';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AlertMessage, DataSpinner } from '../../components/common';\nimport { appActions } from '../../config/actions';\nimport ProgrammeTab from './ProgrammeTab';\n\nconst Header = () => {\n  const dispatch = useDispatch();\n  const [isRegistered, setIsRegistered] = useState(true);//remove this later\n  /*const { gettingCurrentSemester, currentEvents } = useSelector(\n    (state) => state.enrollment\n  );\n  const { currentStudentProgramme, accountBalance } = useSelector(\n    (state) => state.auth\n  );\n  const { currentSemester } = useSelector((state) => state.app);\n\n  const reloadCurrentSemester = () => {\n    dispatch(appActions.getCurrentSemester());\n    if (!isEmpty(currentStudentProgramme))\n      dispatch(enrollmentActions.getCurrentEvents(currentStudentProgramme?.id));\n  };\n*/\n  useEffect(() => {\n   /* if (isEmpty(currentSemester)) {\n      reloadCurrentSemester();\n    }*/\n  }, []);\n/*\n  useEffect(() => {\n    if (!isEmpty(currentEvents)) {\n      setIsRegistered(!isEmpty(currentEvents.studentRegistration));\n    }\n  }, [currentEvents]);*/\n\n  const buttonOptions = [\n    {\n      id: 1,\n      title: 'Current Yr',\n      value: '2017/2018',//changed\n      color: 'info',\n    },\n    {\n      id: 2,\n      title: 'Current Sem',\n      value: 'Semester One',//cnhaged\n      color: 'info',\n    },\n    {\n      id: 3,\n      title: 'Reg. Status',\n      value: isRegistered ? 'REGISTERED' : 'NOT REGISTERED',\n      color: isRegistered ? 'success' : 'danger',\n      icon: isRegistered ? (\n        <FaUserCheck className=\"me-1\" />\n      ) : (\n        <FaUserTimes className=\"me-1\" />\n      ),\n    },\n  ];\n  return (\n    <>\n      <ProgrammeTab />\n      <Card className=\"border-top border-bottom border-start-0 border-end-0\">\n        <Card.Header className=\"py-2 px-3 border-0 mb-0\">\n        </Card.Header>\n      </Card>\n    </>\n  );\n};\n\nexport default Header;\n","/home/pc/Documents/Project/hesmis-front/src/containers/Auth/Login.jsx",["674","675","676"],"import { isEmpty } from 'lodash';\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useCookies } from 'react-cookie';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AlertMessage } from '../../components/common';\nimport { authActions } from '../../config/actions';\nimport RoutePaths from '../../config/routes/RoutePaths';\nimport { removeEmptyOrNullObject } from '../../helpers/dataFormatter';\nimport usePrevious from '../Hooks/usePrevious';\nimport LoginForm from './LoginForm';\n\nconst Login = ({ setCurrentPage }) => {\n  const dispatch = useDispatch();\n  const [error, setError] = useState(null);\n  const [cookies, setCookie] = useCookies();\n  const { loginError, loginData, isAuthenticated } = useSelector(\n    (state) => state.auth\n  );\n  const previousState = usePrevious({ loginError, loginData });\n  const accessToken = cookies.auth_access;\n\n  useEffect(() => {\n    if (!isEmpty(accessToken?.token) && isAuthenticated === true) {\n      dispatch(authActions.setIsAuthenticated(true));\n    }\n  }, []);\n\n  useEffect(() => {\n    if (\n      !isEmpty(previousState) &&\n      !isEmpty(loginData) &&\n      previousState.loginData !== loginData\n    ) {\n      if (loginData.server?.status === true) {\n        setCookie('auth_access', loginData.access_token, {\n          path: '/',\n          sameSite: true,\n        });\n        dispatch(authActions.setIsAuthenticated(true));\n      }\n    }\n  }, [loginData]);\n\n  useEffect(() => {\n    if (\n      !isEmpty(previousState) &&\n      !isEmpty(loginError) &&\n      previousState.loginError !== loginError\n    ) {\n      const message =\n        loginError.error?.message ||\n        loginError.error ||\n        loginError.server.message;\n      setError(message);\n\n      if (message === 'Please change your default password before login in.') {\n        setTimeout(() => {\n          setCurrentPage(RoutePaths.resetPassword.path);\n        }, 2000);\n      }\n    }\n  }, [loginError]);\n\n  const onSubmit = (data) => {\n    setError(null);\n    if (!isEmpty(data)) {\n      dispatch(authActions.loginUser(removeEmptyOrNullObject(data)));\n    }\n  };\n\n  return (\n    <>\n      {!isEmpty(error) && (\n        <AlertMessage message={error} className=\"p-1 px-3 text-sm rounded-sm\" />\n      )}\n      <LoginForm onSubmit={onSubmit} />\n      <div className=\"mt-3 mb-2 text-center text-sm font600\">\n        <Button\n          variant=\"link\"\n          className=\"text-sm\"\n          onClick={() => setCurrentPage(RoutePaths.resetPassword.path)}\n        >\n          Reset My Password\n        </Button>\n      </div>\n    </>\n  );\n};\n\nLogin.propTypes = {\n  setCurrentPage: PropTypes.func.isRequired,\n};\n\nexport default Login;\n","/home/pc/Documents/Project/hesmis-front/src/containers/Auth/ResetPassword.jsx",[],"/home/pc/Documents/Project/hesmis-front/src/containers/Pages/ComingSoon.jsx",[],"/home/pc/Documents/Project/hesmis-front/src/containers/MyProfile/Avatar.jsx",[],"/home/pc/Documents/Project/hesmis-front/src/containers/Payments/SearchPayment.jsx",["677"],"import { Result } from 'antd';\nimport { get, isEmpty } from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport { Card, Col, Form, Row, Table } from 'react-bootstrap';\nimport { useForm } from 'react-hook-form';\nimport { FaSearchDollar } from 'react-icons/fa';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AlertMessage, InputText, SubmitButton } from '../../components/common';\nimport { paymentActions } from '../../config/actions';\nimport usePrevious from '../Hooks/usePrevious';\n\nconst SearchPayment = () => {\n  const dispatch = useDispatch();\n  const { register, handleSubmit, errors } = useForm();\n  const { searchingPayment, searchPayment, searchPaymentError } = useSelector(\n    (state) => state.myTransaction\n  );\n  const [searchSuccess, setSearchSuccess] = useState({});\n  const [searchError, setSearchError] = useState(null);\n  const prevState = usePrevious({ searchPayment, searchPaymentError });\n\n  useEffect(() => {\n    if (!isEmpty(prevState)) {\n      if (\n        !isEmpty(searchPayment) &&\n        searchPayment !== prevState.searchPayment\n      ) {\n        setSearchSuccess(searchPayment);\n      }\n      if (\n        !isEmpty(searchPaymentError) &&\n        searchPaymentError !== prevState.searchPaymentError\n      ) {\n        setSearchError(\n          searchPaymentError?.error?.message ||\n            searchPaymentError?.server?.message\n        );\n      }\n    }\n  }, [searchPayment, searchPaymentError]);\n\n  const onSearchPayment = (data) => {\n    setSearchError(null);\n    setSearchSuccess({});\n    if (data?.searchKey) {\n      dispatch(paymentActions.searchPayment(data.searchKey));\n    }\n  };\n\n  return (\n    <>\n      <Card>\n        <Card.Header className=\"py-3 font600 text-sm text-uppercase text-muted\">\n          CHECK PAYMENT REFERENCE NUMBER STATUS\n        </Card.Header>\n        <Card.Body>\n          <Form onSubmit={handleSubmit(onSearchPayment)}>\n            <Row className=\"g-0\">\n              <Col md={{ offset: 3, span: 4 }}>\n                <InputText\n                  name=\"searchKey\"\n                  type=\"search\"\n                  placeholder=\"Enter Payment Reference Number\"\n                  register={register({\n                    required: 'Enter Payment Reference',\n                    minLength: {\n                      value: 13,\n                      message: 'Invalid Reference Number',\n                    },\n                    maxLength: {\n                      value: 13,\n                      message: 'Invalid Reference Number',\n                    },\n                  })}\n                  error={get(errors, 'searchKey.message')}\n                />\n              </Col>\n              <Col md={2}>\n                <SubmitButton\n                  className=\"text-uppercase text-sm font600 text-white w-100\"\n                  text=\"Search\"\n                  loadingText=\"Searching...\"\n                  loading={searchingPayment}\n                  iconBefore={<FaSearchDollar className=\"me-2\" />}\n                />\n              </Col>\n            </Row>\n\n            {searchError && <Result status=\"error\" title={searchError} />}\n\n            {!isEmpty(searchSuccess) && (\n              <Card body className=\"shadow-none rounded my-4\">\n                <AlertMessage\n                  type={searchSuccess.code === 'T' ? 'success' : 'info'}\n                  message={`Status: ${searchSuccess?.description}`}\n                  className=\"font600 text-sm\"\n                />\n\n                <Table\n                  size=\"md\"\n                  bordered\n                  striped\n                  responsive\n                  className=\"text-sm text-muted font600\"\n                >\n                  <tbody>\n                    <tr>\n                      <td>PRN</td>\n                      <td>{searchSuccess.PRN}</td>\n                    </tr>\n                    <tr>\n                      <td>Amount</td>\n                      <td>\n                        {`${parseInt(\n                          searchSuccess.AmountPaid,\n                          10\n                        ).toLocaleString()} ${searchSuccess?.Currency}`}\n                      </td>\n                    </tr>\n                    <tr>\n                      <td>PAYMENT STATUS</td>\n                      <td>{searchSuccess.StatusDesc}</td>\n                    </tr>\n                    <tr>\n                      <td>Generated By</td>\n                      <td>{searchSuccess.TaxPayerName}</td>\n                    </tr>\n                    <tr>\n                      <td>Expiry Date</td>\n                      <td>{searchSuccess.PaymentExpiryDate}</td>\n                    </tr>\n                    <tr>\n                      <td>Payment Date</td>\n                      <td>{searchSuccess.DatePaid || '-- -- ----'}</td>\n                    </tr>\n                    <tr>\n                      <td>Payment Bank</td>\n                      <td>{searchSuccess.PaymentBank || '---------'}</td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </Card>\n            )}\n          </Form>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nexport default SearchPayment;\n","/home/pc/Documents/Project/hesmis-front/src/containers/Payments/MyInvoices.jsx",["678"],"import { isEmpty, sum, sumBy } from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport { Card, Col, Row } from 'react-bootstrap';\nimport DataTable from 'react-data-table-component';\nimport { FaMinus, FaPaperclip, FaPlus } from 'react-icons/fa';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  DataNotFound,\n  DataSpinner,\n  ReloadButton,\n} from '../../components/common';\nimport { paymentActions } from '../../config/actions';\nimport Invoice from './Invoice';\n\nconst MyInvoices = () => {\n  const dispatch = useDispatch();\n  const { invoices, loading } = useSelector((state) => state.myInvoice);\n  const [invoiceGrandTotalAmount, setInvoiceGrandTotalAmount] = useState(0);\n  const [invoiceGrandAmountPaid, seInvoiceGrandAmountPaid] = useState(0);\n  const [invoiceGrandAmountDue, seInvoiceGrandAmountDue] = useState(0);\n\n  const getInvoices = () => {\n    dispatch(paymentActions.getMyInvoices());\n  };\n\n  useEffect(() => {\n    if (isEmpty(invoices)) getInvoices();\n  }, []);\n\n  useEffect(() => {\n    if (!isEmpty(invoices)) {\n      let invoiceAmounts = 0;\n      let invoiceAmountsDue = 0;\n      let invoiceAmountsPaid = 0;\n\n      invoices.forEach((invoice) => {\n        const tuitionAmounts = sumBy(\n          invoice.tuition_invoices,\n          'invoice_amount'\n        );\n        const tuitionDue = sumBy(invoice.tuition_invoices, 'amount_due');\n        const tuitionPaid = sumBy(invoice.tuition_invoices, 'amount_paid');\n        const functionalAmounts = sumBy(\n          invoice.functional_fees_invoices,\n          'invoice_amount'\n        );\n        const functionalDue = sumBy(\n          invoice.functional_fees_invoices,\n          'amount_due'\n        );\n        const functionalPaid = sumBy(\n          invoice.functional_fees_invoices,\n          'amount_paid'\n        );\n        const otherAmounts = sumBy(\n          invoice.other_fees_invoices,\n          'invoice_amount'\n        );\n        const otherFeesDue = sumBy(invoice.other_fees_invoices, 'amount_due');\n        const otherFeesPaid = sumBy(invoice.other_fees_invoices, 'amount_paid');\n        const manualAmounts = sumBy(invoice.manual_invoices, 'invoice_amount');\n        const manualsDue = sumBy(invoice.manual_invoices, 'amount_due');\n        const manualsPaid = sumBy(invoice.manual_invoices, 'amount_paid');\n\n        invoiceAmounts += sum([\n          tuitionAmounts,\n          functionalAmounts,\n          otherAmounts,\n          manualAmounts,\n        ]);\n        invoiceAmountsDue += sum([\n          tuitionDue,\n          functionalDue,\n          otherFeesDue,\n          manualsDue,\n        ]);\n        invoiceAmountsPaid += sum([\n          tuitionPaid,\n          functionalPaid,\n          otherFeesPaid,\n          manualsPaid,\n        ]);\n      });\n      setInvoiceGrandTotalAmount(invoiceAmounts);\n      seInvoiceGrandAmountDue(invoiceAmountsDue);\n      seInvoiceGrandAmountPaid(invoiceAmountsPaid);\n    }\n  }, [invoices]);\n\n  return (\n    <>\n      <Row className=\"text-center text-muted\">\n        <Col md={3} className=\"mb-2\">\n          <Card>\n            <Card.Body>\n              <Card.Text className=\"text-xs font600 mb-2\">\n                TOTAL INVOICE AMOUNT\n              </Card.Text>\n              <span className=\"text-info font600 mx-1\">\n                {`${invoiceGrandTotalAmount.toLocaleString()} UGX`}\n              </span>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col md={3} className=\"mb-2\">\n          <Card>\n            <Card.Body>\n              <Card.Text className=\"text-xs font600 mb-2\">\n                TOTAL INVOICE AMOUNT PAID\n              </Card.Text>\n              <span className=\"text-success font600 mx-1\">\n                {`${invoiceGrandAmountPaid.toLocaleString()} UGX`}\n              </span>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col md={3} className=\"mb-2\">\n          <Card>\n            <Card.Body>\n              <Card.Text className=\"text-xs font600 mb-2\">\n                TOTAL INVOICE AMOUNT DUE\n              </Card.Text>\n              <span className=\"text-danger font600 mx-1\">\n                {`${invoiceGrandAmountDue.toLocaleString()} UGX`}\n              </span>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col md={3} className=\"mb-2\">\n          <Card>\n            <Card.Body>\n              <Card.Text className=\"text-xs font600 mb-2\">\n                PERCENTAGE COMPLETION\n              </Card.Text>\n              <span\n                className={`mx-1 font600 ${\n                  (invoiceGrandAmountPaid / invoiceGrandTotalAmount) * 100 > 70\n                    ? 'text-success'\n                    : 'text-danger'\n                }`}\n              >\n                {`${\n                  invoiceGrandTotalAmount !== 0\n                    ? parseInt(\n                        invoiceGrandAmountPaid / invoiceGrandTotalAmount,\n                        10\n                      ) * 100\n                    : 0\n                } %`}\n              </span>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n      <div className=\"border mt-2\">\n        <Card.Header className=\"py-2  text-secondary text-sm font600\">\n          MY INVOICES/BILLS\n          <div className=\"card-options\">\n            <ReloadButton loading={loading} onClick={() => getInvoices()} />\n          </div>\n        </Card.Header>\n        <DataTable\n          data={invoices}\n          noHeader\n          noTableHead\n          progressPending={loading && isEmpty(invoices)}\n          progressComponent={<DataSpinner />}\n          expandableRows\n          columns={[\n            {\n              name: 'ACADEMIC YEAR',\n              wrap: true,\n              cell(transaction) {\n                const {\n                  semester,\n                  academic_year: academicYear,\n                  programme_study_years: studyYear,\n                } = transaction;\n                return (\n                  <>\n                    <span className=\"font600 text-info\">\n                      <FaPaperclip className=\"me-1\" />\n                      {`${studyYear} - ${semester} - ${academicYear}`}\n                    </span>\n                  </>\n                );\n              },\n            },\n          ]}\n          noDataComponent={\n            <DataNotFound message=\"YOU HAVE NO INVOICE HISTORY\" />\n          }\n          expandableRowsComponent={<Invoice />}\n          expandableRowExpanded={(row, index) => index === 1}\n          expandOnRowClicked\n          striped\n          expandableIcon={{\n            expanded: <FaMinus className=\"text-info\" />,\n            collapsed: <FaPlus className=\"text-info\" />,\n          }}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default MyInvoices;\n","/home/pc/Documents/Project/hesmis-front/src/containers/Payments/MyTransactions.jsx",["679"],"import { isEmpty } from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport { Card } from 'react-bootstrap';\nimport DataTable from 'react-data-table-component';\nimport { FaMinus, FaPlus, FaPaperclip } from 'react-icons/fa';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  DataNotFound,\n  DataSpinner,\n  ReloadButton,\n  TabMenu,\n} from '../../components/common';\nimport { paymentActions } from '../../config/actions';\nimport TransactionTables from './TransactionTables';\n\nconst MyTransactions = () => {\n  const dispatch = useDispatch();\n  const { transactions, loading } = useSelector((state) => state.myTransaction);\n  const [currentMenu, setCurrentMenu] = useState('data');\n\n  const getTransactions = () => dispatch(paymentActions.getMyTransactions());\n\n  useEffect(() => {\n    if (isEmpty(transactions)) getTransactions();\n  }, []);\n\n  let columns = [\n    {\n      name: 'ACADEMIC YEAR',\n      cell(transaction) {\n        const {\n          semester,\n          academic_year: academicYear,\n          programme_study_years: studyYear,\n        } = transaction;\n        return (\n          <span className=\"font600 text-info\">\n            <FaPaperclip className=\"me-1\" />\n            {`${studyYear} - ${semester} - ${academicYear}`}\n          </span>\n        );\n      },\n    },\n  ];\n\n  if (currentMenu === 'deposits') {\n    columns = [\n      {\n        name: 'Invoice No',\n        sortable: true,\n        cell(row) {\n          const { transaction_date: txnDate } = row;\n          return (\n            <span className=\"font500 text-uppercase text-info\">\n              {`${txnDate} Fees Deposits`}\n            </span>\n          );\n        },\n      },\n    ];\n  }\n\n  return (\n    <Card>\n      <TabMenu\n        currentMenu={currentMenu}\n        setCurrentMenu={setCurrentMenu}\n        menus={[\n          {\n            title: 'Invoice Payments',\n            action: 'data',\n          },\n          {\n            title: 'Fees Deposits',\n            action: 'deposits',\n          },\n        ]}\n      >\n        <div className=\"card-options\">\n          <ReloadButton loading={loading} onClick={() => getTransactions()} />\n        </div>\n      </TabMenu>\n\n      <Card.Body className=\"p-0\">\n        <DataTable\n          data={transactions[currentMenu]}\n          noHeader\n          noTableHead\n          progressPending={loading && isEmpty(transactions[currentMenu])}\n          progressComponent={<DataSpinner />}\n          expandableRows\n          columns={columns}\n          noDataComponent={\n            <DataNotFound message=\"YOU HAVE NO TRANSACTION HISTORY\" />\n          }\n          expandableRowsComponent={<TransactionTables />}\n          expandableRowExpanded={() => true}\n          expandOnRowClicked\n          striped\n          expandableIcon={{\n            expanded: <FaMinus className=\"text-info\" />,\n            collapsed: <FaPlus className=\"text-info\" />,\n          }}\n        />\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default MyTransactions;\n","/home/pc/Documents/Project/hesmis-front/src/containers/Events/CurrentEvents.jsx",["680"],"import { isEmpty } from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport { Card } from 'react-bootstrap';\nimport { FaUserEdit, FaUserGraduate } from 'react-icons/fa';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  DataNotFound,\n  DataSpinner,\n  ReloadButton,\n  TabMenu,\n} from '../../components/common';\nimport { enrollmentActions, registrationActions } from '../../config/actions';\nimport EnrolledStudent from '../EnrollmentHistory/EnrolledStudent';\nimport EnrollForm from '../EnrollmentHistory/EnrollForm';\nimport Registration from '../RegistrationHistory/Registration';\n\nconst CurrentEvents = () => {\n  const dispatch = useDispatch();\n  const { currentEvents, gettingCurrentEvents } = useSelector(\n    (state) => state.enrollment\n  );\n  const { currentStudentProgramme } = useSelector((state) => state.auth);\n  const [selectedKey, setSelectedKey] = useState('enrollment');\n  const [semesterEvent, setSemesterEvent] = useState({});\n\n  const reloadEnrollmentEvent = () => {\n    if (currentStudentProgramme?.id) {\n      dispatch(enrollmentActions.getCurrentEvents(currentStudentProgramme.id));\n    }\n    if (\n      isEmpty(currentEvents.studentRegistration) &&\n      !isEmpty(currentEvents.registrationEvent)\n    ) {\n      dispatch(registrationActions.getCourseUnits(currentStudentProgramme.id));\n    }\n  };\n\n  useEffect(() => {\n    if (isEmpty(semesterEvent)) reloadEnrollmentEvent();\n  }, []);\n\n  useEffect(() => {\n    if (!isEmpty(currentEvents)) {\n      const findEvent = currentEvents.find(\n        (event) =>\n          parseInt(event.programme_id, 10) ===\n          parseInt(currentStudentProgramme.id, 10)\n      );\n      setSemesterEvent(findEvent ? findEvent.event : {});\n    }\n  }, [currentEvents, currentStudentProgramme]);\n\n  return (\n    <Card key={semesterEvent?.id}>\n      <TabMenu\n        menus={[\n          {\n            title: 'Enrollemnt',\n            icon: <FaUserGraduate className=\"me-1\" />,\n            action: 'enrollment',\n          },\n          {\n            title: 'Registration',\n            icon: <FaUserEdit className=\"me-1\" />,\n            action: 'registration',\n            hidden:\n              isEmpty(semesterEvent.studentEnrollment) ||\n              isEmpty(semesterEvent.registrationEvent),\n          },\n        ]}\n        currentMenu={selectedKey}\n        setCurrentMenu={setSelectedKey}\n      >\n        <div className=\"card-options\">\n          <ReloadButton\n            loading={gettingCurrentEvents}\n            onClick={reloadEnrollmentEvent}\n          />\n        </div>\n      </TabMenu>\n\n      <Card.Body>\n        {selectedKey === 'enrollment' && (\n          <>\n            {gettingCurrentEvents && isEmpty(semesterEvent) ? (\n              <DataSpinner />\n            ) : (\n              <>\n                {isEmpty(semesterEvent.enrollmentEvent) ||\n                isEmpty(currentStudentProgramme) ? (\n                  <DataNotFound\n                    message=\"There is no Enrollment event available\"\n                    className=\"text-xl text-uppercase\"\n                  />\n                ) : (\n                  <>\n                    {!isEmpty(semesterEvent.studentEnrollment) ? (\n                      <EnrolledStudent\n                        studentEnrollment={\n                          semesterEvent.studentEnrollment || {}\n                        }\n                        event={semesterEvent.enrollmentEvent}\n                      />\n                    ) : (\n                      <EnrollForm\n                        enrollmentEvent={semesterEvent.enrollmentEvent}\n                        currentStudentProgramme={currentStudentProgramme}\n                        reloadEnrollmentEvent={reloadEnrollmentEvent}\n                      />\n                    )}\n                  </>\n                )}\n              </>\n            )}\n          </>\n        )}\n        {selectedKey === 'registration' && (\n          <Registration\n            registrationEvent={semesterEvent.registrationEvent}\n            registrationHistory={semesterEvent.studentRegistration}\n            enrollmentEvent={semesterEvent.enrollmentEvent}\n            enrollmentHistory={semesterEvent.studentEnrollment}\n            reloadEnrollmentEvent={reloadEnrollmentEvent}\n          />\n        )}\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default CurrentEvents;\n","/home/pc/Documents/Project/hesmis-front/src/helpers/dataFormatter.js",[],"/home/pc/Documents/Project/hesmis-front/src/containers/Dashboard/ProgrammeTab.jsx",["681","682","683","684","685","686"],"import { isEmpty } from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport { Card } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { SelectInput } from '../../components/common';\nimport { authActions } from '../../config/actions';\nimport { formatProgrammes } from '../../helpers/dataFormatter';\n\nconst ProgrammeTab = () => {\n  const dispatch = useDispatch();\n  const { authUser, currentStudentProgramme } = useSelector(\n    (state) => state.auth\n  );\n  const [programmeOptions, setProgrammeOption] = useState([]);\n  const [selectedProgramme, setSelectedProgramme] = useState(\n    currentStudentProgramme.id\n  );\n\n  useEffect(() => {\n    dispatch(authActions.getStudentProgrammes());\n  }, []);\n\n  const setCurrentStudentProgramme = (programme) => {\n    dispatch(authActions.setCurrentStudentProgramme(programme, 'programme_id'));\n  };\n\n  useEffect(() => {\n    if (authUser) {\n      setProgrammeOption(formatProgrammes(authUser.academic_records || []));\n      if (!isEmpty(authUser.academic_records)) {\n        const findCurrentProgramme = authUser.academic_records.find(\n          (programme) => programme.is_current_programme === true\n        );\n        const programme = findCurrentProgramme || authUser.academic_records[0];\n        setCurrentStudentProgramme(programme);\n        setSelectedProgramme(programme.programme_id);\n      }\n    }\n  }, [authUser]);\n\n  const handleChangeProgramme = (e) => {\n    const { value } = e.target;\n    if (value && !isEmpty(authUser.academic_records)) {\n      setSelectedProgramme(value);\n      const findProgramme = authUser.academic_records.find(\n        (programme) =>\n          parseInt(programme.programme_id, 10) === parseInt(value, 10)\n      );\n      if (findProgramme) setCurrentStudentProgramme(findProgramme);\n    }\n  };\n\n  return (\n    <>\n      <Card.Header className=\"py-2 px-3 border-0 bg-light\">\n        \n          <div className=\"text-sm font500 my-auto\">\n            <span className=\"text-primary me-1\">SCHOLARSHIP SYSTEM:</span>\n            HESMIS\n          </div>\n        \n      </Card.Header>\n    </>\n  );\n};\n\nexport default ProgrammeTab;\n","/home/pc/Documents/Project/hesmis-front/src/containers/Auth/LoginForm.jsx",[],"/home/pc/Documents/Project/hesmis-front/src/containers/Auth/ResetForm.jsx",["687","688"],"import { get, isEmpty } from 'lodash';\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport { Card, Form } from 'react-bootstrap';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AlertMessage, InputText, SubmitButton } from '../../components/common';\nimport { authActions } from '../../config/actions';\nimport RoutePaths from '../../config/routes/RoutePaths';\nimport usePrevious from '../Hooks/usePrevious';\n\nconst ResetForm = ({ setCurrentPage }) => {\n  const dispatch = useDispatch();\n  const { register, handleSubmit, errors } = useForm();\n  const { requestingToken, resettingPassword } = useSelector(\n    (state) => state.auth\n  );\n  const [resetSuccess, setResetSuccess] = useState(false);\n  const {\n    resetPasswordError,\n    requestTokenError,\n    resetPasswordSuccess,\n    requestTokenSuccess,\n  } = useSelector((state) => state.auth);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [successMessage, setSuccessMessage] = useState(null);\n  const previousState = usePrevious({\n    requestTokenError,\n    requestTokenSuccess,\n    resetPasswordError,\n    resetPasswordSuccess,\n  });\n\n  useEffect(() => {\n    setErrorMessage(null);\n    setSuccessMessage(null);\n    if (!isEmpty(previousState)) {\n      if (\n        !isEmpty(requestTokenError) &&\n        previousState.requestTokenError !== requestTokenError\n      ) {\n        setErrorMessage(\n          requestTokenError?.error || requestTokenError?.server?.message\n        );\n      }\n      if (\n        previousState.requestTokenSuccess !== requestTokenSuccess &&\n        requestTokenSuccess?.server\n      ) {\n        setSuccessMessage(requestTokenSuccess?.server?.message);\n        setResetSuccess(true);\n      }\n    }\n  }, [requestTokenError, requestTokenSuccess]);\n\n  useEffect(() => {\n    if (!isEmpty(previousState)) {\n      if (\n        !isEmpty(resetPasswordError) &&\n        previousState.resetPasswordError !== resetPasswordError\n      ) {\n        setErrorMessage(\n          resetPasswordError?.error || resetPasswordError.server.message\n        );\n      }\n      if (\n        previousState.resetPasswordSuccess !== resetPasswordSuccess &&\n        resetPasswordSuccess?.server\n      ) {\n        setCurrentPage(RoutePaths.login.path);\n      }\n    }\n  }, [resetPasswordError, resetPasswordSuccess]);\n\n  const onSubmit = (data) => {\n    setErrorMessage(null);\n    if (!isEmpty(data) && resetSuccess) {\n      dispatch(authActions.resetPassword(data));\n    } else {\n      dispatch(authActions.requestToken(data));\n    }\n  };\n\n  return (\n    <Card className=\"bg-white rounded \">\n      <Card.Header className=\"py-3 border-0 rounded-top\">\n        <div className=\"w-100 text-center text-info font600\">\n          RESET PASSWORD\n        </div>\n      </Card.Header>\n      <Card.Body className=\"pt-2\">\n        {(errorMessage || successMessage) && (\n          <AlertMessage\n            type={errorMessage ? 'danger' : 'success'}\n            message={errorMessage || successMessage}\n          />\n        )}\n        <Form onSubmit={handleSubmit(onSubmit)}>\n          <InputText\n            name=\"username\"\n            label=\"STUDENT NO.\"\n            readOnly={resetSuccess}\n            register={register({\n              required: 'STUDENT NO. required',\n            })}\n            error={get(errors, 'username.message')}\n          />\n\n          {resetSuccess && (\n            <>\n              <InputText\n                name=\"otp_code\"\n                label=\"Reset Token\"\n                register={register({\n                  required: 'Reset Token required',\n                })}\n                error={get(errors, 'otp_code.message')}\n              />\n\n              <InputText\n                name=\"new_password\"\n                label=\"New Password\"\n                type=\"password\"\n                register={register({\n                  required: 'Reset Token required',\n                  minLength: {\n                    value: 6,\n                    message: 'Minimum password length should 6 characters',\n                  },\n                  maxLength: {\n                    value: 16,\n                    message: 'Maximum password length should 16 characters',\n                  },\n                })}\n                error={get(errors, 'reset_token.message')}\n              />\n\n              <InputText\n                name=\"confirm_password\"\n                label=\"Confirm New Password\"\n                type=\"password\"\n                register={register({\n                  required: 'Reset Token required',\n                  minLength: {\n                    value: 6,\n                    message: 'Minimum password length should 6 characters',\n                  },\n                  maxLength: {\n                    value: 16,\n                    message: 'Maximum password length should 16 characters',\n                  },\n                })}\n                error={get(errors, 'confirm_password.message')}\n              />\n            </>\n          )}\n\n          <SubmitButton\n            className=\"text-uppercase text-white text-sm mt-3 w-100 mb-2 font600\"\n            loading={requestingToken || resettingPassword}\n            loadingText={\n              resetSuccess ? 'Resetting Password...' : 'Requesting...'\n            }\n            text={resetSuccess ? 'Reset Password' : 'Request Token'}\n          />\n        </Form>\n      </Card.Body>\n    </Card>\n  );\n};\n\nResetForm.propTypes = {\n  setCurrentPage: PropTypes.func.isRequired,\n};\n\nexport default ResetForm;\n","/home/pc/Documents/Project/hesmis-front/src/containers/Services/index.jsx",[],"/home/pc/Documents/Project/hesmis-front/src/containers/MyProfile/index.jsx",["689"],"import { isEmpty } from 'lodash';\nimport moment from 'moment';\nimport React, { useEffect, useState } from 'react';\nimport { Button, Card, Col, ListGroup, Row } from 'react-bootstrap';\nimport {\n  FaGraduationCap,\n  FaUserCheck,\n  FaUserFriends,\n  FaUserGraduate,\n  FaUsersCog,\n  FaUserSecret,\n  FaUserTimes,\n} from 'react-icons/fa';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { authActions, enrollmentActions } from '../../config/actions';\nimport Avatar from './Avatar';\nimport ProfileData from './ProfileData';\nimport ChangePassword from './ChangePassword';\nimport AcademicDetail from './AcademicDetail';\nimport GuardianDetail from './GuardianDetail';\nimport NextOfKin from './NextOfKin';\nimport { DataSpinner } from '../../components/common';\n\nconst MyProfile = () => {\n  const dispatch = useDispatch();\n  const { gettingAuthUser, authUser, currentStudentProgramme } = useSelector(\n    (state) => state.auth\n  );\n  const { currentEvents } = useSelector((state) => state.enrollment);\n  const [isRegistered, setIsRegistered] = useState(false);\n  const [currentTab, setCurrentTab] = useState('bio-data');\n\n  const reloadAuthUser = () => {\n    dispatch(authActions.getAuthUser());\n    dispatch(enrollmentActions.getCurrentEvents(currentStudentProgramme?.id));\n  };\n\n  useEffect(() => {\n    if (isEmpty(authUser)) reloadAuthUser();\n  }, []);\n\n  useEffect(() => {\n    if (!isEmpty(currentEvents)) {\n      setIsRegistered(!isEmpty(currentEvents.studentRegistration));\n    }\n  }, [currentEvents]);\n\n  const tabList = [\n    {\n      id: 1,\n      title: 'Personal Details',\n      key: 'bio-data',\n      icon: <FaUserGraduate className=\"me-2\" />,\n    },\n    {\n      id: 2,\n      title: 'Academic Details',\n      key: 'academic-details',\n      icon: <FaGraduationCap className=\"me-2\" />,\n    },\n    {\n      id: 3,\n      title: 'Guardian Details',\n      key: 'guardian-details',\n      icon: <FaUsersCog className=\"me-2\" />,\n    },\n    {\n      id: 4,\n      title: 'Next of Kin',\n      key: 'next-of-kin',\n      icon: <FaUserFriends className=\"me-2\" />,\n    },\n    {\n      id: 5,\n      title: 'Change Password',\n      key: 'change-password',\n      icon: <FaUserSecret className=\"me-2\" />,\n    },\n  ];\n\n  return (\n    <>\n      <Card>\n        <Card.Header className=\"py-3 text-primary font600 text-sm mb-0\">\n          MY ACADEMIC PROFILE\n        </Card.Header>\n        <Row className=\"row-deck gx-0 gy-2\">\n          <Col md={3}>\n            <Card className=\"text-sm text-muted border-0 p-0\">\n              <div className=\"text-center p-3 border-bottom\">\n                <div className=\"mx-auto text-center pb-2\">\n                  <Avatar />\n                </div>\n                {gettingAuthUser && isEmpty(authUser) ? (\n                  <DataSpinner message=\"Loading Profile...\" />\n                ) : (\n                  <>\n                    <div className=\"font600 text-uppercase text-primary\">{`${authUser.firstname} ${authUser.lastname}`}</div>\n                    <div className=\"font600 text-uppercase text-xs mt-2\">{`STUDENT NO.: ${authUser.student_number}`}</div>\n\n                    <Button\n                      variant={isRegistered ? 'success' : 'danger'}\n                      size=\"sm\"\n                      className=\"text-sm mt-2 font600\"\n                    >\n                      {isRegistered ? (\n                        <FaUserCheck className=\"me-1\" />\n                      ) : (\n                        <FaUserTimes className=\"me-1\" />\n                      )}\n                      {isRegistered ? 'REGISTERED' : 'NOT REGISTERED'}\n                    </Button>\n                  </>\n                )}\n              </div>\n              <ListGroup variant=\"flush\">\n                {tabList.map((tab) => (\n                  <ListGroup.Item\n                    key={tab.id}\n                    onClick={() => setCurrentTab(tab.key)}\n                    active={currentTab === tab.key}\n                    action\n                    className=\"font600 text-sm text-left\"\n                  >\n                    {tab.icon}\n                    {tab.title}\n                  </ListGroup.Item>\n                ))}\n              </ListGroup>\n            </Card>\n          </Col>\n          <Col md={9}>\n            <Card className=\"border-start border-top-0 border-bottom-0 border-end-0\">\n              {currentTab === 'bio-data' && <ProfileData authUser={authUser} />}\n              {currentTab === 'next-of-kin' && (\n                <NextOfKin authUser={authUser} />\n              )}\n              {currentTab === 'guardian-details' && (\n                <GuardianDetail authUser={authUser} />\n              )}\n              {currentTab === 'academic-details' && (\n                <AcademicDetail authUser={authUser} />\n              )}\n              {currentTab === 'change-password' && <ChangePassword />}\n            </Card>\n          </Col>\n        </Row>\n      </Card>\n\n      <div className=\"my-2 w-100 text-center text-muted text-xs\">\n        Last Login\n        {` ${moment(authUser.last_login).format(\n          'ddd, MMM Do YYYY, h:mm:ss a'\n        )}`}\n      </div>\n    </>\n  );\n};\n\nexport default MyProfile;\n","/home/pc/Documents/Project/hesmis-front/src/containers/Results/index.jsx",["690","691","692"],"import { isEmpty } from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport { Card } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  AlertMessage,\n  DataNotFound,\n  DataSpinner,\n  ReloadButton,\n} from '../../components/common';\nimport { resultActions } from '../../config/actions';\nimport usePrevious from '../Hooks/usePrevious';\nimport MyResult from './MyResult';\n\nconst Result = () => {\n  const dispatch = useDispatch();\n  const { results, loading, loadError } = useSelector((state) => state.result);\n  const { currentStudentProgramme } = useSelector((state) => state.auth);\n  const [myResult, setMyResult] = useState({});\n  const [errorMessage, setErrorMessage] = useState(null);\n  const prevState = usePrevious({ loadError });\n\n  const getMyResult = () => {\n    setErrorMessage(null);\n    dispatch(resultActions.getMyResult(currentStudentProgramme?.id));\n  };\n\n  useEffect(() => {\n    if (results) {\n      const findResult = results.find(\n        (result) =>\n          result.programme_code === currentStudentProgramme.programme_code\n      );\n      if (findResult) setMyResult(findResult);\n      else getMyResult();\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!isEmpty(results)) {\n      const findResult = results.find(\n        (result) =>\n          result?.programme_code === currentStudentProgramme?.programme_code\n      );\n      if (findResult) setMyResult(findResult);\n      else {\n        setMyResult({});\n        setErrorMessage(null);\n      }\n    }\n  }, [results, loading]);\n\n  useEffect(() => {\n    if (\n      !isEmpty(prevState) &&\n      !isEmpty(loadError) &&\n      loadError !== prevState.loadError\n    ) {\n      setErrorMessage(loadError?.error?.message || loadError?.server?.message);\n    }\n  }, [loadError]);\n\n  return (\n    <div>\n      <Card>\n        <Card.Header className=\"py-2\">\n          <div className=\"font600 text-uppercase text-sm\">My Result</div>\n          <div className=\"card-options\">\n            <ReloadButton loading={loading} onClick={getMyResult} />\n          </div>\n        </Card.Header>\n        <Card.Body>\n          {errorMessage && <AlertMessage message={errorMessage} />}\n          {loading && isEmpty(myResult) ? (\n            <DataSpinner />\n          ) : (\n            <>\n              {isEmpty(myResult) ? (\n                <DataNotFound message=\"You have No Results\" />\n              ) : (\n                <>\n                  <MyResult result={myResult} />\n                </>\n              )}\n            </>\n          )}\n        </Card.Body>\n      </Card>\n    </div>\n  );\n};\n\nexport default Result;\n","/home/pc/Documents/Project/hesmis-front/src/containers/RegistrationHistory/index.jsx",["693"],"import { isEmpty } from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport { Accordion, Card } from 'react-bootstrap';\nimport { FaUserEdit } from 'react-icons/fa';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { DataNotFound, ReloadButton } from '../../components/common';\nimport AccordionHeader from '../../components/common/AccordionHeader';\nimport { registrationActions } from '../../config/actions';\nimport SingleRegistrationHistory from './SingleRegistrationHistory';\n\nconst RegistrationHistory = () => {\n  const dispatch = useDispatch();\n  const { registrationHistories, gettingRegistrationHistory } = useSelector(\n    (state) => state.registration\n  );\n  const { currentStudentProgramme } = useSelector((state) => state.auth);\n  const [activeKey, setActiveKey] = useState(1);\n\n  const reloadRegistrationHistory = () => {\n    dispatch(\n      registrationActions.getRegistrationHistory(currentStudentProgramme?.id)\n    );\n  };\n\n  useEffect(() => {\n    if (isEmpty(registrationHistories)) reloadRegistrationHistory();\n  }, []);\n\n  return (\n    <>\n      <Card.Header className=\"py-2  text-secondary text-sm mb-2 font600\">\n        MY REGISTRATION HISTORY\n        <div className=\"card-options\">\n          <ReloadButton\n            loading={gettingRegistrationHistory}\n            onClick={reloadRegistrationHistory}\n          />\n        </div>\n      </Card.Header>\n      {isEmpty(registrationHistories) ? (\n        <>\n          <DataNotFound message=\"You have No Registration History.\" />\n          <div className=\"text-center\">\n            <ReloadButton\n              loading={gettingRegistrationHistory}\n              onClick={reloadRegistrationHistory}\n            />\n          </div>\n        </>\n      ) : (\n        <>\n          <Accordion defaultActiveKey=\"1\" activeKey={activeKey}>\n            {registrationHistories.map((registrationHistory, index) => (\n              <Accordion.Item\n                eventKey={index + 1}\n                className=\"mb-2\"\n                key={registrationHistory.event_id}\n              >\n                <AccordionHeader\n                  activeKey={activeKey}\n                  eventKey={index + 1}\n                  setActiveKey={setActiveKey}\n                  className={\n                    registrationHistory.is_active === false\n                      ? 'text-danger font600'\n                      : 'font600'\n                  }\n                >\n                  <FaUserEdit className=\"me-2\" />\n                  {`REGISTRATION FOR ${registrationHistory?.registration_study_year}, ${registrationHistory.event_semester} - ${registrationHistory.academic_year}`}\n                  {registrationHistory.is_active === false && (\n                    <div className=\"badge badge-danger text-uppercase p-1 mx-1\">\n                      De-registered\n                    </div>\n                  )}\n                </AccordionHeader>\n                <Accordion.Body>\n                  <div\n                    className={\n                      registrationHistory.is_active === false\n                        ? 'text-danger'\n                        : ''\n                    }\n                  >\n                    <SingleRegistrationHistory\n                      registrationHistory={registrationHistory}\n                    />\n                  </div>\n                </Accordion.Body>\n              </Accordion.Item>\n            ))}\n          </Accordion>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default RegistrationHistory;\n","/home/pc/Documents/Project/hesmis-front/src/config/initialState/index.js",[],"/home/pc/Documents/Project/hesmis-front/src/containers/PaymentReferences/index.jsx",["694"],"import { isEmpty, orderBy } from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport { Accordion, Card } from 'react-bootstrap';\nimport { FaPaperclip } from 'react-icons/fa';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  DataNotFound,\n  DataSpinner,\n  ReloadButton,\n  TabMenu,\n} from '../../components/common';\nimport AccordionHeader from '../../components/common/AccordionHeader';\nimport { paymentReferenceActions } from '../../config/actions';\nimport GeneratePaymentReference from './GeneratePaymentReference';\nimport ReferenceModal from './ReferenceModal';\nimport SinglePaymentReference from './SinglePaymentReference';\n\nconst PaymentReferences = () => {\n  const dispatch = useDispatch();\n  const { paymentReferences, gettingPaymentReferences } = useSelector(\n    (state) => state.paymentReference\n  );\n  const [activeKey, setActiveKey] = useState(1);\n  const [activeTab, setActiveTab] = useState('generate-reference');\n  const [referenceTab, setReferenceTab] = useState('active');\n\n  const reloadPaymentReferences = () => {\n    dispatch(paymentReferenceActions.getPaymentReferences());\n  };\n\n  useEffect(() => {\n    if (isEmpty(paymentReferences)) reloadPaymentReferences();\n  }, []);\n\n  return (\n    <>\n      <Card>\n        <TabMenu\n          currentMenu={activeTab}\n          setCurrentMenu={setActiveTab}\n          menus={[\n            {\n              title: 'Get Payment REF',\n              action: 'generate-reference',\n            },\n            {\n              title: 'My Payment REFs',\n              action: 'references',\n            },\n          ]}\n        />\n        <Card.Body className=\"overflow-auto\">\n          {activeTab === 'references' && (\n            <Card className=\"border-0\">\n              <TabMenu\n                className=\"bg-white border\"\n                variant=\"pills\"\n                currentMenu={referenceTab}\n                setCurrentMenu={setReferenceTab}\n                menus={[\n                  {\n                    title: `Active References (${\n                      paymentReferences?.active?.length || 0\n                    })`,\n                    action: 'active',\n                  },\n                  {\n                    title: `Expired References (${\n                      paymentReferences?.inactive?.length || 0\n                    })`,\n                    action: 'inactive',\n                  },\n                ]}\n              >\n                <div className=\"card-options\">\n                  <ReloadButton\n                    loading={gettingPaymentReferences}\n                    onClick={reloadPaymentReferences}\n                  />\n                </div>\n              </TabMenu>\n\n              {gettingPaymentReferences &&\n              isEmpty(paymentReferences[referenceTab]) ? (\n                <DataSpinner />\n              ) : (\n                <>\n                  {isEmpty(paymentReferences[referenceTab]) ? (\n                    <>\n                      <DataNotFound\n                        message={`You have No ${referenceTab} Payment References`}\n                      />\n                    </>\n                  ) : (\n                    <>\n                      <Accordion defaultActiveKey=\"1\" activeKey={activeKey}>\n                        {orderBy(\n                          paymentReferences[referenceTab],\n                          ['ura_prn'],\n                          'desc'\n                        ).map((paymentReference) => (\n                          <Accordion.Item\n                            className=\"mb-0\"\n                            key={paymentReference.id}\n                            eventKey={paymentReference?.id}\n                          >\n                            <AccordionHeader\n                              activeKey={activeKey}\n                              eventKey={paymentReference?.id}\n                              setActiveKey={setActiveKey}\n                            >\n                              <FaPaperclip className=\"me-2\" />\n                              REFERENCE:\n                              <span className=\"text-danger ms-1\">\n                                {paymentReference.ura_prn}\n                              </span>\n                              , AMOUNT TO PAY:\n                              <strong className=\"text-danger mx-1\">\n                                {parseInt(\n                                  paymentReference.amount,\n                                  10\n                                ).toLocaleString()}\n                              </strong>\n                              UGX, EXPIRY DATE:\n                              <span className=\"mx-1 text-danger\">\n                                {`${paymentReference.expiry_date}`}\n                              </span>\n                              , GENERATED BY:\n                              <span className=\"ms-1 text-danger\">\n                                {`${\n                                  paymentReference.generated_by === 'STUDENT'\n                                    ? 'SELF'\n                                    : paymentReference.generated_by\n                                }`}\n                              </span>\n                            </AccordionHeader>\n                            <Accordion.Body>\n                              <SinglePaymentReference\n                                paymentReference={paymentReference}\n                                key={paymentReference.id}\n                              />\n                            </Accordion.Body>\n                          </Accordion.Item>\n                        ))}\n                      </Accordion>\n                    </>\n                  )}\n                </>\n              )}\n            </Card>\n          )}\n          {activeTab === 'generate-reference' && <GeneratePaymentReference />}\n        </Card.Body>\n      </Card>\n      <ReferenceModal switchTab={() => setActiveTab('references')} />\n    </>\n  );\n};\n\nexport default PaymentReferences;\n","/home/pc/Documents/Project/hesmis-front/src/containers/NewUser/index.jsx",["695","696","697"],"import { isEmpty } from 'lodash';\nimport PropTypes, { object } from 'prop-types';\nimport { Card, Col, Row, Form } from 'react-bootstrap';\nimport { FaUser } from 'react-icons/fa';\nimport { DataNotFound, InputText, SubmitButton, AlertMessage } from '../../components/common';\nimport { useForm } from 'react-hook-form';\nimport { FaSignInAlt } from 'react-icons/fa';\nimport { useSelector } from 'react-redux';\nimport { get } from 'lodash';\nimport { removeEmptyOrNullObject } from '../../helpers/dataFormatter';\nimport React, { useEffect, useState } from 'react';\n\nconst NewUser = () => {\n  const { register, handleSubmit, errors } = useForm();\n  const loginIn = useSelector((state) => state.auth.loginIn);\n  const [error, setError] = useState(null);\n  const onSubmit = (formData) => {\n    setError(null);\n    console.log(formData);\n    if (!isEmpty(formData)) {\n      //dispatch(authActions.loginUser(removeEmptyOrNullObject(data)));\n    }\n  };\n  return (\n    <Card >\n      <Card.Header className=\"text-primary font600 py-3 text-sm\">\n        <FaUser className=\"p-2\" />\n        CREATE ACCOUNT\n      </Card.Header>\n      <Card.Body className=\"bg-white\">\n        <Row>\n          {!isEmpty(error) && (\n            <AlertMessage message={error} className=\"p-1 px-3 text-sm rounded-sm\" />\n          )}\n          <Form onSubmit={handleSubmit(onSubmit)}>\n            <Col md={6}>\n              <InputText\n                label=\"First Name\"\n                name=\"firstName\"\n                inline\n                requiredField\n                register={register({\n                  required: 'First Name field is required',\n                })}\n                error={get(errors, 'firstName.message')}\n              />\n              <InputText\n                label=\"Last Name\"\n                name=\"lastName\"\n                inline\n                requiredField\n                register={register({\n                  required: 'Last Name field is required',\n                })}\n                error={get(errors, 'lastName.message')}\n              />\n              <InputText\n                label=\"Other Names\"\n                name=\"otherNames\"\n                inline\n              />\n              <InputText\n                label=\"Country\"\n                name=\"country\"\n                inline\n                requiredField\n                register={register({\n                  required: 'Email field is required',\n                })}\n                error={get(errors, 'email.message')}\n              />\n              <InputText\n                label=\"Phone\"\n                name=\"phone\"\n                inline\n                requiredField\n                register={register({\n                  required: 'Email field is required',\n                })}\n                error={get(errors, 'email.message')}\n              />\n              <InputText\n                label=\"Email\"\n                name=\"email\"\n                inline\n                requiredField\n                register={register({\n                  required: 'Email field is required',\n                })}\n                error={get(errors, 'email.message')}\n              />\n              <InputText\n                type=\"password\"\n                label=\"Password\"\n                name=\"password\"\n                inline\n                requiredField\n                register={register({\n                  required: 'Password field is required',\n                })}\n                error={get(errors, 'password.message')}\n              />\n              <InputText\n                type=\"password\"\n                label=\"Confirm Password\"\n                name=\"confirmPassword\"\n                inline\n                requiredField\n                register={register({\n                  required: 'Confirm Password field is required',\n                })}\n                error={get(errors, 'confirmPassword.message')}\n              />\n            </Col>\n            <Col md={3}>\n              <SubmitButton\n                className=\"text-uppercase text-white text-sm mt-3 w-100 mb-2 font600\"\n                text=\"Create\"\n                loading={loginIn}\n                iconBefore={<FaSignInAlt className=\"me-1\" />}\n                loadingText=\"Signing in...\"\n              />\n            </Col>\n          </Form>\n        </Row>\n      </Card.Body>\n    </Card>\n  );\n};\n\nNewUser.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  authUser: PropTypes.oneOfType([object]).isRequired,\n};\n\nexport default NewUser;\n","/home/pc/Documents/Project/hesmis-front/src/containers/EnrollmentHistory/index.jsx",["698"],"import { isEmpty } from 'lodash';\nimport React, { useEffect } from 'react';\nimport { Card } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  DataNotFound,\n  DataSpinner,\n  ReloadButton,\n} from '../../components/common';\nimport { enrollmentActions } from '../../config/actions';\nimport Enrollments from './Enrollments';\n\nconst EnrollmentHistory = () => {\n  const dispatch = useDispatch();\n  const { enrollmentHistories, gettingEnrollmentHistory } = useSelector(\n    (state) => state.enrollment\n  );\n  const { currentStudentProgramme } = useSelector((state) => state.auth);\n\n  const reloadEnrollmentHistory = () => {\n    dispatch(\n      enrollmentActions.getEnrollmentHistory(currentStudentProgramme?.id)\n    );\n  };\n\n  useEffect(() => {\n    if (isEmpty(enrollmentHistories)) reloadEnrollmentHistory();\n  }, []);\n\n  return (\n    <>\n      <Card.Header className=\"py-2  text-secondary text-sm mb-2 font600\">\n        MY ENROLLMENT HISTORY\n        {` (${!isEmpty(enrollmentHistories) ? enrollmentHistories.length : 0})`}\n        <div className=\"card-options\">\n          <ReloadButton\n            loading={gettingEnrollmentHistory}\n            onClick={reloadEnrollmentHistory}\n          />\n        </div>\n      </Card.Header>\n      {gettingEnrollmentHistory && isEmpty(enrollmentHistories) ? (\n        <DataSpinner />\n      ) : (\n        <>\n          {isEmpty(enrollmentHistories) ? (\n            <>\n              <DataNotFound message=\"You have No Enrollment History.\" />\n              <div className=\"text-center\">\n                <ReloadButton\n                  loading={gettingEnrollmentHistory}\n                  onClick={reloadEnrollmentHistory}\n                />\n              </div>\n            </>\n          ) : (\n            <Enrollments enrollmentHistories={enrollmentHistories} />\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default EnrollmentHistory;\n","/home/pc/Documents/Project/hesmis-front/src/containers/AcademicCalender/index.jsx",[],"/home/pc/Documents/Project/hesmis-front/src/containers/Payments/Invoice.jsx",[],"/home/pc/Documents/Project/hesmis-front/src/config/initialState/result.js",[],"/home/pc/Documents/Project/hesmis-front/src/config/initialState/paymentReference.js",[],"/home/pc/Documents/Project/hesmis-front/src/config/initialState/auth.js",[],"/home/pc/Documents/Project/hesmis-front/src/config/initialState/enrollment.js",[],"/home/pc/Documents/Project/hesmis-front/src/config/initialState/setting.js",[],"/home/pc/Documents/Project/hesmis-front/src/config/initialState/payment.js",[],"/home/pc/Documents/Project/hesmis-front/src/config/initialState/registration.js",[],"/home/pc/Documents/Project/hesmis-front/src/containers/Services/Refund.jsx",[],"/home/pc/Documents/Project/hesmis-front/src/containers/MyProfile/NextOfKin.jsx",[],"/home/pc/Documents/Project/hesmis-front/src/containers/MyProfile/AcademicDetail.jsx",[],"/home/pc/Documents/Project/hesmis-front/src/containers/MyProfile/ChangePassword.jsx",["699"],"import { get, isEmpty } from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport { Card, Form } from 'react-bootstrap';\nimport { useForm } from 'react-hook-form';\nimport { FaUserLock } from 'react-icons/fa';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AlertMessage, InputText, SubmitButton } from '../../components/common';\nimport { authActions } from '../../config/actions';\nimport usePrevious from '../Hooks/usePrevious';\n\nconst ChangePassword = () => {\n  const dispatch = useDispatch();\n  const { register, handleSubmit, errors, reset } = useForm();\n  const changingPassword = useSelector((state) => state.auth.changingPassword);\n  const changePasswordError = useSelector(\n    (state) => state.auth.changePasswordError\n  );\n  const changePasswordSuccess = useSelector(\n    (state) => state.auth.changePasswordSuccess\n  );\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [successMessage, setSuccessMessage] = useState(null);\n  const previousState = usePrevious({\n    changePasswordError,\n    changePasswordSuccess,\n  });\n\n  useEffect(() => {\n    setErrorMessage(null);\n    setSuccessMessage(null);\n    if (!isEmpty(previousState)) {\n      if (\n        previousState.changePasswordError !== changePasswordError &&\n        changePasswordError?.server\n      ) {\n        setErrorMessage(changePasswordError.server.message);\n      }\n      if (\n        previousState.changePasswordSuccess !== changePasswordSuccess &&\n        changePasswordSuccess?.server\n      ) {\n        setSuccessMessage(changePasswordSuccess.server.message);\n        reset();\n      }\n    }\n  }, [changePasswordError, changePasswordSuccess]);\n\n  const onChangePasswordFormSubmit = (data) => {\n    if (!isEmpty(data)) {\n      dispatch(authActions.changePassword(data));\n    }\n  };\n  return (\n    <>\n      <Card.Header className=\"text-primary font600 py-3 text-sm\">\n        <FaUserLock className=\"me-1\" />\n        CHANGE PASSWORD\n      </Card.Header>\n      <Card.Body>\n        {(errorMessage || successMessage) && (\n          <AlertMessage\n            type={errorMessage ? 'danger' : 'success'}\n            message={errorMessage || successMessage}\n          />\n        )}\n        <Form onSubmit={handleSubmit(onChangePasswordFormSubmit)}>\n          <InputText\n            label=\"Old Password\"\n            type=\"password\"\n            name=\"old_password\"\n            inline\n            register={register({\n              required: 'Your old password is Required',\n            })}\n            error={get(errors, 'old_password.message')}\n          />\n          <InputText\n            label=\"New Password\"\n            type=\"password\"\n            name=\"new_password\"\n            inline\n            register={register({\n              required: 'Your New password is Required',\n              minLength: {\n                value: 8,\n                message: 'Password should be at least 8 characters',\n              },\n              maxLength: {\n                value: 16,\n                message: 'Password should be less than 16 characters',\n              },\n            })}\n            error={get(errors, 'new_password.message')}\n          />\n          <InputText\n            label=\"Confirm New Password\"\n            type=\"password\"\n            name=\"confirm_new_password\"\n            inline\n            register={register({\n              required: 'Confirm your New password.',\n              minLength: {\n                value: 8,\n                message: 'Password should be at least 8 characters',\n              },\n              maxLength: {\n                value: 16,\n                message: 'Password should be less than 16 characters',\n              },\n            })}\n            error={get(errors, 'confirm_new_password.message')}\n          />\n\n          <SubmitButton\n            size=\"sm\"\n            loading={changingPassword}\n            text=\"Change Password\"\n            loadingText=\"Updating Password...\"\n            className=\"float-right font600 text-uppercase\"\n          />\n        </Form>\n      </Card.Body>\n    </>\n  );\n};\n\nexport default ChangePassword;\n","/home/pc/Documents/Project/hesmis-front/src/containers/MyProfile/GuardianDetail.jsx",[],"/home/pc/Documents/Project/hesmis-front/src/containers/PaymentReferences/SinglePaymentReference.jsx",[],"/home/pc/Documents/Project/hesmis-front/src/containers/PaymentReferences/ReferenceModal.jsx",["700"],"import { isEmpty } from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, ModalBody, ModalFooter } from 'react-bootstrap';\nimport { FaCheckCircle } from 'react-icons/fa';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AlertMessage, CustomModal } from '../../components/common';\nimport { settingActions } from '../../config/actions';\nimport usePrevious from '../Hooks/usePrevious';\n\nconst ReferenceModal = ({ switchTab }) => {\n  const dispatch = useDispatch();\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [generatedReference, setGeneratedReference] = useState({});\n  const { generateSuccess, generateError } = useSelector(\n    (state) => state.paymentReference\n  );\n  const showModal = useSelector((state) => state.setting.showModal);\n  const prevState = usePrevious({ generateSuccess, generateError });\n\n  useEffect(() => {\n    if (\n      !isEmpty(prevState) &&\n      !isEmpty(generateSuccess) &&\n      generateSuccess !== prevState.generateSuccess\n    ) {\n      setGeneratedReference(generateSuccess);\n      dispatch(settingActions.setShowModal(true));\n      if (switchTab) switchTab();\n    }\n    if (\n      !isEmpty(prevState) &&\n      !isEmpty(generateError) &&\n      generateError !== prevState.generateError\n    ) {\n      setErrorMessage(\n        generateError?.error?.message || generateError?.server?.message\n      );\n    }\n  }, [generateSuccess, generateError]);\n\n  return (\n    <>\n      {errorMessage && <AlertMessage message={errorMessage} />}\n      {!isEmpty(generatedReference) && showModal && (\n        <CustomModal\n          backdrop=\"static\"\n          keyboard={false}\n          title=\"PAYMENT REFERENCE GENERATED SUCCESSFULLY\"\n        >\n          <ModalBody className=\"text-center\">\n            <div className=\"text-md font600er\">\n              <FaCheckCircle className=\"text-success me-1\" />\n              PAYMENT REFERENCE NO.:\n              <span className=\"text-sm font600 text-success mx-1\">\n                {generatedReference.ura_prn}\n              </span>\n            </div>\n\n            <div className=\"text-sm font600er\">\n              TOTAL AMOUNT TO PAY:\n              <span className=\"text-sm font600 text-success mx-1\">\n                {`${parseInt(\n                  generatedReference.amount,\n                  10\n                ).toLocaleString()} UGX`}\n              </span>\n            </div>\n\n            <div className=\"text-xs font600er mt-2\">\n              DATE OF EXPIRY:\n              <span className=\"text-xs font600 text-danger mx-2\">\n                {generatedReference.expiry_date}\n              </span>\n            </div>\n\n            <AlertMessage\n              message=\"Copy this reference number and go to your nearest Bank to make your payments.\"\n              variant=\"info\"\n              className=\"text-center font600 p-1 my-2 text-sm\"\n            />\n          </ModalBody>\n          <ModalFooter className=\"py-2 bg-light border-top\">\n            <Button\n              variant=\"danger\"\n              size=\"sm\"\n              onClick={() => dispatch(settingActions.setShowModal(false))}\n              className=\"text-uppercase\"\n            >\n              Close\n            </Button>\n          </ModalFooter>\n        </CustomModal>\n      )}\n    </>\n  );\n};\n\nReferenceModal.defaultProps = {\n  switchTab: null,\n};\n\nReferenceModal.propTypes = {\n  switchTab: PropTypes.func,\n};\n\nexport default ReferenceModal;\n","/home/pc/Documents/Project/hesmis-front/src/containers/PaymentReferences/GeneratePaymentReference.jsx",["701"],"import { get, isEmpty, sum, sumBy } from 'lodash';\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { Card, Col, Form, Row } from 'react-bootstrap';\nimport { useForm } from 'react-hook-form';\nimport { FaExclamationCircle } from 'react-icons/fa';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  AlertMessage,\n  InputText,\n  ReloadButton,\n  SubmitButton,\n} from '../../components/common';\nimport { paymentActions, paymentReferenceActions } from '../../config/actions';\nimport { getInvoiceAmount } from './helper';\nimport UnPaidInvoices from './UnPaidInvoices';\n\nconst GeneratePaymentReference = () => {\n  const dispatch = useDispatch();\n  const { register, errors, handleSubmit } = useForm();\n  const [invoiceType, setInvoiceType] = useState('future-payments');\n  const [totalInvoiceDue, setTotalInvoiceDue] = useState(0);\n  const [allUnPaidInvoices, setAllUnPaidInvoices] = useState([]);\n  const [selectedRows, setSelectedRows] = useState([]);\n  const { invoices, loading } = useSelector((state) => state.myInvoice);\n  const { generatingPaymentReference } = useSelector(\n    (state) => state.paymentReference\n  );\n\n  // const paymentMode = watch('payment_mode', null);\n\n  const getInvoices = () => dispatch(paymentActions.getMyInvoices());\n\n  useEffect(() => {\n    if (isEmpty(invoices)) getInvoices();\n  }, []);\n\n  useEffect(() => {\n    if (!isEmpty(invoices)) {\n      let invoiceAmountsDue = 0;\n      let unPaidInvoices = [];\n\n      invoices.forEach((invoice) => {\n        const tuitionDue = sumBy(invoice.tuition_invoices, 'amount_due');\n        const functionalDue = sumBy(\n          invoice.functional_fees_invoices,\n          'amount_due'\n        );\n        const otherFeesDue = sumBy(invoice.other_fees_invoices, 'amount_due');\n        const manualsDue = sumBy(invoice.manual_invoices, 'amount_due');\n        invoiceAmountsDue += sum([\n          tuitionDue,\n          functionalDue,\n          otherFeesDue,\n          manualsDue,\n        ]);\n\n        const unPaidTuition = invoice?.tuition_invoices?.filter(\n          (unpaidInvoice) => unpaidInvoice.amount_due > 0\n        );\n        const unPaidFunctional = invoice?.functional_fees_invoices?.filter(\n          (unpaidInvoice) => unpaidInvoice.amount_due > 0\n        );\n        const unPaidManual = invoice?.manual_invoices?.filter(\n          (unpaidInvoice) => unpaidInvoice.amount_due > 0\n        );\n        const unPaidOther = invoice?.other_fees_invoices?.filter(\n          (unpaidInvoice) => unpaidInvoice.amount_due > 0\n        );\n        unPaidInvoices = [\n          ...unPaidInvoices,\n          ...unPaidTuition,\n          ...unPaidFunctional,\n          ...unPaidManual,\n          ...unPaidOther,\n        ];\n      });\n      setTotalInvoiceDue(invoiceAmountsDue);\n      setAllUnPaidInvoices(unPaidInvoices);\n      setSelectedRows(\n        unPaidInvoices.map((unpaidInvoice) => {\n          return {\n            id: unpaidInvoice?.id,\n            invoice_number: unpaidInvoice.invoice_number,\n            amount: unpaidInvoice.amount_due,\n          };\n        })\n      );\n    }\n  }, [invoices]);\n\n  const handleFormSubmit = (data) => {\n    if (!isEmpty(data)) {\n      let payload = data;\n      let url = 'future';\n      if (invoiceType === 'all-unpaid-invoices') url = 'all';\n      else if (invoiceType === 'select-unpaid-invoices') {\n        url = 'bulk';\n        payload = {\n          ...payload,\n          tuition_invoices: getInvoiceAmount(\n            selectedRows,\n            'T',\n            'tuition_invoice_id'\n          ),\n          functional_fees_invoices: getInvoiceAmount(\n            selectedRows,\n            'F',\n            'functional_fees_invoice_id'\n          ),\n          other_fees_invoices: getInvoiceAmount(\n            selectedRows,\n            'O',\n            'functional_fees_invoice_id'\n          ),\n          manual_invoices: getInvoiceAmount(\n            selectedRows,\n            'M',\n            'manual_invoice_id'\n          ),\n        };\n      }\n      dispatch(paymentReferenceActions.generatePaymentReference(payload, url));\n    }\n  };\n\n  const invoiceTypes = [\n    {\n      title: '1. FOR FEES DEPOSIT TO MY ACCOUNT',\n      url: 'future-payments',\n      hidden: false,\n    },\n    {\n      title: '2. FOR ALL PENDING INVOICES',\n      url: 'all-unpaid-invoices',\n      hidden: isEmpty(allUnPaidInvoices),\n    },\n    {\n      title: '3. FOR SPECIFIC INVOICES',\n      url: 'select-unpaid-invoices',\n      hidden: isEmpty(allUnPaidInvoices),\n    },\n  ];\n\n  return (\n    <>\n      {isEmpty(allUnPaidInvoices) && (\n        <AlertMessage\n          message=\"You Have No Unpaid Invoices\"\n          icon={<FaExclamationCircle className=\"me-1\" />}\n          className=\"font600 text-sm p-2\"\n          type=\"info\"\n          extras={\n            <ReloadButton\n              loading={loading}\n              onClick={getInvoices}\n              variant=\"link\"\n              text=\"Reload\"\n              size=\"sm\"\n            />\n          }\n        />\n      )}\n      <Form onSubmit={handleSubmit(handleFormSubmit)}>\n        <Row className=\"row-deck mb-4 g-0\">\n          <Col md={5}>\n            <Card body>\n              <Card.Subtitle className=\"mb-4 font600 text-center text-sm\">\n                SELECT PAYMENT REFERENCE TYPE\n              </Card.Subtitle>\n\n              {invoiceTypes.map((invoice) => (\n                <Fragment key={invoice.url}>\n                  {invoice.hidden === false && (\n                    <Card\n                      body\n                      onClick={() => setInvoiceType(invoice.url)}\n                      className={`mb-2 p-2 text-center rounded font600 ${\n                        invoiceType === invoice.url\n                          ? 'bg-primary text-white'\n                          : 'bg-light text-primary'\n                      }`}\n                      style={{ cursor: 'pointer' }}\n                    >\n                      {invoice.title}\n                    </Card>\n                  )}\n                </Fragment>\n              ))}\n            </Card>\n          </Col>\n          <Col md={7}>\n            <Card body className=\"bg-light\">\n              <Card.Subtitle className=\"mb-4 font600 text-primary text-center text-sm\">\n                <span className=\"me-1\">GENERATE REFERENCE FOR</span>\n                {(invoiceType === 'future-payments' &&\n                  'FEES DEPOSIT TO YOUR ACCOUNT') ||\n                  (invoiceType === 'all-unpaid-invoices' &&\n                    'ALL UNPAID INVOICES')}\n              </Card.Subtitle>\n              {invoiceType === 'all-unpaid-invoices' && (\n                <>\n                  <UnPaidInvoices\n                    selectedRows={selectedRows}\n                    setSelectedRows={setSelectedRows}\n                    invoices={allUnPaidInvoices}\n                  />\n                  <Card.Header className=\"rounded-0 border-0 text-sm py-1 my-3 bg-dark text-white\">\n                    TOTAL AMOUNT TO PAY\n                    <div className=\"card-options text-white\">\n                      {`${totalInvoiceDue.toLocaleString()} UGX`}\n                    </div>\n                  </Card.Header>\n                </>\n              )}\n\n              {invoiceType === 'select-unpaid-invoices' && (\n                <>\n                  <UnPaidInvoices\n                    selectedRows={selectedRows}\n                    setSelectedRows={setSelectedRows}\n                    invoices={allUnPaidInvoices}\n                    editAmount\n                  />\n                  <Card.Header className=\"rounded-0 border-0 text-sm py-1 my-3 bg-dark text-white\">\n                    TOTAL AMOUNT TO PAY\n                    <div className=\"card-options text-white\">\n                      {`${sumBy(selectedRows, 'amount').toLocaleString()} UGX`}\n                    </div>\n                  </Card.Header>\n                </>\n              )}\n\n              {invoiceType === 'future-payments' && (\n                <InputText\n                  name=\"amount\"\n                  label=\"AMOUNT TO DEPOSIT\"\n                  register={register({\n                    required: 'Enter the amount to Deposit E.g 1,000,000',\n                    min: {\n                      value: 500,\n                      message: 'Minimum amount should be 500 UGX',\n                    },\n                    max: {\n                      value: 100000000,\n                      message: 'Minimum amount should be 100,000,000 UGX',\n                    },\n                  })}\n                  type=\"number\"\n                  min=\"500\"\n                  max=\"100000000\"\n                  error={get(errors, 'amount.message')}\n                  requiredField\n                />\n              )}\n\n              <div className=\"mt-3 text-end\">\n                <SubmitButton\n                  text=\"GENERATE REFERENCE\"\n                  size=\"md\"\n                  loading={generatingPaymentReference}\n                  loadingText=\"Generating...\"\n                />\n              </div>\n            </Card>\n          </Col>\n        </Row>\n      </Form>\n    </>\n  );\n};\n\nexport default GeneratePaymentReference;\n","/home/pc/Documents/Project/hesmis-front/src/containers/MyProfile/ProfileData.jsx",[],"/home/pc/Documents/Project/hesmis-front/src/config/initialState/app.js",[],"/home/pc/Documents/Project/hesmis-front/src/containers/RegistrationHistory/SingleRegistrationHistory.jsx",[],"/home/pc/Documents/Project/hesmis-front/src/containers/EnrollmentHistory/Enrollments.jsx",[],"/home/pc/Documents/Project/hesmis-front/src/containers/Results/MyResult.jsx",[],"/home/pc/Documents/Project/hesmis-front/src/helpers/dataTableCustomStyle.js",[],"/home/pc/Documents/Project/hesmis-front/src/containers/Services/ChangeOfProgramme.jsx",[],"/home/pc/Documents/Project/hesmis-front/src/containers/PaymentReferences/helper.js",[],"/home/pc/Documents/Project/hesmis-front/src/containers/PaymentReferences/UnPaidInvoices.jsx",[],"/home/pc/Documents/Project/hesmis-front/src/containers/RegistrationHistory/CourseUnitsTable.jsx",[],"/home/pc/Documents/Project/hesmis-front/src/containers/EnrollmentHistory/SingleEnrollment.jsx",[],"/home/pc/Documents/Project/hesmis-front/src/containers/EnrollmentHistory/GeneratePaymentReference.jsx",["702"],"import { isEmpty, sum, sumBy } from 'lodash';\nimport PropTypes, { object } from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport { Accordion, Card, Col, Form, Row } from 'react-bootstrap';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { SubmitButton } from '../../components/common';\nimport { paymentReferenceActions } from '../../config/actions';\nimport ReferenceModal from '../PaymentReferences/ReferenceModal';\nimport InvoiceCard from './InvoiceCard';\n// import { paymentBanks, paymentModes } from '../PaymentReferences/helper';\n\nconst GeneratePaymentReference = ({ enrollment }) => {\n  const dispatch = useDispatch();\n  const { register, errors, handleSubmit, watch } = useForm({\n    defaultValues: {\n      tuition_amount: parseInt(\n        enrollment?.functionalInvoice?.invoice_amount,\n        10\n      ),\n      functional_amount: parseInt(\n        enrollment?.functionalInvoice?.invoice_amount,\n        10\n      ),\n      other_fees_amount: sumBy(enrollment?.otherFeesInvoice, 'invoice_amount'),\n    },\n  });\n  const [activeKey, setActiveKey] = useState(1);\n  const { generatingPaymentReference } = useSelector(\n    (state) => state.paymentReference\n  );\n\n  const watchValues = watch();\n  // const paymentMode = watch('payment_mode', null);\n\n  const totalAmount =\n    parseInt(enrollment?.functionalInvoice?.invoice_amount, 10) +\n    parseInt(enrollment?.tuitionInvoice?.invoice_amount, 10) +\n    sumBy(enrollment?.otherFeesInvoice, 'invoice_amount');\n\n  const [newTotalAmount, setNewTotalAmount] = useState(totalAmount);\n\n  useEffect(() => {\n    if (!isEmpty(watchValues)) {\n      let newTotal = 0;\n      if (watchValues.tuition_fees_amount) {\n        newTotal += parseInt(watchValues.tuition_fees_amount, 10);\n      }\n\n      if (watchValues.functional_fees_amount) {\n        newTotal += parseInt(watchValues.functional_fees_amount, 10);\n      }\n\n      if (watchValues.other_fees_amount) {\n        newTotal += parseInt(sum(watchValues.other_fees_amount), 10);\n      }\n      if (newTotal !== newTotalAmount) setNewTotalAmount(newTotal);\n    }\n  }, [watchValues]);\n\n  const handleFormSubmit = (data) => {\n    if (!isEmpty(data)) {\n      let payload = data;\n      if (data.tuition_fees_amount) {\n        payload = {\n          ...payload,\n          tuition_invoices: [\n            {\n              tuition_invoice_id: enrollment.tuitionInvoice.id,\n              amount: parseInt(data.tuition_fees_amount, 10),\n            },\n          ],\n        };\n        delete payload.tuition_fees_amount;\n      }\n      if (data.functional_fees_amount) {\n        payload = {\n          ...payload,\n          functional_fees_invoices: [\n            {\n              functional_fees_invoice_id: enrollment.functionalInvoice.id,\n              amount: parseInt(data.functional_fees_amount, 10),\n            },\n          ],\n        };\n        delete payload.functional_fees_amount;\n      }\n      if (data.other_fees_amount) {\n        payload = {\n          ...payload,\n          other_fees_invoices: [\n            {\n              functional_fees_invoice_id: enrollment.otherFeesInvoice.id,\n              amount: parseInt(data.other_fees_amount, 10),\n            },\n          ],\n        };\n        delete payload.other_fees_amount;\n      }\n      dispatch(\n        paymentReferenceActions.generatePaymentReference(payload, 'bulk')\n      );\n    }\n  };\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit(handleFormSubmit)}>\n        <Accordion defaultActiveKey=\"1\" activeKey={activeKey}>\n          {!isEmpty(enrollment.tuitionInvoice) && (\n            <InvoiceCard\n              invoiceTitle=\"Tuition Fees Invoice\"\n              invoiceCardId={1}\n              invoiceType=\"tuition_fees_amount\"\n              activeKey={activeKey}\n              register={register}\n              errors={errors}\n              setActiveKey={setActiveKey}\n              invoice={enrollment.tuitionInvoice}\n            />\n          )}\n          {!isEmpty(enrollment.tuitionInvoice) && (\n            <InvoiceCard\n              invoiceTitle=\"Functional Fees Invoice\"\n              invoiceCardId={2}\n              invoiceType=\"functional_fees_amount\"\n              register={register}\n              errors={errors}\n              activeKey={activeKey}\n              setActiveKey={setActiveKey}\n              invoice={enrollment.functionalInvoice}\n            />\n          )}\n          {!isEmpty(enrollment.otherFeesInvoice) && (\n            <InvoiceCard\n              invoiceTitle=\"Other Fees Invoice\"\n              invoiceCardId={3}\n              invoiceType=\"other_fees_amount\"\n              register={register}\n              errors={errors}\n              activeKey={activeKey}\n              setActiveKey={setActiveKey}\n              invoice={enrollment.otherFeesInvoice}\n            />\n          )}\n        </Accordion>\n        {parseInt(newTotalAmount, 10) > 0 && (\n          <>\n            <Card.Header className=\"rounded-0 border-0 text-sm py-1 mb-2 bg-dark text-white\">\n              TOTAL AMOUNT TO PAY\n              <div className=\"card-options text-white\">{`${newTotalAmount.toLocaleString()} UGX`}</div>\n            </Card.Header>\n\n            {/* TODO: To be activated  when Different Payments Modes are allowed\n            <SelectInput\n              selectOptions={paymentModes}\n              name=\"payment_mode\"\n              label=\"PAYMENT MODE\"\n              register={register({\n                required: 'Payment Mode is Required',\n              })}\n              inline\n              error={get(errors, 'payment_mode.message')}\n              requiredField\n            />\n            {!includes(['MOBPMT', 'ONLINE'], paymentMode) && (\n              <SelectInput\n                selectOptions={paymentBanks}\n                name=\"payment_bank_code\"\n                label=\"PAYMENT BANK\"\n                inline\n                register={register({\n                  required: 'Payment Bank is Required',\n                })}\n                error={get(errors, 'payment_bank_code.message')}\n              />\n            )} */}\n\n            <Row>\n              <Col md={12} className=\"text-right\">\n                <SubmitButton\n                  text=\"GENERATE REFERENCE NO.\"\n                  size=\"sm\"\n                  loading={generatingPaymentReference}\n                  loadingText=\"Generating...\"\n                  variant=\"info\"\n                  className=\"text-sm mt-2\"\n                />\n              </Col>\n            </Row>\n          </>\n        )}\n      </Form>\n\n      <ReferenceModal />\n    </>\n  );\n};\n\nGeneratePaymentReference.defaultProps = {\n  enrollment: {},\n};\n\nGeneratePaymentReference.propTypes = {\n  enrollment: PropTypes.oneOfType([object]),\n};\n\nexport default GeneratePaymentReference;\n","/home/pc/Documents/Project/hesmis-front/src/containers/EnrollmentHistory/InvoiceCard.jsx",[],"/home/pc/Documents/Project/hesmis-front/src/containers/RegistrationHistory/Registration.jsx",[],"/home/pc/Documents/Project/hesmis-front/src/containers/EnrollmentHistory/EnrolledStudent.jsx",[],"/home/pc/Documents/Project/hesmis-front/src/containers/Payments/TransactionTables.jsx",[],"/home/pc/Documents/Project/hesmis-front/src/containers/EnrollmentHistory/EnrollForm.jsx",["703","704","705"],"import { get, isEmpty } from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport PropTypes, { object } from 'prop-types';\nimport { Card, Col, Form, Row } from 'react-bootstrap';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  AlertMessage,\n  DataNotFound,\n  ReloadButton,\n  SelectInput,\n  SubmitButton,\n} from '../../components/common';\nimport { enrollmentActions, appActions } from '../../config/actions';\nimport { formatMetadata, generalFormatter } from '../../helpers/dataFormatter';\nimport usePrevious from '../Hooks/usePrevious';\n\nconst EnrollForm = ({\n  enrollmentEvent,\n  currentStudentProgramme,\n  reloadEnrollmentEvent,\n}) => {\n  const dispatch = useDispatch();\n  const { register, handleSubmit, errors } = useForm();\n  const { enrolling, enrollError, gettingCurrentEvents } = useSelector(\n    (state) => state.enrollment\n  );\n  const { metadata } = useSelector((state) => state.app);\n\n  const [enrollmentStatusOptions, setEnrollmentOptions] = useState([]);\n  const [studyYearOptions, setStudyYearOptions] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const prevState = usePrevious({ enrollError });\n\n  useEffect(() => {\n    if (isEmpty(metadata)) dispatch(appActions.getMetadata());\n  }, []);\n\n  useEffect(() => {\n    if (\n      prevState &&\n      !isEmpty(enrollError) &&\n      enrollError !== prevState.enrollError\n    ) {\n      setErrorMessage(enrollError?.server?.message);\n    }\n  }, [enrollError]);\n\n  useEffect(() => {\n    if (!isEmpty(metadata)) {\n      setEnrollmentOptions(formatMetadata(metadata, 'ENROLLMENT STATUSES'));\n    }\n    if (!isEmpty(currentStudentProgramme)) {\n      setStudyYearOptions(\n        generalFormatter(\n          currentStudentProgramme.programme_study_years || [],\n          'programme_study_years',\n          'id'\n        )\n      );\n    }\n  }, [metadata]);\n\n  const onClickEnrollButton = (data) => {\n    setErrorMessage(null);\n    if (\n      !isEmpty(data) &&\n      !isEmpty(enrollmentEvent) &&\n      !isEmpty(currentStudentProgramme)\n    ) {\n      data.event_id = enrollmentEvent?.id;\n      dispatch(\n        enrollmentActions.enrollStudent({\n          ...data,\n          student_programme_id: currentStudentProgramme.id,\n        })\n      );\n    }\n  };\n\n  return (\n    <div>\n      {isEmpty(enrollmentEvent) ? (\n        <>\n          <DataNotFound message=\"There is currently No open Enrollment Event.\" />\n          <div className=\"text-center\">\n            <ReloadButton\n              loading={gettingCurrentEvents}\n              onClick={reloadEnrollmentEvent}\n            />\n          </div>\n        </>\n      ) : (\n        <Card>\n          <Card.Header className=\"font600 text-muted text-sm py-3\">\n            ENROLL FOR\n            <strong className=\"mx-1\">{`${enrollmentEvent?.semester}, `}</strong>\n            {enrollmentEvent?.academic_year}\n            {currentStudentProgramme && (\n              <div className=\"card-options\">\n                <div className=\"text-xs\">\n                  {`PROG: ${currentStudentProgramme?.programme_code} - ${currentStudentProgramme?.programme_title}`}\n                </div>\n              </div>\n            )}\n          </Card.Header>\n          <Form onSubmit={handleSubmit(onClickEnrollButton)}>\n            <Card.Body>\n              {errorMessage && (\n                <AlertMessage\n                  message={errorMessage}\n                  show\n                  className=\"py-1 text-sm\"\n                />\n              )}\n              <Row>\n                <Col md={6}>\n                  <SelectInput\n                    name=\"study_year_id\"\n                    register={register({\n                      required:\n                        'Select the year of study you are enrolling for',\n                    })}\n                    label=\"YEAR OF STUDY\"\n                    inline\n                    selectOptions={studyYearOptions}\n                    error={get(errors, 'study_year_id.message')}\n                  />\n                </Col>\n                <Col md={6}>\n                  <SelectInput\n                    name=\"enrollment_status_id\"\n                    register={register({\n                      required: 'Select enrollment type',\n                    })}\n                    label=\"ENROLLING AS?\"\n                    inline\n                    selectOptions={enrollmentStatusOptions}\n                    error={get(errors, 'enrollment_status_id.message')}\n                  />\n                </Col>\n              </Row>\n            </Card.Body>\n            <Card.Footer className=\"text-right\">\n              <SubmitButton\n                text=\"Enroll Now\"\n                loading={enrolling}\n                loadingText=\"Enrolling...\"\n              />\n            </Card.Footer>\n          </Form>\n        </Card>\n      )}\n    </div>\n  );\n};\n\nEnrollForm.propTypes = {\n  reloadEnrollmentEvent: PropTypes.func.isRequired,\n  currentStudentProgramme: PropTypes.oneOfType([object]).isRequired,\n  enrollmentEvent: PropTypes.oneOfType([object]).isRequired,\n};\n\nexport default EnrollForm;\n","/home/pc/Documents/Project/hesmis-front/src/containers/EnrollmentHistory/InvoiceForm.jsx",[],"/home/pc/Documents/Project/hesmis-front/src/containers/RegistrationHistory/RegisterStudent.jsx",["706","707"],"import { isEmpty } from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport { Card } from 'react-bootstrap';\nimport PropTypes, { any } from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  AlertMessage,\n  DataNotFound,\n  DataSpinner,\n  ReloadButton,\n} from '../../components/common';\nimport {\n  authActions,\n  appActions,\n  registrationActions,\n} from '../../config/actions';\nimport { formatMetadata } from '../../helpers/dataFormatter';\nimport RegistrationForm from './RegistrationForm';\nimport usePrevious from '../Hooks/usePrevious';\n\nconst RegisterStudent = ({\n  registrationEvent,\n  enrollmentEvent,\n  enrollmentHistory,\n  reloadRegistrationEvent,\n}) => {\n  const dispatch = useDispatch();\n  const { authUser, currentStudentProgramme } = useSelector(\n    (state) => state.auth\n  );\n  const { metadata } = useSelector((state) => state.app);\n  const {\n    courseUnitsByStudyYear,\n    gettingCourseUnits,\n    registeringStudent,\n    gettingCurrentEvents,\n    registrationError,\n    registrationSuccess,\n  } = useSelector((state) => state.registration);\n  const [registrationStatusOptions, setRegistrationStatusOptions] = useState(\n    []\n  );\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [registrationType, setRegistrationType] = useState(null);\n  const [selectedCourseUnits, setSelectedCourseUnits] = useState([]);\n  const prevState = usePrevious({ registrationError, registrationSuccess });\n\n  useEffect(() => {\n    if (isEmpty(metadata)) dispatch(appActions.getMetadata());\n    if (isEmpty(authUser)) dispatch(authActions.getAuthUser());\n    if (isEmpty(courseUnitsByStudyYear))\n      dispatch(registrationActions.getCourseUnits(currentStudentProgramme?.id));\n  }, []);\n\n  useEffect(() => {\n    if (!isEmpty(metadata)) {\n      setRegistrationStatusOptions(\n        formatMetadata(metadata, 'REGISTRATION STATUSES')\n      );\n      const registrationTypes = formatMetadata(metadata, 'REGISTRATION TYPES');\n      const findFullRegistration = registrationTypes.find((type) =>\n        type.label.includes('FULL')\n      );\n      setRegistrationType(findFullRegistration);\n    }\n  }, [metadata]);\n\n  useEffect(() => {\n    setSuccessMessage(null);\n    setErrorMessage(null);\n    if (!isEmpty(prevState)) {\n      if (\n        !isEmpty(registrationError) &&\n        prevState.registrationError !== registrationError\n      ) {\n        setErrorMessage(\n          registrationError?.error || registrationError.server.message\n        );\n      }\n\n      if (\n        !isEmpty(registrationSuccess) &&\n        prevState.registrationSuccess !== registrationSuccess\n      ) {\n        setSuccessMessage(registrationSuccess?.server?.message);\n      }\n    }\n  }, [registrationError, registrationSuccess]);\n\n  const onClickRegisterButton = () => {\n    if (!isEmpty(registrationEvent)) {\n      const dataToSend = {\n        event_id: registrationEvent?.id,\n        enrollment_id: enrollmentHistory?.id,\n        registration_type_id: registrationType ? registrationType.value : null,\n        course_units: selectedCourseUnits.map((courseUnit) => ({\n          course_unit_id: courseUnit.course_unit_id,\n          course_unit_status_id: courseUnit.registrationStatus?.value,\n        })),\n      };\n      dispatch(registrationActions.registerStudent(dataToSend));\n    }\n  };\n\n  return (\n    <div>\n      {isEmpty(registrationEvent) ? (\n        <>\n          <DataNotFound message=\"There is currently No open Registration Event.\" />\n          <div className=\"text-center\">\n            <ReloadButton\n              loading={gettingCurrentEvents}\n              onClick={reloadRegistrationEvent}\n            />\n          </div>\n        </>\n      ) : (\n        <Card body className=\"border-0 p-0\">\n          {errorMessage && <AlertMessage message={errorMessage} />}\n          {successMessage && (\n            <AlertMessage type=\"success\" message={successMessage} />\n          )}\n          <Card.Header className=\"rounded-0 font600 text-danger text-xs mb-3 border\">\n            REGISTER COURSES FOR\n            <strong className=\"mx-1 font600\">\n              {enrollmentHistory?.studyYear?.programme_study_years}\n            </strong>\n            <strong className=\"me-1 font600\">\n              {`${enrollmentEvent?.semester} -`}\n            </strong>\n            {enrollmentEvent?.academic_year}\n            {currentStudentProgramme && (\n              <div className=\"card-options\">\n                <div className=\"text-info\">\n                  PROG:\n                  {` ${currentStudentProgramme?.programme_title}`}\n                </div>\n              </div>\n            )}\n          </Card.Header>\n          {gettingCourseUnits && isEmpty(courseUnitsByStudyYear) ? (\n            <DataSpinner />\n          ) : (\n            <RegistrationForm\n              registrationStatusOptions={registrationStatusOptions}\n              courseUnitsByStudyYear={courseUnitsByStudyYear}\n              selectedCourseUnits={selectedCourseUnits}\n              setSelectedCourseUnits={setSelectedCourseUnits}\n              onClickRegisterButton={onClickRegisterButton}\n              registeringStudent={registeringStudent}\n            />\n          )}\n        </Card>\n      )}\n    </div>\n  );\n};\n\nRegisterStudent.propTypes = {\n  reloadRegistrationEvent: PropTypes.func.isRequired,\n  registrationEvent: PropTypes.oneOfType([any]).isRequired,\n  enrollmentHistory: PropTypes.oneOfType([any]).isRequired,\n  enrollmentEvent: PropTypes.oneOfType([any]).isRequired,\n};\n\nexport default RegisterStudent;\n","/home/pc/Documents/Project/hesmis-front/src/containers/RegistrationHistory/RegisteredStudent.jsx",[],"/home/pc/Documents/Project/hesmis-front/src/containers/RegistrationHistory/RegistrationForm.jsx",[],"/home/pc/Documents/Project/hesmis-front/src/containers/RegistrationHistory/SelectedCourseUnits.jsx",[],"/home/pc/Documents/Project/hesmis-front/src/containers/RegistrationHistory/StudyYearCourseUnits.jsx",[],"/home/pc/Documents/Project/hesmis-front/src/containers/RegistrationHistory/RegistrationStatusPopUp.jsx",[],"/home/pc/Documents/Project/hesmis-front/src/config/reducers/payment/myTransaction.js",[],"/home/pc/Documents/Project/hesmis-front/src/config/reducers/payment/myInvoice.js",[],"/home/pc/Documents/Project/hesmis-front/src/config/reducers/app/server.js",[],"/home/pc/Documents/Project/hesmis-front/src/config/reducers/app/index.js",[],"/home/pc/Documents/Project/hesmis-front/src/config/reducers/enrollment/index.js",[],"/home/pc/Documents/Project/hesmis-front/src/config/reducers/result/index.js",[],"/home/pc/Documents/Project/hesmis-front/src/config/reducers/registration/index.js",[],"/home/pc/Documents/Project/hesmis-front/src/config/reducers/setting/index.js",[],"/home/pc/Documents/Project/hesmis-front/src/config/reducers/auth/index.js",[],"/home/pc/Documents/Project/hesmis-front/src/containers/Institutions/index.jsx",[],"/home/pc/Documents/Project/hesmis-front/src/containers/Institutions/ChangeOfProgramme.jsx",[],"/home/pc/Documents/Project/hesmis-front/src/containers/Institutions/Refund.jsx",[],"/home/pc/Documents/Project/hesmis-front/src/containers/Scholarships/index.jsx",["708","709","710"],"import React, { useState } from 'react';\nimport { Card, Col, Row } from 'react-bootstrap';\nimport { FaIdCard, FaList, FaReplyAll, FaUserGraduate, FaUserPlus } from 'react-icons/fa';\nimport AdvertForm from './AdvertForm';\nimport ChangeOfProgramme from './ChangeOfProgramme';\nimport ScholarshipList from './ScholarshipList';\n\nconst Scholarships = () => {\n  const [currentTab, setCurrentTab] = useState('service-dashboard');\n  const serviceList = [\n    {\n      id: 1,\n      icon: <FaIdCard className=\"display-4 mb-2\" />,\n      title: 'View Applicants',\n      action: 'view-applicants',\n    },\n    {\n      id: 2,\n      icon: <FaUserGraduate className=\"display-4 mb-2\" />,\n      title: 'View All Scholarships',\n      action: 'list-all-scholarships',\n    },\n    {\n      id: 3,\n      icon: <FaList className=\"display-4 mb-2\" />,\n      title: 'Create Scholarship Advert',\n      action: 'scholarship-advert-form',\n    },\n  ];\n\n  return (\n    <>\n      {(currentTab === 'list-all-scholarships' && (\n        <ScholarshipList setCurrentTab={setCurrentTab} />\n      )) ||\n        (currentTab === 'scholarship-advert-form' && (\n          <AdvertForm setCurrentTab={setCurrentTab} />\n        )) || (\n          <Row className=\"row-deck justify-content-center w-100 overflow-hidden\">\n            {serviceList.map((service) => (\n              <Col md={3} key={service.id}>\n                <Card\n                  body\n                  className=\"text-center border rounded mb-2 text-primary service-card\"\n                  onClick={() => setCurrentTab(service.action)}\n                >\n                  {service.icon}\n                  <div className=\"font600 text-sm text-uppercase\">\n                    {service.title}\n                  </div>\n                </Card>\n              </Col>\n            ))}\n          </Row>\n        )}\n    </>\n  );\n};\n\nexport default Scholarships;\n","/home/pc/Documents/Project/hesmis-front/src/containers/Scholarships/Refund.jsx",[],["711","712"],"/home/pc/Documents/Project/hesmis-front/src/containers/Scholarships/ChangeOfProgramme.jsx",[],"/home/pc/Documents/Project/hesmis-front/src/containers/Scholarships/ScholarshipList.jsx",["713","714","715","716","717","718"],"import React, { useEffect, useState, Fragment } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  AlertMessage,\n  CustomModal,\n  DataNotFound,\n  DataSpinner,\n  ReloadButton,\n} from '../../components/common';\nimport { scholarshipActions } from '../../config/actions';\nimport usePrevious from '../Hooks/usePrevious';\nimport { isEmpty, orderBy, pick, toArray } from 'lodash';\nimport PropTypes, { object } from 'prop-types';\nimport { Card, Col, Row, Table } from 'react-bootstrap';\nimport ViewMore from './ViewMore';\nimport PDFView from './PDFView';\nimport { render } from 'react-dom';\n\nconst ScholarshipList = () => {\n  const dispatch = useDispatch();\n  const { scholarships, loading, loadError } = useSelector((state) => state.scholarship);\n  const { currentStudentProgramme } = useSelector((state) => state.auth);\n  const [scholarshipList, setScholarshipList] = useState({});\n  const [errorMessage, setErrorMessage] = useState(null);\n  const prevState = usePrevious({ loadError });\n  const [showModel, setShowModal] = useState(false);\n\n  const getScholarshipList = () => {\n    setErrorMessage(null);\n    dispatch(scholarshipActions.getScholarships(currentStudentProgramme?.id));\n  };\n  const viewMore = () => {\n    console.log(\"CLicked\");\n    setShowModal(true);\n  }\n  useEffect(() => {\n    if (scholarships) {\n      const findResult = scholarships.find(\n        (scholarship) =>\n          scholarship.data\n      );\n      if (findResult) setScholarshipList(findResult);\n      else getScholarshipList();\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!isEmpty(scholarships)) {\n      //console.log(scholarships)\n      const findResult = scholarships.find(\n        (scholarship) =>\n          scholarship?.data\n      );\n      if (findResult) setScholarshipList(findResult);\n      else {\n        setScholarshipList({});\n        setErrorMessage(null);\n      }\n    }\n  }, [scholarships, loading]);\n\n  useEffect(() => {\n    if (\n      !isEmpty(prevState) &&\n      !isEmpty(loadError) &&\n      loadError !== prevState.loadError\n    ) {\n      setErrorMessage(loadError?.error?.message || loadError?.server?.message);\n    }\n  }, [loadError]);\n\n  return (\n    <div>\n      <Card>\n        <Card.Header className=\"py-2\">\n          <div className=\"font600 text-uppercase text-sm\">List of Available Scholarships</div>\n          <div className=\"card-options\">\n            <ReloadButton loading={loading} onClick={getScholarshipList} />\n          </div>\n        </Card.Header>\n        <Card.Body>\n          {errorMessage && <AlertMessage message={errorMessage} />}\n          {loading && isEmpty(scholarshipList) ? (\n            <DataSpinner />\n          ) : (\n            <>\n              {isEmpty(scholarshipList) ? (\n                <DataNotFound message=\"You have No Results\" />\n              ) : (\n\n                <div>\n                  <Table\n                    size=\"sm\"\n                    cellPadding={5}\n                    bordered\n                    responsive\n                    striped\n                    className=\"text-sm font500 border table-sm\"\n                  >\n                    {scholarshipList.data?.map((semester) => (\n                      <Fragment\n                        key={`${semester.programme_study_year}-${semester.semester}-${semester.academic_year}`}\n                      >\n                        <thead>\n                          <tr className=\"bg-dark p-2 text-white font600 text-left\">\n                            <td colSpan={8} className=\"py-2\">\n                              <span>{`YEAR - ${semester.academic_year} - ${semester.semester}`}</span>\n                            </td>\n                          </tr>\n                          <tr className=\"bg-light text-primary font600 text-sm\">\n                            <td width={30}>CODE</td>\n                            <td>Scholarship Name</td>\n                            <td width=\"50px\">Level of Study</td>\n                            <td width=\"50px\">Institution</td>\n                            <td width=\"50px\">Deadline</td>\n                            <td width=\"100px\">Country of Study</td>\n                            <td width=\"50px\">Status</td>\n                            <td width=\"50px\">Action</td>\n                          </tr>\n                        </thead>\n                        <tbody className=\"text-uppercase\">\n                          {orderBy(semester?.results, ['scholarshipCode'])?.map(\n                            (record) => (\n                              <tr\n                                key={record.scholarshipId}\n                                className={record.remark !== 'NP' ? 'font600' : ''}\n                              >\n                                <td>{record.scholarshipCode}</td>\n                                <td>{record.scholarshipName}</td>\n                                <td>{record.levelOfStudy}</td>\n                                <td>{record.institutionName}</td>\n                                <td>{record.applicationDeadline}</td>\n                                <td>{record.countryOfStudy}</td>\n                                <td>{record.status}</td>\n                                <td><ViewMore loading={loading} onClick={viewMore} /></td>\n                              </tr>\n                            )\n                          )}\n                          <tr className=\"font600 text-uppercase text-sm\">\n                            <td colSpan={5} className=\"py-2\">\n                              {`Semester REMARK: ${semester.remark}`}\n                              {!isEmpty(semester?.retake_courses) && (\n                                <span className=\"text-danger ms-2\">\n                                  {toArray(semester?.retake_courses).join(', ')}\n                                </span>\n                              )}\n                            </td>\n                            <td colSpan={2} className=\"py-2\">\n                              GPA:\n                              <span className=\"mx-1\">{semester?.current_gpa}</span>\n                            </td>\n                            <td colSpan={2} className=\"py-2\">\n                              CGPA:\n                              <span className=\"mx-1\">{semester?.cgpa}</span>\n                            </td>\n                          </tr>\n                          <tr>\n                            <td colSpan={9} style={{ height: '24px' }}>\n                              <span />\n                            </td>\n                          </tr>\n                        </tbody>\n                      </Fragment>\n                    ))}\n                  </Table>\n                </div>\n              )}\n            </>\n          )}\n        </Card.Body>\n      </Card>\n      <CustomModal\n        title=\"READ MORE\"\n        show={showModel}\n        size=\"lg\"\n      >        <PDFView />\n      </CustomModal>\n    </div>\n  );\n};\n\n\nScholarshipList.propTypes = {\n  scholarshipList: PropTypes.oneOfType([object]).isRequired,\n};\n\nexport default ScholarshipList;","/home/pc/Documents/Project/hesmis-front/src/config/actions/scholarship/index.js",[],"/home/pc/Documents/Project/hesmis-front/src/config/saga/scholarship/index.js",["719","720"],"import { takeLatest, fork, put } from 'redux-saga/effects';\nimport axios from 'axios';\nimport {\n  authActions,\n  scholarshipActions,\n  paymentReferenceActions,\n} from '../../actions';\n\nfunction* getScholarships(actions) {\n  try {\n    const response = yield axios({\n      url: '/scholarships',\n      method: 'GET',\n      params: actions.data,\n    });\n    yield put({\n      type: scholarshipActions.GET_SCHOLARSHIPS_SUCCESS,\n      data: response.data,\n    });\n  } catch (error) {\n    yield put({\n      type: scholarshipActions.GET_SCHOLARSHIPS_ERROR ,\n      error: error.data,\n    });\n  }\n}\n\nfunction* watchGetScholarships() {\n  yield takeLatest(scholarshipActions.GET_SCHOLARSHIPS_REQUEST , getScholarships);\n}\n\nconst forkFunctions = [\n  fork(watchGetScholarships),\n];\n\nexport default forkFunctions;\n","/home/pc/Documents/Project/hesmis-front/src/config/initialState/scholarship.js",[],"/home/pc/Documents/Project/hesmis-front/src/config/reducers/scholarship/index.js",["721"],"import { uniqBy } from 'lodash';\nimport { scholarshipActions } from '../../actions';\nimport initialState from '../../initialState';\n\nfunction scholarship(state = initialState.scholarship, actions) {\n  switch (actions.type) {\n    case scholarshipActions.GET_SCHOLARSHIPS_REQUEST:\n      return {\n        ...state,\n        loadError: {},\n        loading: true,\n      };\n    case scholarshipActions.GET_SCHOLARSHIPS_SUCCESS:\n      return {\n        ...state,\n        scholarships: [actions.data, ...state.scholarships],//uniqBy([actions.data, ...state.scholarships], 'student_number'),\n        loading: false,\n      };\n    case scholarshipActions.GET_SCHOLARSHIPS_ERROR:\n      return {\n        ...state,\n        loadError: actions.error,\n        loading: false,\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default scholarship;\n","/home/pc/Documents/Project/hesmis-front/src/containers/Scholarships/ViewMore.jsx",[],"/home/pc/Documents/Project/hesmis-front/src/containers/Scholarships/PDFView.jsx",["722","723"],"import React from 'react';\nimport { PDFViewer, Page, Image, Text, View, Document, StyleSheet } from '@react-pdf/renderer';\n\nconst MyDocument = () => (\n    <Document title='scholarship-123' size=\"A4\">\n        <Page style={styles.body}>\n            <Text style={styles.header} fixed>\n                ~ Created with react-pdf ~\n            </Text>\n            <Text style={styles.title}>Don Quijote de la Mancha</Text>\n            <Text style={styles.author}>Miguel de Cervantes</Text>\n\n            <Text style={styles.subtitle}>\n                Capítulo I: Que trata de la condición y ejercicio del famoso hidalgo D.\n                Quijote de la Mancha\n            </Text>\n            <Text style={styles.text}>\n                En un lugar de la Mancha, de cuyo nombre no quiero acordarme, no ha\n                mucho tiempo que vivía un hidalgo de los de lanza en astillero, adarga\n                antigua, rocín flaco y galgo corredor. Una olla de algo más vaca que\n                carnero, salpicón las más noches, duelos y quebrantos los sábados,\n                lentejas los viernes, algún palomino de añadidura los domingos,\n                consumían las tres partes de su hacienda. El resto della concluían sayo\n                de velarte, calzas de velludo para las fiestas con sus pantuflos de lo\n                mismo, los días de entre semana se honraba con su vellori de lo más\n                fino. Tenía en su casa una ama que pasaba de los cuarenta, y una sobrina\n                que no llegaba a los veinte, y un mozo de campo y plaza, que así\n                ensillaba el rocín como tomaba la podadera. Frisaba la edad de nuestro\n                hidalgo con los cincuenta años, era de complexión recia, seco de carnes,\n                enjuto de rostro; gran madrugador y amigo de la caza. Quieren decir que\n                tenía el sobrenombre de Quijada o Quesada (que en esto hay alguna\n                diferencia en los autores que deste caso escriben), aunque por\n                conjeturas verosímiles se deja entender que se llama Quijana; pero esto\n                importa poco a nuestro cuento; basta que en la narración dél no se salga\n                un punto de la verdad\n            </Text>\n            <Text style={styles.text}>\n                Es, pues, de saber, que este sobredicho hidalgo, los ratos que estaba\n                ocioso (que eran los más del año) se daba a leer libros de caballerías\n                con tanta afición y gusto, que olvidó casi de todo punto el ejercicio de\n                la caza, y aun la administración de su hacienda; y llegó a tanto su\n                curiosidad y desatino en esto, que vendió muchas hanegas de tierra de\n                sembradura, para comprar libros de caballerías en que leer; y así llevó\n                a su casa todos cuantos pudo haber dellos; y de todos ningunos le\n                parecían tan bien como los que compuso el famoso Feliciano de Silva:\n                porque la claridad de su prosa, y aquellas intrincadas razones suyas, le\n                parecían de perlas; y más cuando llegaba a leer aquellos requiebros y\n                cartas de desafío, donde en muchas partes hallaba escrito: la razón de\n                la sinrazón que a mi razón se hace, de tal manera mi razón enflaquece,\n                que con razón me quejo de la vuestra fermosura, y también cuando leía:\n                los altos cielos que de vuestra divinidad divinamente con las estrellas\n                se fortifican, y os hacen merecedora del merecimiento que merece la\n                vuestra grandeza.\n            </Text>\n            <Text style={styles.text}>\n                Con estas y semejantes razones perdía el pobre caballero el juicio, y\n                desvelábase por entenderlas, y desentrañarles el sentido, que no se lo\n                sacara, ni las entendiera el mismo Aristóteles, si resucitara para sólo\n                ello. No estaba muy bien con las heridas que don Belianis daba y\n                recibía, porque se imaginaba que por grandes maestros que le hubiesen\n                curado, no dejaría de tener el rostro y todo el cuerpo lleno de\n                cicatrices y señales; pero con todo alababa en su autor aquel acabar su\n                libro con la promesa de aquella inacabable aventura, y muchas veces le\n                vino deseo de tomar la pluma, y darle fin al pie de la letra como allí\n                se promete; y sin duda alguna lo hiciera, y aun saliera con ello, si\n                otros mayores y continuos pensamientos no se lo estorbaran. Tuvo muchas\n                veces competencia con el cura de su lugar (que era hombre docto graduado\n                en Sigüenza), sobre cuál había sido mejor caballero, Palmerín de\n                Inglaterra o Amadís de Gaula; mas maese Nicolás, barbero del mismo\n                pueblo, decía que ninguno llegaba al caballero del Febo, y que si alguno\n                se le podía comparar, era don Galaor, hermano de Amadís de Gaula, porque\n                tenía muy acomodada condición para todo; que no era caballero\n                melindroso, ni tan llorón como su hermano, y que en lo de la valentía no\n                le iba en zaga.\n            </Text>\n            <Text style={styles.text}>\n                En resolución, él se enfrascó tanto en su lectura, que se le pasaban las\n                noches leyendo de claro en claro, y los días de turbio en turbio, y así,\n                del poco dormir y del mucho leer, se le secó el cerebro, de manera que\n                vino a perder el juicio. Llenósele la fantasía de todo aquello que leía\n                en los libros, así de encantamientos, como de pendencias, batallas,\n                desafíos, heridas, requiebros, amores, tormentas y disparates\n                imposibles, y asentósele de tal modo en la imaginación que era verdad\n                toda aquella máquina de aquellas soñadas invenciones que leía, que para\n                él no había otra historia más cierta en el mundo.\n            </Text>\n            <Text style={styles.subtitle} break>\n                Capítulo II: Que trata de la primera salida que de su tierra hizo el\n                ingenioso Don Quijote\n            </Text>\n            <Text style={styles.text}>\n                Hechas, pues, estas prevenciones, no quiso aguardar más tiempo a poner\n                en efeto su pensamiento, apretándole a ello la falta que él pensaba que\n                hacía en el mundo su tardanza, según eran los agravios que pensaba\n                deshacer, tuertos que enderezar, sinrazones que emendar y abusos que\n                mejorar y deudas que satisfacer. Y así, sin dar parte a persona alguna\n                de su intención y sin que nadie le viese, una mañana, antes del día, que\n                era uno de los calurosos del mes de Julio, se armó de todas sus armas,\n                subió sobre Rocinante, puesta su mal compuesta celada, embrazó su\n                adarga, tomó su lanza y por la puerta falsa de un corral salió al campo\n                con grandísimo contento y alborozo de ver con cuánta facilidad había\n                dado principio a su buen deseo. Mas apenas se vio en el campo cuando le\n                asaltó un pensamiento terrible, y tal, que por poco le hiciera dejar la\n                comenzada empresa; y fue que le vino a la memoria que no era armado\n                caballero, y que, conforme a ley de caballería, ni podía ni debía tomar\n                armas con ningún caballero; y puesto que lo fuera, había de llevar armas\n                blancas, como novel caballero, sin empresa en el escudo, hasta que por\n                su esfuerzo la ganase. Estos pensamientos le hicieron titubear en su\n                propósito; mas pudiendo más su locura que otra razón alguna, propuso de\n                hacerse armar caballero del primero que topase, a imitación de otros\n                muchos que así lo hicieron, según él había leído en los libros que tal\n                le tenían. En lo de las armas blancas, pensaba limpiarlas de manera, en\n                teniendo lugar, que lo fuesen más que un arminio; y con esto se quietó18\n                y prosiguió su camino, sin llevar otro que aquel que su caballo quería,\n                creyendo que en aquello consistía la fuerza de las aventuras\n            </Text>\n            <Text style={styles.text}>\n                Yendo, pues, caminando nuestro flamante aventurero, iba hablando consigo\n                mesmo, y diciendo: —¿Quién duda, sino que en los venideros tiempos,\n                cuando salga a luz la verdadera historia de mis famosos hechos, que el\n                sabio que los escribiere no ponga, cuando llegue a contar esta mi\n                primera salida tan de mañana, desta manera?: Apenas había el rubicundo\n                Apolo tendido por la faz de la ancha y espaciosa tierra las doradas\n                hebras de sus hermosos cabellos, y apenas los pequeños y pintados\n                pajarillos con sus arpadas lenguas habían saludado con dulce y meliflua\n                armonía la venida de la rosada Aurora, que, dejando la blanda cama del\n                celoso marido, por las puertas y balcones del manchego horizonte a los\n                mortales se mostraba, cuando el famoso caballero don Quijote de la\n                Mancha, dejando las ociosas plumas, subió sobre su famoso caballo\n                Rocinante y comenzó a caminar por el antiguo y conocido Campo de\n                Montiel.\n            </Text>\n            <Text style={styles.text}>\n                Y era la verdad que por él caminaba; y añadió diciendo: —Dichosa edad y\n                siglo dichoso aquel adonde saldrán a luz las famosas hazañas mías,\n                dignas de entallarse en bronces, esculpirse en mármoles y pintarse en\n                tablas, para memoria en lo futuro. ¡Oh tú, sabio encantador, quienquiera\n                que seas, a quien ha de tocar el ser coronista desta peregrina historia!\n                Ruégote que no te olvides de mi buen Rocinante, compañero eterno mío en\n                todos mis caminos y carreras.\n            </Text>\n            <Text style={styles.text}>\n                Luego volvía diciendo, como si verdaderamente fuera enamorado: —¡Oh\n                princesa Dulcinea, señora deste cautivo corazón! Mucho agravio me\n                habedes fecho en despedirme y reprocharme con el riguroso afincamiento\n                de mandarme no parecer ante la vuestra fermosura. Plégaos, señora, de\n                membraros deste vuestro sujeto corazón, que tantas cuitas por vuestro\n                amor padece. Con estos iba ensartando otros disparates, todos al modo de\n                los que sus libros le habían enseñado, imitando en cuanto podía su\n                lenguaje. Con esto caminaba tan despacio, y el sol entraba tan apriesa y\n                con tanto ardor, que fuera bastante a derretirle los sesos, si algunos\n                tuviera\n            </Text>\n            <Text style={styles.text}>\n                Casi todo aquel día caminó sin acontecerle cosa que de contar fuese, de\n                lo cual se desesperaba, porque quisiera topar luego luego con quien\n                hacer experiencia del valor de su fuerte brazo. Autores hay que dicen\n                que la primera aventura que le avino fue la del Puerto Lápice, otros\n                dicen que la de los molinos de viento; pero lo que yo he podido\n                averiguar en este caso, y lo que he hallado escrito en los anales de la\n                Mancha, es que él anduvo todo aquel día, y, al anochecer, su rocín y él\n                se hallaron cansados y muertos de hambre, y que, mirando a todas partes\n                por ver si descubriría algún castillo o alguna majada de pastores donde\n                recogerse y adonde pudiese remediar su mucha hambre y necesidad, vio, no\n                lejos del camino por donde iba, una venta,que fue como si viera una\n                estrella que, no a los portales, sino a los alcázares de su redención le\n                encaminaba. Diose priesa a caminar, y llegó a ella a tiempo que\n                anochecía.\n            </Text>\n            <Text style={styles.pageNumber} render={({ pageNumber, totalPages }) => (\n                `${pageNumber} / ${totalPages}`\n            )} fixed />\n        </Page>\n    </Document>\n);\n\n\nconst styles = StyleSheet.create({\n    body: {\n        paddingTop: 35,\n        paddingBottom: 65,\n        paddingHorizontal: 35,\n    },\n    title: {\n        fontSize: 24,\n        textAlign: 'center',\n    },\n    author: {\n        fontSize: 12,\n        textAlign: 'center',\n        marginBottom: 40,\n    },\n    subtitle: {\n        fontSize: 18,\n        margin: 12,\n    },\n    text: {\n        margin: 12,\n        fontSize: 14,\n        textAlign: 'justify',\n        fontFamily: 'Times-Roman'\n    },\n    image: {\n        marginVertical: 15,\n        marginHorizontal: 100,\n    },\n    header: {\n        fontSize: 12,\n        marginBottom: 20,\n        textAlign: 'center',\n        color: 'grey',\n    },\n    pageNumber: {\n        position: 'absolute',\n        fontSize: 12,\n        bottom: 30,\n        left: 0,\n        right: 0,\n        textAlign: 'center',\n        color: 'grey',\n    },\n});\nconst PDFView = () => {\n    return (\n        <PDFViewer>\n            <MyDocument />\n        </PDFViewer>\n    )\n}\nexport default PDFView;","/home/pc/Documents/Project/hesmis-front/src/containers/NewUser/UserList.jsx",["724","725","726","727","728","729","730"],"import React, { useEffect, useState, Fragment } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  AlertMessage,\n  DataNotFound,\n  DataSpinner,\n  ReloadButton,\n} from '../../components/common';\nimport { scholarshipActions, userActions } from '../../config/actions';\nimport usePrevious from '../Hooks/usePrevious';\nimport { isEmpty, orderBy, toArray } from 'lodash';\nimport PropTypes, { object } from 'prop-types';\nimport { Card, Col, Row, Table } from 'react-bootstrap';\n\nconst UserList = () => {\n  const dispatch = useDispatch();\n  const { users, loading, loadError } = useSelector((state) => state.user);\n  const { currentStudentProgramme } = useSelector((state) => state.auth);\n  const [scholarshipList, setScholarshipList] = useState({});\n  const [errorMessage, setErrorMessage] = useState(null);\n  const prevState = usePrevious({ loadError });\n  const [showModel, setShowModal] = useState(false);\n\n  const getUserList = () => {\n    setErrorMessage(null);\n    dispatch(scholarshipActions.getScholarships(currentStudentProgramme?.id));\n  };\n  useEffect(() => {\n    if (users) {\n      console.log(users)\n      const findResult = users.find(\n        (user) =>\n          user.data\n      );\n      if (findResult) setScholarshipList(findResult);\n      else getUserList();\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!isEmpty(users)) {\n      //console.log(users)\n      const findResult = users.find(\n        (scholarship) =>\n          scholarship?.data\n      );\n      if (findResult) setScholarshipList(findResult);\n      else {\n        setScholarshipList({});\n        setErrorMessage(null);\n      }\n    }\n  }, [users, loading]);\n\n  useEffect(() => {\n    if (\n      !isEmpty(prevState) &&\n      !isEmpty(loadError) &&\n      loadError !== prevState.loadError\n    ) {\n      setErrorMessage(loadError?.error?.message || loadError?.server?.message);\n    }\n  }, [loadError]);\n\n  return (\n    <div>\n      <Card>\n        <Card.Header className=\"py-2\">\n          <div className=\"font600 text-uppercase text-sm\">REGISTERED USERS</div>\n          <div className=\"card-options\">\n            <ReloadButton loading={loading} onClick={getUserList} />\n          </div>\n        </Card.Header>\n        <Card.Body>\n          {errorMessage && <AlertMessage message={errorMessage} />}\n          {loading && isEmpty(scholarshipList) ? (\n            <DataSpinner />\n          ) : (\n            <>\n              {isEmpty(scholarshipList) ? (\n                <DataNotFound message=\"No Registered Users yet. Check Later\" />\n              ) : (\n\n                <div>\n                  <Table\n                    size=\"sm\"\n                    cellPadding={5}\n                    bordered\n                    responsive\n                    striped\n                    className=\"text-sm font500 border table-sm\"\n                  >\n                    {scholarshipList.data?.map((semester) => (\n                      <Fragment\n                        key={`${semester.programme_study_year}-${semester.semester}-${semester.academic_year}`}\n                      >\n                        <thead>\n                          <tr className=\"bg-dark text-white font600 text-sm\">\n                            <td width={30}>User Id</td>\n                            <td>First Name</td>\n                            <td width=\"50px\">Last Name</td>\n                            <td width=\"50px\">Other Name</td>\n                            <td width=\"50px\">User Type</td>\n                            <td width=\"100px\">Email</td>\n                            <td width=\"50px\">Phone</td>\n                            <td width=\"50px\">Status</td>\n                          </tr>\n                        </thead>\n                        <tbody className=\"text-uppercase\">\n                          {orderBy(semester?.results, ['scholarshipCode'])?.map(\n                            (record) => (\n                              <tr\n                                key={record.scholarshipId}\n                                className={record.remark !== 'NP' ? 'font600' : ''}\n                              >\n                                <td>{record.scholarshipCode}</td>\n                                <td>{record.scholarshipName}</td>\n                                <td>{record.levelOfStudy}</td>\n                                <td>{record.institutionName}</td>\n                                <td>{record.applicationDeadline}</td>\n                                <td>{record.countryOfStudy}</td>\n                                <td>{record.status}</td>\n                                <td>Status</td>\n                              </tr>\n                            )\n                          )}\n                          <tr className=\"font600 text-uppercase text-sm\">\n                            <td colSpan={5} className=\"py-2\">\n                              {`Semester REMARK: ${semester.remark}`}\n                              {!isEmpty(semester?.retake_courses) && (\n                                <span className=\"text-danger ms-2\">\n                                  {toArray(semester?.retake_courses).join(', ')}\n                                </span>\n                              )}\n                            </td>\n                            <td colSpan={2} className=\"py-2\">\n                              GPA:\n                              <span className=\"mx-1\">{semester?.current_gpa}</span>\n                            </td>\n                            <td colSpan={2} className=\"py-2\">\n                              CGPA:\n                              <span className=\"mx-1\">{semester?.cgpa}</span>\n                            </td>\n                          </tr>\n                          <tr>\n                            <td colSpan={9} style={{ height: '24px' }}>\n                              <span />\n                            </td>\n                          </tr>\n                        </tbody>\n                      </Fragment>\n                    ))}\n                  </Table>\n                </div>\n              )}\n            </>\n          )}\n        </Card.Body>\n      </Card>\n    </div>\n  );\n};\n\n\nUserList.propTypes = {\n  scholarshipList: PropTypes.oneOfType([object]).isRequired,\n};\n\nexport default UserList;","/home/pc/Documents/Project/hesmis-front/src/config/initialState/user.js",[],"/home/pc/Documents/Project/hesmis-front/src/config/actions/user/index.js",[],"/home/pc/Documents/Project/hesmis-front/src/config/reducers/user/index.js",["731"],"import { uniqBy } from 'lodash';\nimport { userActions } from '../../actions';\nimport initialState from '../../initialState';\n\nfunction user(state = initialState.user, actions) {\n  switch (actions.type) {\n    case userActions.GET_USERS_REQUEST :\n      return {\n        ...state,\n        loadError: {},\n        loading: true,\n      };\n    case userActions.GET_USERS_SUCCESS:\n      return {\n        ...state,\n        users: [actions.data, ...state.users],//uniqBy([actions.data, ...state.users], 'student_number'),\n        loading: false,\n      };\n    case userActions.GET_USERS_ERROR:\n      return {\n        ...state,\n        loadError: actions.error,\n        loading: false,\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default user;\n","/home/pc/Documents/Project/hesmis-front/src/config/saga/user/index.js",[],"/home/pc/Documents/Project/hesmis-front/src/containers/Scholarships/AdvertForm.jsx",["732","733","734","735","736"],{"ruleId":"737","replacedBy":"738"},{"ruleId":"739","replacedBy":"740"},{"ruleId":"741","severity":1,"message":"742","line":25,"column":6,"nodeType":"743","endLine":25,"endColumn":8,"suggestions":"744"},{"ruleId":"741","severity":1,"message":"745","line":47,"column":6,"nodeType":"743","endLine":47,"endColumn":34,"suggestions":"746"},{"ruleId":"737","replacedBy":"747"},{"ruleId":"739","replacedBy":"748"},{"ruleId":"749","severity":1,"message":"750","line":3,"column":3,"nodeType":"751","messageId":"752","endLine":3,"endColumn":19},{"ruleId":"749","severity":1,"message":"753","line":4,"column":3,"nodeType":"751","messageId":"752","endLine":4,"endColumn":22},{"ruleId":"749","severity":1,"message":"754","line":5,"column":3,"nodeType":"751","messageId":"752","endLine":5,"endColumn":15},{"ruleId":"749","severity":1,"message":"755","line":6,"column":3,"nodeType":"751","messageId":"752","endLine":6,"endColumn":19},{"ruleId":"749","severity":1,"message":"756","line":8,"column":3,"nodeType":"751","messageId":"752","endLine":8,"endColumn":23},{"ruleId":"749","severity":1,"message":"757","line":10,"column":3,"nodeType":"751","messageId":"752","endLine":10,"endColumn":22},{"ruleId":"749","severity":1,"message":"758","line":13,"column":3,"nodeType":"751","messageId":"752","endLine":13,"endColumn":18},{"ruleId":"749","severity":1,"message":"759","line":14,"column":3,"nodeType":"751","messageId":"752","endLine":14,"endColumn":14},{"ruleId":"749","severity":1,"message":"760","line":15,"column":3,"nodeType":"751","messageId":"752","endLine":15,"endColumn":12},{"ruleId":"749","severity":1,"message":"761","line":17,"column":3,"nodeType":"751","messageId":"752","endLine":17,"endColumn":17},{"ruleId":"749","severity":1,"message":"762","line":18,"column":3,"nodeType":"751","messageId":"752","endLine":18,"endColumn":10},{"ruleId":"749","severity":1,"message":"763","line":19,"column":3,"nodeType":"751","messageId":"752","endLine":19,"endColumn":13},{"ruleId":"749","severity":1,"message":"764","line":20,"column":3,"nodeType":"751","messageId":"752","endLine":20,"endColumn":17},{"ruleId":"741","severity":1,"message":"765","line":20,"column":6,"nodeType":"743","endLine":20,"endColumn":33,"suggestions":"766"},{"ruleId":"749","severity":1,"message":"767","line":2,"column":10,"nodeType":"751","messageId":"752","endLine":2,"endColumn":17},{"ruleId":"749","severity":1,"message":"768","line":3,"column":17,"nodeType":"751","messageId":"752","endLine":3,"endColumn":26},{"ruleId":"749","severity":1,"message":"769","line":5,"column":10,"nodeType":"751","messageId":"752","endLine":5,"endColumn":21},{"ruleId":"749","severity":1,"message":"770","line":5,"column":23,"nodeType":"751","messageId":"752","endLine":5,"endColumn":34},{"ruleId":"749","severity":1,"message":"771","line":7,"column":10,"nodeType":"751","messageId":"752","endLine":7,"endColumn":20},{"ruleId":"749","severity":1,"message":"772","line":11,"column":8,"nodeType":"751","messageId":"752","endLine":11,"endColumn":19},{"ruleId":"749","severity":1,"message":"773","line":7,"column":11,"nodeType":"751","messageId":"752","endLine":7,"endColumn":31},{"ruleId":"749","severity":1,"message":"771","line":7,"column":10,"nodeType":"751","messageId":"752","endLine":7,"endColumn":20},{"ruleId":"749","severity":1,"message":"774","line":20,"column":21,"nodeType":"751","messageId":"752","endLine":20,"endColumn":44},{"ruleId":"741","severity":1,"message":"775","line":32,"column":6,"nodeType":"743","endLine":32,"endColumn":8,"suggestions":"776"},{"ruleId":"741","severity":1,"message":"765","line":38,"column":6,"nodeType":"743","endLine":38,"endColumn":20,"suggestions":"777"},{"ruleId":"749","severity":1,"message":"778","line":64,"column":11,"nodeType":"751","messageId":"752","endLine":64,"endColumn":25},{"ruleId":"749","severity":1,"message":"779","line":101,"column":11,"nodeType":"751","messageId":"752","endLine":101,"endColumn":36},{"ruleId":"749","severity":1,"message":"780","line":108,"column":11,"nodeType":"751","messageId":"752","endLine":108,"endColumn":38},{"ruleId":"749","severity":1,"message":"781","line":115,"column":11,"nodeType":"751","messageId":"752","endLine":115,"endColumn":31},{"ruleId":"737","replacedBy":"782"},{"ruleId":"739","replacedBy":"783"},{"ruleId":"749","severity":1,"message":"784","line":171,"column":11,"nodeType":"751","messageId":"752","endLine":171,"endColumn":36},{"ruleId":"749","severity":1,"message":"785","line":183,"column":11,"nodeType":"751","messageId":"752","endLine":183,"endColumn":28},{"ruleId":"749","severity":1,"message":"786","line":13,"column":9,"nodeType":"751","messageId":"752","endLine":13,"endColumn":29},{"ruleId":"749","severity":1,"message":"771","line":9,"column":10,"nodeType":"751","messageId":"752","endLine":9,"endColumn":20},{"ruleId":"741","severity":1,"message":"787","line":32,"column":6,"nodeType":"743","endLine":32,"endColumn":8,"suggestions":"788"},{"ruleId":"741","severity":1,"message":"789","line":52,"column":6,"nodeType":"743","endLine":52,"endColumn":34,"suggestions":"790"},{"ruleId":"749","severity":1,"message":"767","line":1,"column":10,"nodeType":"751","messageId":"752","endLine":1,"endColumn":17},{"ruleId":"749","severity":1,"message":"791","line":3,"column":10,"nodeType":"751","messageId":"752","endLine":3,"endColumn":21},{"ruleId":"749","severity":1,"message":"792","line":3,"column":29,"nodeType":"751","messageId":"752","endLine":3,"endColumn":35},{"ruleId":"749","severity":1,"message":"770","line":5,"column":23,"nodeType":"751","messageId":"752","endLine":5,"endColumn":34},{"ruleId":"749","severity":1,"message":"793","line":6,"column":10,"nodeType":"751","messageId":"752","endLine":6,"endColumn":22},{"ruleId":"749","severity":1,"message":"772","line":6,"column":24,"nodeType":"751","messageId":"752","endLine":6,"endColumn":35},{"ruleId":"749","severity":1,"message":"771","line":7,"column":10,"nodeType":"751","messageId":"752","endLine":7,"endColumn":20},{"ruleId":"749","severity":1,"message":"794","line":11,"column":9,"nodeType":"751","messageId":"752","endLine":11,"endColumn":17},{"ruleId":"749","severity":1,"message":"795","line":12,"column":24,"nodeType":"751","messageId":"752","endLine":12,"endColumn":39},{"ruleId":"749","severity":1,"message":"796","line":39,"column":9,"nodeType":"751","messageId":"752","endLine":39,"endColumn":22},{"ruleId":"741","severity":1,"message":"797","line":28,"column":6,"nodeType":"743","endLine":28,"endColumn":8,"suggestions":"798"},{"ruleId":"741","severity":1,"message":"799","line":44,"column":6,"nodeType":"743","endLine":44,"endColumn":17,"suggestions":"800"},{"ruleId":"741","severity":1,"message":"801","line":64,"column":6,"nodeType":"743","endLine":64,"endColumn":18,"suggestions":"802"},{"ruleId":"741","severity":1,"message":"803","line":40,"column":6,"nodeType":"743","endLine":40,"endColumn":41,"suggestions":"804"},{"ruleId":"741","severity":1,"message":"805","line":28,"column":6,"nodeType":"743","endLine":28,"endColumn":8,"suggestions":"806"},{"ruleId":"741","severity":1,"message":"807","line":25,"column":6,"nodeType":"743","endLine":25,"endColumn":8,"suggestions":"808"},{"ruleId":"741","severity":1,"message":"809","line":40,"column":6,"nodeType":"743","endLine":40,"endColumn":8,"suggestions":"810"},{"ruleId":"749","severity":1,"message":"811","line":5,"column":10,"nodeType":"751","messageId":"752","endLine":5,"endColumn":21},{"ruleId":"749","severity":1,"message":"812","line":14,"column":10,"nodeType":"751","messageId":"752","endLine":14,"endColumn":26},{"ruleId":"749","severity":1,"message":"813","line":15,"column":10,"nodeType":"751","messageId":"752","endLine":15,"endColumn":27},{"ruleId":"741","severity":1,"message":"765","line":21,"column":6,"nodeType":"743","endLine":21,"endColumn":8,"suggestions":"814"},{"ruleId":"741","severity":1,"message":"815","line":39,"column":6,"nodeType":"743","endLine":39,"endColumn":16,"suggestions":"816"},{"ruleId":"749","severity":1,"message":"817","line":41,"column":9,"nodeType":"751","messageId":"752","endLine":41,"endColumn":30},{"ruleId":"741","severity":1,"message":"818","line":54,"column":6,"nodeType":"743","endLine":54,"endColumn":46,"suggestions":"819"},{"ruleId":"741","severity":1,"message":"801","line":73,"column":6,"nodeType":"743","endLine":73,"endColumn":48,"suggestions":"820"},{"ruleId":"741","severity":1,"message":"821","line":40,"column":6,"nodeType":"743","endLine":40,"endColumn":8,"suggestions":"822"},{"ruleId":"741","severity":1,"message":"823","line":37,"column":6,"nodeType":"743","endLine":37,"endColumn":8,"suggestions":"824"},{"ruleId":"741","severity":1,"message":"825","line":51,"column":6,"nodeType":"743","endLine":51,"endColumn":24,"suggestions":"826"},{"ruleId":"741","severity":1,"message":"803","line":61,"column":6,"nodeType":"743","endLine":61,"endColumn":17,"suggestions":"827"},{"ruleId":"741","severity":1,"message":"828","line":27,"column":6,"nodeType":"743","endLine":27,"endColumn":8,"suggestions":"829"},{"ruleId":"741","severity":1,"message":"830","line":33,"column":6,"nodeType":"743","endLine":33,"endColumn":8,"suggestions":"831"},{"ruleId":"749","severity":1,"message":"832","line":5,"column":10,"nodeType":"751","messageId":"752","endLine":5,"endColumn":22},{"ruleId":"749","severity":1,"message":"833","line":10,"column":10,"nodeType":"751","messageId":"752","endLine":10,"endColumn":33},{"ruleId":"749","severity":1,"message":"768","line":11,"column":17,"nodeType":"751","messageId":"752","endLine":11,"endColumn":26},{"ruleId":"741","severity":1,"message":"834","line":28,"column":6,"nodeType":"743","endLine":28,"endColumn":8,"suggestions":"835"},{"ruleId":"741","severity":1,"message":"836","line":46,"column":6,"nodeType":"743","endLine":46,"endColumn":50,"suggestions":"837"},{"ruleId":"741","severity":1,"message":"838","line":40,"column":6,"nodeType":"743","endLine":40,"endColumn":38,"suggestions":"839"},{"ruleId":"741","severity":1,"message":"805","line":35,"column":6,"nodeType":"743","endLine":35,"endColumn":8,"suggestions":"840"},{"ruleId":"741","severity":1,"message":"841","line":59,"column":6,"nodeType":"743","endLine":59,"endColumn":19,"suggestions":"842"},{"ruleId":"741","severity":1,"message":"742","line":37,"column":6,"nodeType":"743","endLine":37,"endColumn":8,"suggestions":"843"},{"ruleId":"741","severity":1,"message":"803","line":47,"column":6,"nodeType":"743","endLine":47,"endColumn":19,"suggestions":"844"},{"ruleId":"741","severity":1,"message":"845","line":62,"column":6,"nodeType":"743","endLine":62,"endColumn":16,"suggestions":"846"},{"ruleId":"741","severity":1,"message":"847","line":54,"column":6,"nodeType":"743","endLine":54,"endColumn":8,"suggestions":"848"},{"ruleId":"741","severity":1,"message":"803","line":89,"column":6,"nodeType":"743","endLine":89,"endColumn":46,"suggestions":"849"},{"ruleId":"749","severity":1,"message":"850","line":3,"column":28,"nodeType":"751","messageId":"752","endLine":3,"endColumn":38},{"ruleId":"749","severity":1,"message":"851","line":3,"column":56,"nodeType":"751","messageId":"752","endLine":3,"endColumn":66},{"ruleId":"749","severity":1,"message":"852","line":5,"column":8,"nodeType":"751","messageId":"752","endLine":5,"endColumn":25},{"ruleId":"737","replacedBy":"853"},{"ruleId":"739","replacedBy":"854"},{"ruleId":"749","severity":1,"message":"855","line":12,"column":28,"nodeType":"751","messageId":"752","endLine":12,"endColumn":32},{"ruleId":"749","severity":1,"message":"856","line":14,"column":16,"nodeType":"751","messageId":"752","endLine":14,"endColumn":19},{"ruleId":"749","severity":1,"message":"857","line":14,"column":21,"nodeType":"751","messageId":"752","endLine":14,"endColumn":24},{"ruleId":"749","severity":1,"message":"858","line":17,"column":10,"nodeType":"751","messageId":"752","endLine":17,"endColumn":16},{"ruleId":"741","severity":1,"message":"859","line":45,"column":6,"nodeType":"743","endLine":45,"endColumn":8,"suggestions":"860"},{"ruleId":"741","severity":1,"message":"803","line":70,"column":6,"nodeType":"743","endLine":70,"endColumn":17,"suggestions":"861"},{"ruleId":"749","severity":1,"message":"862","line":4,"column":3,"nodeType":"751","messageId":"752","endLine":4,"endColumn":14},{"ruleId":"749","severity":1,"message":"863","line":6,"column":3,"nodeType":"751","messageId":"752","endLine":6,"endColumn":26},{"ruleId":"749","severity":1,"message":"864","line":1,"column":10,"nodeType":"751","messageId":"752","endLine":1,"endColumn":16},{"ruleId":"749","severity":1,"message":"865","line":2,"column":27,"nodeType":"751","messageId":"752","endLine":2,"endColumn":32},{"ruleId":"749","severity":1,"message":"866","line":2,"column":40,"nodeType":"751","messageId":"752","endLine":2,"endColumn":44},{"ruleId":"749","severity":1,"message":"867","line":9,"column":30,"nodeType":"751","messageId":"752","endLine":9,"endColumn":41},{"ruleId":"749","severity":1,"message":"856","line":13,"column":16,"nodeType":"751","messageId":"752","endLine":13,"endColumn":19},{"ruleId":"749","severity":1,"message":"857","line":13,"column":21,"nodeType":"751","messageId":"752","endLine":13,"endColumn":24},{"ruleId":"749","severity":1,"message":"868","line":22,"column":10,"nodeType":"751","messageId":"752","endLine":22,"endColumn":19},{"ruleId":"749","severity":1,"message":"869","line":22,"column":21,"nodeType":"751","messageId":"752","endLine":22,"endColumn":33},{"ruleId":"741","severity":1,"message":"870","line":38,"column":6,"nodeType":"743","endLine":38,"endColumn":8,"suggestions":"871"},{"ruleId":"741","severity":1,"message":"803","line":63,"column":6,"nodeType":"743","endLine":63,"endColumn":17,"suggestions":"872"},{"ruleId":"749","severity":1,"message":"864","line":1,"column":10,"nodeType":"751","messageId":"752","endLine":1,"endColumn":16},{"ruleId":"749","severity":1,"message":"873","line":2,"column":21,"nodeType":"751","messageId":"752","endLine":2,"endColumn":27},{"ruleId":"749","severity":1,"message":"832","line":5,"column":10,"nodeType":"751","messageId":"752","endLine":5,"endColumn":22},{"ruleId":"749","severity":1,"message":"811","line":5,"column":63,"nodeType":"751","messageId":"752","endLine":5,"endColumn":74},{"ruleId":"749","severity":1,"message":"833","line":10,"column":10,"nodeType":"751","messageId":"752","endLine":10,"endColumn":33},{"ruleId":"749","severity":1,"message":"768","line":11,"column":17,"nodeType":"751","messageId":"752","endLine":11,"endColumn":26},"no-native-reassign",["874"],"no-negated-in-lhs",["875"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'metadata'. Either include them or remove the dependency array.","ArrayExpression",["876"],"React Hook useEffect has missing dependencies: 'addToast', 'prevState', and 'removeAllToasts'. Either include them or remove the dependency array.",["877"],["874"],["875"],"no-unused-vars","'CalendarOutlined' is defined but never used.","Identifier","unusedVar","'FieldBinaryOutlined' is defined but never used.","'EditOutlined' is defined but never used.","'FileDoneOutlined' is defined but never used.","'DollarCircleOutlined' is defined but never used.","'FileProtectOutlined' is defined but never used.","'FaClipboardList' is defined but never used.","'FaPaperclip' is defined but never used.","'FaRegCopy' is defined but never used.","'FaSearchDollar' is defined but never used.","'FaTasks' is defined but never used.","'FaUserEdit' is defined but never used.","'FaUserGraduate' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["878"],"'isEmpty' is defined but never used.","'useEffect' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'appActions' is defined but never used.","'DataSpinner' is defined but never used.","'institutionStructure' is assigned a value but never used.","'currentStudentProgramme' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'authUser' and 'dispatch'. Either include them or remove the dependency array.",["879"],["880"],"'getCourseUnits' is defined but never used.","'watchGetRegistrationEvent' is defined but never used.","'watchGetRegistrationHistory' is defined but never used.","'watchRegisterStudent' is defined but never used.",["874"],["875"],"'watchGetStudentProgrammes' is defined but never used.","'watchRequestToken' is defined but never used.","'handleActiveKeyState' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'accessToken', 'authUser', 'dispatch', and 'isAuthenticated'. Either include them or remove the dependency array.",["881"],"React Hook useEffect has missing dependencies: 'logoutCurrentUser' and 'prevState'. Either include them or remove the dependency array.",["882"],"'ButtonGroup' is defined but never used.","'Button' is defined but never used.","'AlertMessage' is defined but never used.","'dispatch' is assigned a value but never used.","'setIsRegistered' is assigned a value but never used.","'buttonOptions' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'accessToken?.token', 'dispatch', and 'isAuthenticated'. Either include them or remove the dependency array.",["883"],"React Hook useEffect has missing dependencies: 'dispatch', 'previousState', and 'setCookie'. Either include them or remove the dependency array.",["884"],"React Hook useEffect has missing dependencies: 'previousState' and 'setCurrentPage'. Either include them or remove the dependency array. If 'setCurrentPage' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["885"],"React Hook useEffect has a missing dependency: 'prevState'. Either include it or remove the dependency array.",["886"],"React Hook useEffect has missing dependencies: 'getInvoices' and 'invoices'. Either include them or remove the dependency array.",["887"],"React Hook useEffect has missing dependencies: 'getTransactions' and 'transactions'. Either include them or remove the dependency array.",["888"],"React Hook useEffect has missing dependencies: 'reloadEnrollmentEvent' and 'semesterEvent'. Either include them or remove the dependency array.",["889"],"'SelectInput' is defined but never used.","'programmeOptions' is assigned a value but never used.","'selectedProgramme' is assigned a value but never used.",["890"],"React Hook useEffect has a missing dependency: 'setCurrentStudentProgramme'. Either include it or remove the dependency array.",["891"],"'handleChangeProgramme' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'previousState'. Either include it or remove the dependency array.",["892"],["893"],"React Hook useEffect has missing dependencies: 'authUser' and 'reloadAuthUser'. Either include them or remove the dependency array.",["894"],"React Hook useEffect has missing dependencies: 'currentStudentProgramme.programme_code', 'getMyResult', and 'results'. Either include them or remove the dependency array.",["895"],"React Hook useEffect has a missing dependency: 'currentStudentProgramme?.programme_code'. Either include it or remove the dependency array.",["896"],["897"],"React Hook useEffect has missing dependencies: 'registrationHistories' and 'reloadRegistrationHistory'. Either include them or remove the dependency array.",["898"],"React Hook useEffect has missing dependencies: 'paymentReferences' and 'reloadPaymentReferences'. Either include them or remove the dependency array.",["899"],"'DataNotFound' is defined but never used.","'removeEmptyOrNullObject' is defined but never used.","React Hook useEffect has missing dependencies: 'enrollmentHistories' and 'reloadEnrollmentHistory'. Either include them or remove the dependency array.",["900"],"React Hook useEffect has missing dependencies: 'previousState' and 'reset'. Either include them or remove the dependency array.",["901"],"React Hook useEffect has missing dependencies: 'dispatch', 'prevState', and 'switchTab'. Either include them or remove the dependency array. If 'switchTab' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["902"],["903"],"React Hook useEffect has a missing dependency: 'newTotalAmount'. Either include it or remove the dependency array.",["904"],["905"],["906"],"React Hook useEffect has a missing dependency: 'currentStudentProgramme'. Either include it or remove the dependency array.",["907"],"React Hook useEffect has missing dependencies: 'authUser', 'courseUnitsByStudyYear', 'currentStudentProgramme?.id', 'dispatch', and 'metadata'. Either include them or remove the dependency array.",["908"],["909"],"'FaReplyAll' is defined but never used.","'FaUserPlus' is defined but never used.","'ChangeOfProgramme' is defined but never used.",["874"],["875"],"'pick' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'render' is defined but never used.","React Hook useEffect has missing dependencies: 'getScholarshipList' and 'scholarships'. Either include them or remove the dependency array.",["910"],["911"],"'authActions' is defined but never used.","'paymentReferenceActions' is defined but never used.","'uniqBy' is defined but never used.","'Image' is defined but never used.","'View' is defined but never used.","'userActions' is defined but never used.","'showModel' is assigned a value but never used.","'setShowModal' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getUserList' and 'users'. Either include them or remove the dependency array.",["912"],["913"],"'object' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"914","fix":"915"},{"desc":"916","fix":"917"},{"desc":"918","fix":"919"},{"desc":"920","fix":"921"},{"desc":"922","fix":"923"},{"desc":"924","fix":"925"},{"desc":"926","fix":"927"},{"desc":"928","fix":"929"},{"desc":"930","fix":"931"},{"desc":"932","fix":"933"},{"desc":"934","fix":"935"},{"desc":"936","fix":"937"},{"desc":"938","fix":"939"},{"desc":"940","fix":"941"},{"desc":"942","fix":"943"},{"desc":"944","fix":"945"},{"desc":"946","fix":"947"},{"desc":"948","fix":"949"},{"desc":"950","fix":"951"},{"desc":"952","fix":"953"},{"desc":"954","fix":"955"},{"desc":"956","fix":"957"},{"desc":"958","fix":"959"},{"desc":"960","fix":"961"},{"desc":"962","fix":"963"},{"desc":"964","fix":"965"},{"desc":"966","fix":"967"},{"desc":"936","fix":"968"},{"desc":"969","fix":"970"},{"desc":"914","fix":"971"},{"desc":"972","fix":"973"},{"desc":"974","fix":"975"},{"desc":"976","fix":"977"},{"desc":"978","fix":"979"},{"desc":"980","fix":"981"},{"desc":"956","fix":"982"},{"desc":"983","fix":"984"},{"desc":"956","fix":"985"},"Update the dependencies array to be: [dispatch, metadata]",{"range":"986","text":"987"},"Update the dependencies array to be: [addToast, prevState, removeAllToasts, serverError, serverSuccess]",{"range":"988","text":"989"},"Update the dependencies array to be: [accessToken, dispatch, selectedMenu]",{"range":"990","text":"991"},"Update the dependencies array to be: [authUser, dispatch]",{"range":"992","text":"993"},"Update the dependencies array to be: [dispatch, selectedMenu]",{"range":"994","text":"995"},"Update the dependencies array to be: [accessToken, authUser, dispatch, isAuthenticated]",{"range":"996","text":"997"},"Update the dependencies array to be: [authUserError, accessToken, prevState, logoutCurrentUser]",{"range":"998","text":"999"},"Update the dependencies array to be: [accessToken?.token, dispatch, isAuthenticated]",{"range":"1000","text":"1001"},"Update the dependencies array to be: [dispatch, loginData, previousState, setCookie]",{"range":"1002","text":"1003"},"Update the dependencies array to be: [loginError, previousState, setCurrentPage]",{"range":"1004","text":"1005"},"Update the dependencies array to be: [prevState, searchPayment, searchPaymentError]",{"range":"1006","text":"1007"},"Update the dependencies array to be: [getInvoices, invoices]",{"range":"1008","text":"1009"},"Update the dependencies array to be: [getTransactions, transactions]",{"range":"1010","text":"1011"},"Update the dependencies array to be: [reloadEnrollmentEvent, semesterEvent]",{"range":"1012","text":"1013"},"Update the dependencies array to be: [dispatch]",{"range":"1014","text":"1015"},"Update the dependencies array to be: [authUser, setCurrentStudentProgramme]",{"range":"1016","text":"1017"},"Update the dependencies array to be: [previousState, requestTokenError, requestTokenSuccess]",{"range":"1018","text":"1019"},"Update the dependencies array to be: [previousState, resetPasswordError, resetPasswordSuccess, setCurrentPage]",{"range":"1020","text":"1021"},"Update the dependencies array to be: [authUser, reloadAuthUser]",{"range":"1022","text":"1023"},"Update the dependencies array to be: [currentStudentProgramme.programme_code, getMyResult, results]",{"range":"1024","text":"1025"},"Update the dependencies array to be: [results, loading, currentStudentProgramme?.programme_code]",{"range":"1026","text":"1027"},"Update the dependencies array to be: [loadError, prevState]",{"range":"1028","text":"1029"},"Update the dependencies array to be: [registrationHistories, reloadRegistrationHistory]",{"range":"1030","text":"1031"},"Update the dependencies array to be: [paymentReferences, reloadPaymentReferences]",{"range":"1032","text":"1033"},"Update the dependencies array to be: [enrollmentHistories, reloadEnrollmentHistory]",{"range":"1034","text":"1035"},"Update the dependencies array to be: [changePasswordError, changePasswordSuccess, previousState, reset]",{"range":"1036","text":"1037"},"Update the dependencies array to be: [generateSuccess, generateError, prevState, dispatch, switchTab]",{"range":"1038","text":"1039"},{"range":"1040","text":"1009"},"Update the dependencies array to be: [newTotalAmount, watchValues]",{"range":"1041","text":"1042"},{"range":"1043","text":"987"},"Update the dependencies array to be: [enrollError, prevState]",{"range":"1044","text":"1045"},"Update the dependencies array to be: [currentStudentProgramme, metadata]",{"range":"1046","text":"1047"},"Update the dependencies array to be: [authUser, courseUnitsByStudyYear, currentStudentProgramme?.id, dispatch, metadata]",{"range":"1048","text":"1049"},"Update the dependencies array to be: [prevState, registrationError, registrationSuccess]",{"range":"1050","text":"1051"},"Update the dependencies array to be: [getScholarshipList, scholarships]",{"range":"1052","text":"1053"},{"range":"1054","text":"1029"},"Update the dependencies array to be: [getUserList, users]",{"range":"1055","text":"1056"},{"range":"1057","text":"1029"},[1023,1025],"[dispatch, metadata]",[1599,1627],"[addToast, prevState, removeAllToasts, serverError, serverSuccess]",[819,846],"[accessToken, dispatch, selectedMenu]",[1230,1232],"[authUser, dispatch]",[1371,1385],"[dispatch, selectedMenu]",[1149,1151],"[accessToken, authUser, dispatch, isAuthenticated]",[1623,1651],"[authUserError, accessToken, prevState, logoutCurrentUser]",[1106,1108],"[accessToken?.token, dispatch, isAuthenticated]",[1495,1506],"[dispatch, loginData, previousState, setCookie]",[2005,2017],"[loginError, previousState, setCurrentPage]",[1421,1456],"[prevState, searchPayment, searchPaymentError]",[1005,1007],"[getInvoices, invoices]",[866,868],"[getTransactions, transactions]",[1431,1433],"[reloadEnrollmentEvent, semesterEvent]",[746,748],"[dispatch]",[1404,1414],"[authUser, setCurrentStudentProgramme]",[1801,1841],"[previousState, requestTokenError, requestTokenSuccess]",[2337,2379],"[previousState, resetPasswordError, resetPasswordSuccess, setCurrentPage]",[1353,1355],"[authUser, reloadAuthUser]",[1191,1193],"[currentStudentProgramme.programme_code, getMyResult, results]",[1526,1544],"[results, loading, currentStudentProgramme?.programme_code]",[1774,1785],"[loadError, prevState]",[1062,1064],"[registrationHistories, reloadRegistrationHistory]",[1222,1224],"[paymentReferences, reloadPaymentReferences]",[848,850],"[enrollmentHistories, reloadEnrollmentHistory]",[1619,1663],"[changePasswordError, changePasswordSuccess, previousState, reset]",[1441,1473],"[generateSuccess, generateError, prevState, dispatch, switchTab]",[1346,1348],[2138,2151],"[newTotalAmount, watchValues]",[1307,1309],[1508,1521],"[enrollError, prevState]",[1899,1909],"[currentStudentProgramme, metadata]",[1802,1804],"[authUser, courseUnitsByStudyYear, currentStudentProgramme?.id, dispatch, metadata]",[2777,2817],"[prevState, registrationError, registrationSuccess]",[1544,1546],"[getScholarshipList, scholarships]",[2146,2157],[1311,1313],"[getUserList, users]",[1885,1896]]