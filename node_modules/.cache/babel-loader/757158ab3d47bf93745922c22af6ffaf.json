{"ast":null,"code":"import _slicedToArray from\"/Users/admin/Documents/react-projects/hesmis/hesmis-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{isEmpty}from'lodash';import React,{useEffect,useState}from'react';import{Card}from'react-bootstrap';import{useDispatch,useSelector}from'react-redux';import{AlertMessage,DataNotFound,DataSpinner,ReloadButton}from'../../components/common';import{authActions,appActions,registrationActions}from'../../config/actions';import{formatMetadata}from'../../helpers/dataFormatter';import RegistrationForm from'./RegistrationForm';import usePrevious from'../Hooks/usePrevious';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var RegisterStudent=function RegisterStudent(_ref){var _enrollmentHistory$st;var registrationEvent=_ref.registrationEvent,enrollmentEvent=_ref.enrollmentEvent,enrollmentHistory=_ref.enrollmentHistory,reloadRegistrationEvent=_ref.reloadRegistrationEvent;var dispatch=useDispatch();var _useSelector=useSelector(function(state){return state.auth;}),authUser=_useSelector.authUser,currentStudentProgramme=_useSelector.currentStudentProgramme;var _useSelector2=useSelector(function(state){return state.app;}),metadata=_useSelector2.metadata;var _useSelector3=useSelector(function(state){return state.registration;}),courseUnitsByStudyYear=_useSelector3.courseUnitsByStudyYear,gettingCourseUnits=_useSelector3.gettingCourseUnits,registeringStudent=_useSelector3.registeringStudent,gettingCurrentEvents=_useSelector3.gettingCurrentEvents,registrationError=_useSelector3.registrationError,registrationSuccess=_useSelector3.registrationSuccess;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),registrationStatusOptions=_useState2[0],setRegistrationStatusOptions=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),errorMessage=_useState4[0],setErrorMessage=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),successMessage=_useState6[0],setSuccessMessage=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),registrationType=_useState8[0],setRegistrationType=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),selectedCourseUnits=_useState10[0],setSelectedCourseUnits=_useState10[1];var prevState=usePrevious({registrationError:registrationError,registrationSuccess:registrationSuccess});useEffect(function(){if(isEmpty(metadata))dispatch(appActions.getMetadata());if(isEmpty(authUser))dispatch(authActions.getAuthUser());if(isEmpty(courseUnitsByStudyYear))dispatch(registrationActions.getCourseUnits(currentStudentProgramme===null||currentStudentProgramme===void 0?void 0:currentStudentProgramme.id));},[]);useEffect(function(){if(!isEmpty(metadata)){setRegistrationStatusOptions(formatMetadata(metadata,'REGISTRATION STATUSES'));var registrationTypes=formatMetadata(metadata,'REGISTRATION TYPES');var findFullRegistration=registrationTypes.find(function(type){return type.label.includes('FULL');});setRegistrationType(findFullRegistration);}},[metadata]);useEffect(function(){setSuccessMessage(null);setErrorMessage(null);if(!isEmpty(prevState)){if(!isEmpty(registrationError)&&prevState.registrationError!==registrationError){setErrorMessage((registrationError===null||registrationError===void 0?void 0:registrationError.error)||registrationError.server.message);}if(!isEmpty(registrationSuccess)&&prevState.registrationSuccess!==registrationSuccess){var _registrationSuccess$;setSuccessMessage(registrationSuccess===null||registrationSuccess===void 0?void 0:(_registrationSuccess$=registrationSuccess.server)===null||_registrationSuccess$===void 0?void 0:_registrationSuccess$.message);}}},[registrationError,registrationSuccess]);var onClickRegisterButton=function onClickRegisterButton(){if(!isEmpty(registrationEvent)){var dataToSend={event_id:registrationEvent===null||registrationEvent===void 0?void 0:registrationEvent.id,enrollment_id:enrollmentHistory===null||enrollmentHistory===void 0?void 0:enrollmentHistory.id,registration_type_id:registrationType?registrationType.value:null,course_units:selectedCourseUnits.map(function(courseUnit){var _courseUnit$registrat;return{course_unit_id:courseUnit.course_unit_id,course_unit_status_id:(_courseUnit$registrat=courseUnit.registrationStatus)===null||_courseUnit$registrat===void 0?void 0:_courseUnit$registrat.value};})};dispatch(registrationActions.registerStudent(dataToSend));}};return/*#__PURE__*/_jsx(\"div\",{children:isEmpty(registrationEvent)?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(DataNotFound,{message:\"There is currently No open Registration Event.\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-center\",children:/*#__PURE__*/_jsx(ReloadButton,{loading:gettingCurrentEvents,onClick:reloadRegistrationEvent})})]}):/*#__PURE__*/_jsxs(Card,{body:true,className:\"border-0 p-0\",children:[errorMessage&&/*#__PURE__*/_jsx(AlertMessage,{message:errorMessage}),successMessage&&/*#__PURE__*/_jsx(AlertMessage,{type:\"success\",message:successMessage}),/*#__PURE__*/_jsxs(Card.Header,{className:\"rounded-0 font600 text-danger text-xs mb-3 border\",children:[\"REGISTER COURSES FOR\",/*#__PURE__*/_jsx(\"strong\",{className:\"mx-1 font600\",children:enrollmentHistory===null||enrollmentHistory===void 0?void 0:(_enrollmentHistory$st=enrollmentHistory.studyYear)===null||_enrollmentHistory$st===void 0?void 0:_enrollmentHistory$st.programme_study_years}),/*#__PURE__*/_jsx(\"strong\",{className:\"me-1 font600\",children:\"\".concat(enrollmentEvent===null||enrollmentEvent===void 0?void 0:enrollmentEvent.semester,\" -\")}),enrollmentEvent===null||enrollmentEvent===void 0?void 0:enrollmentEvent.academic_year,currentStudentProgramme&&/*#__PURE__*/_jsx(\"div\",{className:\"card-options\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-info\",children:[\"PROG:\",\" \".concat(currentStudentProgramme===null||currentStudentProgramme===void 0?void 0:currentStudentProgramme.programme_title)]})})]}),gettingCourseUnits&&isEmpty(courseUnitsByStudyYear)?/*#__PURE__*/_jsx(DataSpinner,{}):/*#__PURE__*/_jsx(RegistrationForm,{registrationStatusOptions:registrationStatusOptions,courseUnitsByStudyYear:courseUnitsByStudyYear,selectedCourseUnits:selectedCourseUnits,setSelectedCourseUnits:setSelectedCourseUnits,onClickRegisterButton:onClickRegisterButton,registeringStudent:registeringStudent})]})});};export default RegisterStudent;","map":{"version":3,"sources":["/Users/admin/Documents/react-projects/hesmis/hesmis-front/src/containers/RegistrationHistory/RegisterStudent.jsx"],"names":["isEmpty","React","useEffect","useState","Card","useDispatch","useSelector","AlertMessage","DataNotFound","DataSpinner","ReloadButton","authActions","appActions","registrationActions","formatMetadata","RegistrationForm","usePrevious","RegisterStudent","registrationEvent","enrollmentEvent","enrollmentHistory","reloadRegistrationEvent","dispatch","state","auth","authUser","currentStudentProgramme","app","metadata","registration","courseUnitsByStudyYear","gettingCourseUnits","registeringStudent","gettingCurrentEvents","registrationError","registrationSuccess","registrationStatusOptions","setRegistrationStatusOptions","errorMessage","setErrorMessage","successMessage","setSuccessMessage","registrationType","setRegistrationType","selectedCourseUnits","setSelectedCourseUnits","prevState","getMetadata","getAuthUser","getCourseUnits","id","registrationTypes","findFullRegistration","find","type","label","includes","error","server","message","onClickRegisterButton","dataToSend","event_id","enrollment_id","registration_type_id","value","course_units","map","courseUnit","course_unit_id","course_unit_status_id","registrationStatus","registerStudent","studyYear","programme_study_years","semester","academic_year","programme_title"],"mappings":"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","sourcesContent":["import { isEmpty } from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport { Card } from 'react-bootstrap';\nimport PropTypes, { any } from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  AlertMessage,\n  DataNotFound,\n  DataSpinner,\n  ReloadButton,\n} from '../../components/common';\nimport {\n  authActions,\n  appActions,\n  registrationActions,\n} from '../../config/actions';\nimport { formatMetadata } from '../../helpers/dataFormatter';\nimport RegistrationForm from './RegistrationForm';\nimport usePrevious from '../Hooks/usePrevious';\n\nconst RegisterStudent = ({\n  registrationEvent,\n  enrollmentEvent,\n  enrollmentHistory,\n  reloadRegistrationEvent,\n}) => {\n  const dispatch = useDispatch();\n  const { authUser, currentStudentProgramme } = useSelector(\n    (state) => state.auth\n  );\n  const { metadata } = useSelector((state) => state.app);\n  const {\n    courseUnitsByStudyYear,\n    gettingCourseUnits,\n    registeringStudent,\n    gettingCurrentEvents,\n    registrationError,\n    registrationSuccess,\n  } = useSelector((state) => state.registration);\n  const [registrationStatusOptions, setRegistrationStatusOptions] = useState(\n    []\n  );\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [registrationType, setRegistrationType] = useState(null);\n  const [selectedCourseUnits, setSelectedCourseUnits] = useState([]);\n  const prevState = usePrevious({ registrationError, registrationSuccess });\n\n  useEffect(() => {\n    if (isEmpty(metadata)) dispatch(appActions.getMetadata());\n    if (isEmpty(authUser)) dispatch(authActions.getAuthUser());\n    if (isEmpty(courseUnitsByStudyYear))\n      dispatch(registrationActions.getCourseUnits(currentStudentProgramme?.id));\n  }, []);\n\n  useEffect(() => {\n    if (!isEmpty(metadata)) {\n      setRegistrationStatusOptions(\n        formatMetadata(metadata, 'REGISTRATION STATUSES')\n      );\n      const registrationTypes = formatMetadata(metadata, 'REGISTRATION TYPES');\n      const findFullRegistration = registrationTypes.find((type) =>\n        type.label.includes('FULL')\n      );\n      setRegistrationType(findFullRegistration);\n    }\n  }, [metadata]);\n\n  useEffect(() => {\n    setSuccessMessage(null);\n    setErrorMessage(null);\n    if (!isEmpty(prevState)) {\n      if (\n        !isEmpty(registrationError) &&\n        prevState.registrationError !== registrationError\n      ) {\n        setErrorMessage(\n          registrationError?.error || registrationError.server.message\n        );\n      }\n\n      if (\n        !isEmpty(registrationSuccess) &&\n        prevState.registrationSuccess !== registrationSuccess\n      ) {\n        setSuccessMessage(registrationSuccess?.server?.message);\n      }\n    }\n  }, [registrationError, registrationSuccess]);\n\n  const onClickRegisterButton = () => {\n    if (!isEmpty(registrationEvent)) {\n      const dataToSend = {\n        event_id: registrationEvent?.id,\n        enrollment_id: enrollmentHistory?.id,\n        registration_type_id: registrationType ? registrationType.value : null,\n        course_units: selectedCourseUnits.map((courseUnit) => ({\n          course_unit_id: courseUnit.course_unit_id,\n          course_unit_status_id: courseUnit.registrationStatus?.value,\n        })),\n      };\n      dispatch(registrationActions.registerStudent(dataToSend));\n    }\n  };\n\n  return (\n    <div>\n      {isEmpty(registrationEvent) ? (\n        <>\n          <DataNotFound message=\"There is currently No open Registration Event.\" />\n          <div className=\"text-center\">\n            <ReloadButton\n              loading={gettingCurrentEvents}\n              onClick={reloadRegistrationEvent}\n            />\n          </div>\n        </>\n      ) : (\n        <Card body className=\"border-0 p-0\">\n          {errorMessage && <AlertMessage message={errorMessage} />}\n          {successMessage && (\n            <AlertMessage type=\"success\" message={successMessage} />\n          )}\n          <Card.Header className=\"rounded-0 font600 text-danger text-xs mb-3 border\">\n            REGISTER COURSES FOR\n            <strong className=\"mx-1 font600\">\n              {enrollmentHistory?.studyYear?.programme_study_years}\n            </strong>\n            <strong className=\"me-1 font600\">\n              {`${enrollmentEvent?.semester} -`}\n            </strong>\n            {enrollmentEvent?.academic_year}\n            {currentStudentProgramme && (\n              <div className=\"card-options\">\n                <div className=\"text-info\">\n                  PROG:\n                  {` ${currentStudentProgramme?.programme_title}`}\n                </div>\n              </div>\n            )}\n          </Card.Header>\n          {gettingCourseUnits && isEmpty(courseUnitsByStudyYear) ? (\n            <DataSpinner />\n          ) : (\n            <RegistrationForm\n              registrationStatusOptions={registrationStatusOptions}\n              courseUnitsByStudyYear={courseUnitsByStudyYear}\n              selectedCourseUnits={selectedCourseUnits}\n              setSelectedCourseUnits={setSelectedCourseUnits}\n              onClickRegisterButton={onClickRegisterButton}\n              registeringStudent={registeringStudent}\n            />\n          )}\n        </Card>\n      )}\n    </div>\n  );\n};\n\nRegisterStudent.propTypes = {\n  reloadRegistrationEvent: PropTypes.func.isRequired,\n  registrationEvent: PropTypes.oneOfType([any]).isRequired,\n  enrollmentHistory: PropTypes.oneOfType([any]).isRequired,\n  enrollmentEvent: PropTypes.oneOfType([any]).isRequired,\n};\n\nexport default RegisterStudent;\n"]},"metadata":{},"sourceType":"module"}