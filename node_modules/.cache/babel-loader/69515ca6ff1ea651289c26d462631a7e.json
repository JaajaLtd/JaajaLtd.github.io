{"ast":null,"code":"import _slicedToArray from\"/Users/admin/Documents/react-projects/hesmis/hesmis-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{isEmpty}from'lodash';import React,{useEffect,useState}from'react';import{ButtonGroup,Card,Button}from'react-bootstrap';import{FaUserCheck,FaUserTimes}from'react-icons/fa';import{useDispatch,useSelector}from'react-redux';import{AlertMessage,DataSpinner}from'../../components/common';import{appActions,enrollmentActions}from'../../config/actions';import ProgrammeTab from'./ProgrammeTab';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Header=function Header(){var _currentSemester$acad,_currentSemester$acad2,_currentSemester$seme;var dispatch=useDispatch();var _useSelector=useSelector(function(state){return state.enrollment;}),gettingCurrentSemester=_useSelector.gettingCurrentSemester,currentEvents=_useSelector.currentEvents;var _useSelector2=useSelector(function(state){return state.auth;}),currentStudentProgramme=_useSelector2.currentStudentProgramme,accountBalance=_useSelector2.accountBalance;var _useSelector3=useSelector(function(state){return state.app;}),currentSemester=_useSelector3.currentSemester;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isRegistered=_useState2[0],setIsRegistered=_useState2[1];var reloadCurrentSemester=function reloadCurrentSemester(){dispatch(appActions.getCurrentSemester());if(!isEmpty(currentStudentProgramme))dispatch(enrollmentActions.getCurrentEvents(currentStudentProgramme===null||currentStudentProgramme===void 0?void 0:currentStudentProgramme.id));};useEffect(function(){if(isEmpty(currentSemester)){reloadCurrentSemester();}},[]);useEffect(function(){if(!isEmpty(currentEvents)){setIsRegistered(!isEmpty(currentEvents.studentRegistration));}},[currentEvents]);var buttonOptions=[{id:1,title:'Current Yr',value:currentSemester===null||currentSemester===void 0?void 0:(_currentSemester$acad=currentSemester.academicYear)===null||_currentSemester$acad===void 0?void 0:(_currentSemester$acad2=_currentSemester$acad.academicYear)===null||_currentSemester$acad2===void 0?void 0:_currentSemester$acad2.metadata_value,color:'info'},{id:2,title:'Current Sem',value:currentSemester===null||currentSemester===void 0?void 0:(_currentSemester$seme=currentSemester.semester)===null||_currentSemester$seme===void 0?void 0:_currentSemester$seme.metadata_value,color:'info'},{id:3,title:'Reg. Status',value:isRegistered?'REGISTERED':'NOT REGISTERED',color:isRegistered?'success':'danger',icon:isRegistered?/*#__PURE__*/_jsx(FaUserCheck,{className:\"me-1\"}):/*#__PURE__*/_jsx(FaUserTimes,{className:\"me-1\"})}];return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(ProgrammeTab,{}),/*#__PURE__*/_jsx(Card,{className:\"border-top border-bottom border-start-0 border-end-0\",children:/*#__PURE__*/_jsx(Card.Header,{className:\"py-2 px-3 border-0 mb-0\"})})]});};export default Header;","map":{"version":3,"sources":["/Users/admin/Documents/react-projects/hesmis/hesmis-front/src/containers/Dashboard/Header.jsx"],"names":["isEmpty","React","useEffect","useState","ButtonGroup","Card","Button","FaUserCheck","FaUserTimes","useDispatch","useSelector","AlertMessage","DataSpinner","appActions","enrollmentActions","ProgrammeTab","Header","dispatch","state","enrollment","gettingCurrentSemester","currentEvents","auth","currentStudentProgramme","accountBalance","app","currentSemester","isRegistered","setIsRegistered","reloadCurrentSemester","getCurrentSemester","getCurrentEvents","id","studentRegistration","buttonOptions","title","value","academicYear","metadata_value","color","semester","icon"],"mappings":"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","sourcesContent":["import { isEmpty } from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport { ButtonGroup, Card, Button } from 'react-bootstrap';\nimport { FaUserCheck, FaUserTimes } from 'react-icons/fa';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AlertMessage, DataSpinner } from '../../components/common';\nimport { appActions, enrollmentActions } from '../../config/actions';\nimport ProgrammeTab from './ProgrammeTab';\n\nconst Header = () => {\n  const dispatch = useDispatch();\n  const { gettingCurrentSemester, currentEvents } = useSelector(\n    (state) => state.enrollment\n  );\n  const { currentStudentProgramme, accountBalance } = useSelector(\n    (state) => state.auth\n  );\n  const { currentSemester } = useSelector((state) => state.app);\n  const [isRegistered, setIsRegistered] = useState(false);\n\n  const reloadCurrentSemester = () => {\n    dispatch(appActions.getCurrentSemester());\n    if (!isEmpty(currentStudentProgramme))\n      dispatch(enrollmentActions.getCurrentEvents(currentStudentProgramme?.id));\n  };\n\n  useEffect(() => {\n    if (isEmpty(currentSemester)) {\n      reloadCurrentSemester();\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!isEmpty(currentEvents)) {\n      setIsRegistered(!isEmpty(currentEvents.studentRegistration));\n    }\n  }, [currentEvents]);\n\n  const buttonOptions = [\n    {\n      id: 1,\n      title: 'Current Yr',\n      value: currentSemester?.academicYear?.academicYear?.metadata_value,\n      color: 'info',\n    },\n    {\n      id: 2,\n      title: 'Current Sem',\n      value: currentSemester?.semester?.metadata_value,\n      color: 'info',\n    },\n    {\n      id: 3,\n      title: 'Reg. Status',\n      value: isRegistered ? 'REGISTERED' : 'NOT REGISTERED',\n      color: isRegistered ? 'success' : 'danger',\n      icon: isRegistered ? (\n        <FaUserCheck className=\"me-1\" />\n      ) : (\n        <FaUserTimes className=\"me-1\" />\n      ),\n    },\n  ];\n  return (\n    <>\n      <ProgrammeTab />\n      <Card className=\"border-top border-bottom border-start-0 border-end-0\">\n        <Card.Header className=\"py-2 px-3 border-0 mb-0\">\n        </Card.Header>\n      </Card>\n    </>\n  );\n};\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}