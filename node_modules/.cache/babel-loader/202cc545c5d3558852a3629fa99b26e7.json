{"ast":null,"code":"import _objectSpread from\"/Users/admin/Documents/react-projects/hesmis/hesmis-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React from'react';import{Form}from'react-bootstrap';import{FaCheckSquare}from'react-icons/fa';import CourseUnitsTable from'./CourseUnitsTable';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var StudyYearCourseUnits=function StudyYearCourseUnits(_ref){var selectedCourseUnits=_ref.selectedCourseUnits,studyYearCourse=_ref.studyYearCourse,setDataAndOpenPopUp=_ref.setDataAndOpenPopUp,setSelectedRowData=_ref.setSelectedRowData,findCourseUnit=_ref.findCourseUnit;var conditionalRowStyles=[{when:function when(row){return selectedCourseUnits.find(function(courseUnit){return courseUnit.course_unit_id===row.course_unit_id;});},style:{backgroundColor:'#b2bec3',fontWeight:'bold !important',color:'#2d3436','&:hover':{backgroundColor:'#636e72',cursor:'pointer'}}}];var onSelectCourse=function onSelectCourse(rowData){if(rowData){setSelectedRowData(_objectSpread(_objectSpread({},rowData),{},{study_year:studyYearCourse.study_year}));}};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(CourseUnitsTable,{courseUnits:studyYearCourse.course_units,onRowClicked:function onRowClicked(rowData){return setDataAndOpenPopUp(_objectSpread(_objectSpread({},rowData),{},{study_year:studyYearCourse.study_year}));},conditionalRowStyles:conditionalRowStyles,compact:true,columnsBefore:[{name:/*#__PURE__*/_jsx(FaCheckSquare,{}),width:'30px',cell:function cell(rowData){var id=rowData.id;return/*#__PURE__*/_jsx(Form.Check,{type:\"checkbox\",defaultChecked:findCourseUnit(rowData),id:\"custom-\".concat(id),onChange:function onChange(){return onSelectCourse(rowData);}});}}]})});};StudyYearCourseUnits.defaultProps={selectedCourseUnits:[],studyYearCourse:{}};export default StudyYearCourseUnits;","map":{"version":3,"sources":["/Users/admin/Documents/react-projects/hesmis/hesmis-front/src/containers/RegistrationHistory/StudyYearCourseUnits.jsx"],"names":["React","Form","FaCheckSquare","CourseUnitsTable","StudyYearCourseUnits","selectedCourseUnits","studyYearCourse","setDataAndOpenPopUp","setSelectedRowData","findCourseUnit","conditionalRowStyles","when","row","find","courseUnit","course_unit_id","style","backgroundColor","fontWeight","color","cursor","onSelectCourse","rowData","study_year","course_units","name","width","cell","id","defaultProps"],"mappings":"+KAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,IAAT,KAAqB,iBAArB,CACA,OAASC,aAAT,KAA8B,gBAA9B,CACA,MAAOC,CAAAA,gBAAP,KAA6B,oBAA7B,C,gGAEA,GAAMC,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,MAMvB,IALJC,CAAAA,mBAKI,MALJA,mBAKI,CAJJC,eAII,MAJJA,eAII,CAHJC,mBAGI,MAHJA,mBAGI,CAFJC,kBAEI,MAFJA,kBAEI,CADJC,cACI,MADJA,cACI,CACJ,GAAMC,CAAAA,oBAAoB,CAAG,CAC3B,CACEC,IAAI,CAAE,cAACC,GAAD,QACJP,CAAAA,mBAAmB,CAACQ,IAApB,CACE,SAACC,UAAD,QAAgBA,CAAAA,UAAU,CAACC,cAAX,GAA8BH,GAAG,CAACG,cAAlD,EADF,CADI,EADR,CAKEC,KAAK,CAAE,CACLC,eAAe,CAAE,SADZ,CAELC,UAAU,CAAE,iBAFP,CAGLC,KAAK,CAAE,SAHF,CAIL,UAAW,CACTF,eAAe,CAAE,SADR,CAETG,MAAM,CAAE,SAFC,CAJN,CALT,CAD2B,CAA7B,CAkBA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,OAAD,CAAa,CAClC,GAAIA,OAAJ,CAAa,CACXd,kBAAkB,gCACbc,OADa,MAEhBC,UAAU,CAAEjB,eAAe,CAACiB,UAFZ,GAAlB,CAID,CACF,CAPD,CASA,mBACE,sCACE,KAAC,gBAAD,EACE,WAAW,CAAEjB,eAAe,CAACkB,YAD/B,CAEE,YAAY,CAAE,sBAACF,OAAD,QACZf,CAAAA,mBAAmB,gCACde,OADc,MAEjBC,UAAU,CAAEjB,eAAe,CAACiB,UAFX,GADP,EAFhB,CAQE,oBAAoB,CAAEb,oBARxB,CASE,OAAO,KATT,CAUE,aAAa,CAAE,CACb,CACEe,IAAI,cAAE,KAAC,aAAD,IADR,CAEEC,KAAK,CAAE,MAFT,CAGEC,IAHF,eAGOL,OAHP,CAGgB,CACZ,GAAQM,CAAAA,EAAR,CAAeN,OAAf,CAAQM,EAAR,CACA,mBACE,KAAC,IAAD,CAAM,KAAN,EACE,IAAI,CAAC,UADP,CAEE,cAAc,CAAEnB,cAAc,CAACa,OAAD,CAFhC,CAGE,EAAE,kBAAYM,EAAZ,CAHJ,CAIE,QAAQ,CAAE,0BAAMP,CAAAA,cAAc,CAACC,OAAD,CAApB,EAJZ,EADF,CAQD,CAbH,CADa,CAVjB,EADF,EADF,CAgCD,CAlED,CAoEAlB,oBAAoB,CAACyB,YAArB,CAAoC,CAClCxB,mBAAmB,CAAE,EADa,CAElCC,eAAe,CAAE,EAFiB,CAApC,CAaA,cAAeF,CAAAA,oBAAf","sourcesContent":["import React from 'react';\nimport PropTypes, { object, any } from 'prop-types';\nimport { Form } from 'react-bootstrap';\nimport { FaCheckSquare } from 'react-icons/fa';\nimport CourseUnitsTable from './CourseUnitsTable';\n\nconst StudyYearCourseUnits = ({\n  selectedCourseUnits,\n  studyYearCourse,\n  setDataAndOpenPopUp,\n  setSelectedRowData,\n  findCourseUnit,\n}) => {\n  const conditionalRowStyles = [\n    {\n      when: (row) =>\n        selectedCourseUnits.find(\n          (courseUnit) => courseUnit.course_unit_id === row.course_unit_id\n        ),\n      style: {\n        backgroundColor: '#b2bec3',\n        fontWeight: 'bold !important',\n        color: '#2d3436',\n        '&:hover': {\n          backgroundColor: '#636e72',\n          cursor: 'pointer',\n        },\n      },\n    },\n  ];\n\n  const onSelectCourse = (rowData) => {\n    if (rowData) {\n      setSelectedRowData({\n        ...rowData,\n        study_year: studyYearCourse.study_year,\n      });\n    }\n  };\n\n  return (\n    <>\n      <CourseUnitsTable\n        courseUnits={studyYearCourse.course_units}\n        onRowClicked={(rowData) =>\n          setDataAndOpenPopUp({\n            ...rowData,\n            study_year: studyYearCourse.study_year,\n          })\n        }\n        conditionalRowStyles={conditionalRowStyles}\n        compact\n        columnsBefore={[\n          {\n            name: <FaCheckSquare />,\n            width: '30px',\n            cell(rowData) {\n              const { id } = rowData;\n              return (\n                <Form.Check\n                  type=\"checkbox\"\n                  defaultChecked={findCourseUnit(rowData)}\n                  id={`custom-${id}`}\n                  onChange={() => onSelectCourse(rowData)}\n                />\n              );\n            },\n          },\n        ]}\n      />\n    </>\n  );\n};\n\nStudyYearCourseUnits.defaultProps = {\n  selectedCourseUnits: [],\n  studyYearCourse: {},\n};\n\nStudyYearCourseUnits.propTypes = {\n  selectedCourseUnits: PropTypes.oneOfType([any]),\n  studyYearCourse: PropTypes.oneOfType([object]),\n  setDataAndOpenPopUp: PropTypes.func.isRequired,\n  setSelectedRowData: PropTypes.func.isRequired,\n  findCourseUnit: PropTypes.func.isRequired,\n};\n\nexport default StudyYearCourseUnits;\n"]},"metadata":{},"sourceType":"module"}