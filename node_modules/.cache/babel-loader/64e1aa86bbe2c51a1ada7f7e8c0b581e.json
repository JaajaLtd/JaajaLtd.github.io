{"ast":null,"code":"const auth = {\n  LOGIN_STUDENT_REQUEST: 'LOGIN_STUDENT_REQUEST',\n  LOGIN_STUDENT_SUCCESS: 'LOGIN_STUDENT_SUCCESS',\n  LOGIN_STUDENT_ERROR: 'LOGIN_STUDENT_ERROR',\n  LOGOUT_SUCCESS: 'LOGOUT_SUCCESS',\n  LOGOUT_REQUEST: 'LOGOUT_REQUEST',\n  LOGOUT_ERROR: 'LOGOUT_ERROR',\n  CHANGE_PASSWORD_SUCCESS: 'CHANGE_PASSWORD_SUCCESS',\n  CHANGE_PASSWORD_REQUEST: 'CHANGE_PASSWORD_REQUEST',\n  CHANGE_PASSWORD_ERROR: 'CHANGE_PASSWORD_ERROR',\n  REQUEST_TOKEN_SUCCESS: 'REQUEST_TOKEN_SUCCESS',\n  REQUEST_TOKEN_REQUEST: 'REQUEST_TOKEN_REQUEST',\n  REQUEST_TOKEN_ERROR: 'REQUEST_TOKEN_ERROR',\n  RESET_PASSWORD_SUCCESS: 'RESET_PASSWORD_SUCCESS',\n  RESET_PASSWORD_REQUEST: 'RESET_PASSWORD_REQUEST',\n  RESET_PASSWORD_ERROR: 'RESET_PASSWORD_ERROR',\n  GET_AUTH_USER_SUCCESS: 'GET_AUTH_USER_SUCCESS',\n  GET_AUTH_USER_REQUEST: 'GET_AUTH_USER_REQUEST',\n  GET_AUTH_USER_ERROR: 'GET_AUTH_USER_ERROR',\n  GET_AUTH_USER_ACCOUNT_BALANCE_SUCCESS: 'GET_AUTH_USER_ACCOUNT_BALANCE_SUCCESS',\n  GET_AUTH_USER_ACCOUNT_BALANCE_REQUEST: 'GET_AUTH_USER_ACCOUNT_BALANCE_REQUEST',\n  GET_AUTH_USER_ACCOUNT_BALANCE_ERROR: 'GET_AUTH_USER_ACCOUNT_BALANCE_ERROR',\n  GET_STUDENT_PROGRAMMES_SUCCESS: 'GET_STUDENT_PROGRAMMES_SUCCESS',\n  GET_STUDENT_PROGRAMMES_REQUEST: 'GET_STUDENT_PROGRAMMES_REQUEST',\n  GET_STUDENT_PROGRAMMES_ERROR: 'GET_STUDENT_PROGRAMMES_ERROR',\n  SET_CURRENT_STUDENT_PROGRAMME: 'SET_CURRENT_STUDENT_PROGRAMME',\n  SET_AUTH_USER: 'SET_AUTH_USER',\n  REMOVE_AUTH_USER: 'REMOVE_AUTH_USER',\n  SET_IS_AUTHENTICATED: 'SET_IS_AUTHENTICATED',\n  loginStudent: data => ({\n    type: auth.LOGIN_STUDENT_REQUEST,\n    data\n  }),\n  getAuthUser: () => ({\n    type: auth.GET_AUTH_USER_REQUEST\n  }),\n  logoutUser: () => ({\n    type: auth.LOGOUT_REQUEST\n  }),\n  changePassword: data => ({\n    type: auth.CHANGE_PASSWORD_REQUEST,\n    data\n  }),\n  requestToken: data => ({\n    type: auth.REQUEST_TOKEN_REQUEST,\n    data\n  }),\n  resetPassword: data => ({\n    type: auth.RESET_PASSWORD_REQUEST,\n    data\n  }),\n  setCurrentStudentProgramme: currentStudentProgramme => ({\n    type: auth.SET_CURRENT_STUDENT_PROGRAMME,\n    currentStudentProgramme\n  }),\n  getStudentProgrammes: () => ({\n    type: auth.GET_STUDENT_PROGRAMMES_REQUEST\n  }),\n  getStudentBalance: () => ({\n    type: auth.GET_AUTH_USER_ACCOUNT_BALANCE_REQUEST\n  }),\n  setAuthUser: user => ({\n    type: auth.SET_AUTH_USER,\n    user\n  }),\n  setIsAuthenticated: payload => ({\n    type: auth.SET_IS_AUTHENTICATED,\n    payload\n  }),\n  removeAuthUser: () => ({\n    type: auth.REMOVE_AUTH_USER\n  })\n};\nexport default auth;","map":{"version":3,"sources":["/Users/admin/Documents/react-projects/hesmis/hesmis-front/src/config/actions/auth/index.js"],"names":["auth","LOGIN_STUDENT_REQUEST","LOGIN_STUDENT_SUCCESS","LOGIN_STUDENT_ERROR","LOGOUT_SUCCESS","LOGOUT_REQUEST","LOGOUT_ERROR","CHANGE_PASSWORD_SUCCESS","CHANGE_PASSWORD_REQUEST","CHANGE_PASSWORD_ERROR","REQUEST_TOKEN_SUCCESS","REQUEST_TOKEN_REQUEST","REQUEST_TOKEN_ERROR","RESET_PASSWORD_SUCCESS","RESET_PASSWORD_REQUEST","RESET_PASSWORD_ERROR","GET_AUTH_USER_SUCCESS","GET_AUTH_USER_REQUEST","GET_AUTH_USER_ERROR","GET_AUTH_USER_ACCOUNT_BALANCE_SUCCESS","GET_AUTH_USER_ACCOUNT_BALANCE_REQUEST","GET_AUTH_USER_ACCOUNT_BALANCE_ERROR","GET_STUDENT_PROGRAMMES_SUCCESS","GET_STUDENT_PROGRAMMES_REQUEST","GET_STUDENT_PROGRAMMES_ERROR","SET_CURRENT_STUDENT_PROGRAMME","SET_AUTH_USER","REMOVE_AUTH_USER","SET_IS_AUTHENTICATED","loginStudent","data","type","getAuthUser","logoutUser","changePassword","requestToken","resetPassword","setCurrentStudentProgramme","currentStudentProgramme","getStudentProgrammes","getStudentBalance","setAuthUser","user","setIsAuthenticated","payload","removeAuthUser"],"mappings":"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","sourcesContent":["const auth = {\n  LOGIN_STUDENT_REQUEST: 'LOGIN_STUDENT_REQUEST',\n  LOGIN_STUDENT_SUCCESS: 'LOGIN_STUDENT_SUCCESS',\n  LOGIN_STUDENT_ERROR: 'LOGIN_STUDENT_ERROR',\n\n  LOGOUT_SUCCESS: 'LOGOUT_SUCCESS',\n  LOGOUT_REQUEST: 'LOGOUT_REQUEST',\n  LOGOUT_ERROR: 'LOGOUT_ERROR',\n\n  CHANGE_PASSWORD_SUCCESS: 'CHANGE_PASSWORD_SUCCESS',\n  CHANGE_PASSWORD_REQUEST: 'CHANGE_PASSWORD_REQUEST',\n  CHANGE_PASSWORD_ERROR: 'CHANGE_PASSWORD_ERROR',\n\n  REQUEST_TOKEN_SUCCESS: 'REQUEST_TOKEN_SUCCESS',\n  REQUEST_TOKEN_REQUEST: 'REQUEST_TOKEN_REQUEST',\n  REQUEST_TOKEN_ERROR: 'REQUEST_TOKEN_ERROR',\n\n  RESET_PASSWORD_SUCCESS: 'RESET_PASSWORD_SUCCESS',\n  RESET_PASSWORD_REQUEST: 'RESET_PASSWORD_REQUEST',\n  RESET_PASSWORD_ERROR: 'RESET_PASSWORD_ERROR',\n\n  GET_AUTH_USER_SUCCESS: 'GET_AUTH_USER_SUCCESS',\n  GET_AUTH_USER_REQUEST: 'GET_AUTH_USER_REQUEST',\n  GET_AUTH_USER_ERROR: 'GET_AUTH_USER_ERROR',\n\n  GET_AUTH_USER_ACCOUNT_BALANCE_SUCCESS:\n    'GET_AUTH_USER_ACCOUNT_BALANCE_SUCCESS',\n  GET_AUTH_USER_ACCOUNT_BALANCE_REQUEST:\n    'GET_AUTH_USER_ACCOUNT_BALANCE_REQUEST',\n  GET_AUTH_USER_ACCOUNT_BALANCE_ERROR: 'GET_AUTH_USER_ACCOUNT_BALANCE_ERROR',\n\n  GET_STUDENT_PROGRAMMES_SUCCESS: 'GET_STUDENT_PROGRAMMES_SUCCESS',\n  GET_STUDENT_PROGRAMMES_REQUEST: 'GET_STUDENT_PROGRAMMES_REQUEST',\n  GET_STUDENT_PROGRAMMES_ERROR: 'GET_STUDENT_PROGRAMMES_ERROR',\n\n  SET_CURRENT_STUDENT_PROGRAMME: 'SET_CURRENT_STUDENT_PROGRAMME',\n\n  SET_AUTH_USER: 'SET_AUTH_USER',\n  REMOVE_AUTH_USER: 'REMOVE_AUTH_USER',\n  SET_IS_AUTHENTICATED: 'SET_IS_AUTHENTICATED',\n\n  loginStudent: (data) => ({\n    type: auth.LOGIN_STUDENT_REQUEST,\n    data,\n  }),\n\n  getAuthUser: () => ({\n    type: auth.GET_AUTH_USER_REQUEST,\n  }),\n\n  logoutUser: () => ({\n    type: auth.LOGOUT_REQUEST,\n  }),\n\n  changePassword: (data) => ({\n    type: auth.CHANGE_PASSWORD_REQUEST,\n    data,\n  }),\n\n  requestToken: (data) => ({\n    type: auth.REQUEST_TOKEN_REQUEST,\n    data,\n  }),\n\n  resetPassword: (data) => ({\n    type: auth.RESET_PASSWORD_REQUEST,\n    data,\n  }),\n\n  setCurrentStudentProgramme: (currentStudentProgramme) => ({\n    type: auth.SET_CURRENT_STUDENT_PROGRAMME,\n    currentStudentProgramme,\n  }),\n\n  getStudentProgrammes: () => ({\n    type: auth.GET_STUDENT_PROGRAMMES_REQUEST,\n  }),\n\n  getStudentBalance: () => ({\n    type: auth.GET_AUTH_USER_ACCOUNT_BALANCE_REQUEST,\n  }),\n\n  setAuthUser: (user) => ({\n    type: auth.SET_AUTH_USER,\n    user,\n  }),\n\n  setIsAuthenticated: (payload) => ({\n    type: auth.SET_IS_AUTHENTICATED,\n    payload,\n  }),\n\n  removeAuthUser: () => ({\n    type: auth.REMOVE_AUTH_USER,\n  }),\n};\n\nexport default auth;\n"]},"metadata":{},"sourceType":"module"}