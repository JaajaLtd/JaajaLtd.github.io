{"ast":null,"code":"import{isEmpty}from'lodash';import React,{useEffect}from'react';import{Card}from'react-bootstrap';import{useDispatch,useSelector}from'react-redux';import{DataNotFound,DataSpinner,ReloadButton}from'../../components/common';import{enrollmentActions}from'../../config/actions';import Enrollments from'./Enrollments';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var EnrollmentHistory=function EnrollmentHistory(){var dispatch=useDispatch();var _useSelector=useSelector(function(state){return state.enrollment;}),enrollmentHistories=_useSelector.enrollmentHistories,gettingEnrollmentHistory=_useSelector.gettingEnrollmentHistory;var _useSelector2=useSelector(function(state){return state.auth;}),currentStudentProgramme=_useSelector2.currentStudentProgramme;var reloadEnrollmentHistory=function reloadEnrollmentHistory(){dispatch(enrollmentActions.getEnrollmentHistory(currentStudentProgramme===null||currentStudentProgramme===void 0?void 0:currentStudentProgramme.id));};useEffect(function(){if(isEmpty(enrollmentHistories))reloadEnrollmentHistory();},[]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Card.Header,{className:\"py-2  text-secondary text-sm mb-2 font600\",children:[\"MY ENROLLMENT HISTORY\",\" (\".concat(!isEmpty(enrollmentHistories)?enrollmentHistories.length:0,\")\"),/*#__PURE__*/_jsx(\"div\",{className:\"card-options\",children:/*#__PURE__*/_jsx(ReloadButton,{loading:gettingEnrollmentHistory,onClick:reloadEnrollmentHistory})})]}),gettingEnrollmentHistory&&isEmpty(enrollmentHistories)?/*#__PURE__*/_jsx(DataSpinner,{}):/*#__PURE__*/_jsx(_Fragment,{children:isEmpty(enrollmentHistories)?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(DataNotFound,{message:\"You have No Enrollment History.\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-center\",children:/*#__PURE__*/_jsx(ReloadButton,{loading:gettingEnrollmentHistory,onClick:reloadEnrollmentHistory})})]}):/*#__PURE__*/_jsx(Enrollments,{enrollmentHistories:enrollmentHistories})})]});};export default EnrollmentHistory;","map":{"version":3,"sources":["/Users/admin/Documents/react-projects/hesmis/hesmis-front/src/containers/EnrollmentHistory/index.jsx"],"names":["isEmpty","React","useEffect","Card","useDispatch","useSelector","DataNotFound","DataSpinner","ReloadButton","enrollmentActions","Enrollments","EnrollmentHistory","dispatch","state","enrollment","enrollmentHistories","gettingEnrollmentHistory","auth","currentStudentProgramme","reloadEnrollmentHistory","getEnrollmentHistory","id","length"],"mappings":"AAAA,OAASA,OAAT,KAAwB,QAAxB,CACA,MAAOC,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,IAAT,KAAqB,iBAArB,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OACEC,YADF,CAEEC,WAFF,CAGEC,YAHF,KAIO,yBAJP,CAKA,OAASC,iBAAT,KAAkC,sBAAlC,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,C,6IAEA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CAC9B,GAAMC,CAAAA,QAAQ,CAAGR,WAAW,EAA5B,CACA,iBAA0DC,WAAW,CACnE,SAACQ,KAAD,QAAWA,CAAAA,KAAK,CAACC,UAAjB,EADmE,CAArE,CAAQC,mBAAR,cAAQA,mBAAR,CAA6BC,wBAA7B,cAA6BA,wBAA7B,CAGA,kBAAoCX,WAAW,CAAC,SAACQ,KAAD,QAAWA,CAAAA,KAAK,CAACI,IAAjB,EAAD,CAA/C,CAAQC,uBAAR,eAAQA,uBAAR,CAEA,GAAMC,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,EAAM,CACpCP,QAAQ,CACNH,iBAAiB,CAACW,oBAAlB,CAAuCF,uBAAvC,SAAuCA,uBAAvC,iBAAuCA,uBAAuB,CAAEG,EAAhE,CADM,CAAR,CAGD,CAJD,CAMAnB,SAAS,CAAC,UAAM,CACd,GAAIF,OAAO,CAACe,mBAAD,CAAX,CAAkCI,uBAAuB,GAC1D,CAFQ,CAEN,EAFM,CAAT,CAIA,mBACE,wCACE,MAAC,IAAD,CAAM,MAAN,EAAa,SAAS,CAAC,2CAAvB,+CAEQ,CAACnB,OAAO,CAACe,mBAAD,CAAR,CAAgCA,mBAAmB,CAACO,MAApD,CAA6D,CAFrE,mBAGE,YAAK,SAAS,CAAC,cAAf,uBACE,KAAC,YAAD,EACE,OAAO,CAAEN,wBADX,CAEE,OAAO,CAAEG,uBAFX,EADF,EAHF,GADF,CAWGH,wBAAwB,EAAIhB,OAAO,CAACe,mBAAD,CAAnC,cACC,KAAC,WAAD,IADD,cAGC,yBACGf,OAAO,CAACe,mBAAD,CAAP,cACC,wCACE,KAAC,YAAD,EAAc,OAAO,CAAC,iCAAtB,EADF,cAEE,YAAK,SAAS,CAAC,aAAf,uBACE,KAAC,YAAD,EACE,OAAO,CAAEC,wBADX,CAEE,OAAO,CAAEG,uBAFX,EADF,EAFF,GADD,cAWC,KAAC,WAAD,EAAa,mBAAmB,CAAEJ,mBAAlC,EAZJ,EAdJ,GADF,CAiCD,CAlDD,CAoDA,cAAeJ,CAAAA,iBAAf","sourcesContent":["import { isEmpty } from 'lodash';\nimport React, { useEffect } from 'react';\nimport { Card } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  DataNotFound,\n  DataSpinner,\n  ReloadButton,\n} from '../../components/common';\nimport { enrollmentActions } from '../../config/actions';\nimport Enrollments from './Enrollments';\n\nconst EnrollmentHistory = () => {\n  const dispatch = useDispatch();\n  const { enrollmentHistories, gettingEnrollmentHistory } = useSelector(\n    (state) => state.enrollment\n  );\n  const { currentStudentProgramme } = useSelector((state) => state.auth);\n\n  const reloadEnrollmentHistory = () => {\n    dispatch(\n      enrollmentActions.getEnrollmentHistory(currentStudentProgramme?.id)\n    );\n  };\n\n  useEffect(() => {\n    if (isEmpty(enrollmentHistories)) reloadEnrollmentHistory();\n  }, []);\n\n  return (\n    <>\n      <Card.Header className=\"py-2  text-secondary text-sm mb-2 font600\">\n        MY ENROLLMENT HISTORY\n        {` (${!isEmpty(enrollmentHistories) ? enrollmentHistories.length : 0})`}\n        <div className=\"card-options\">\n          <ReloadButton\n            loading={gettingEnrollmentHistory}\n            onClick={reloadEnrollmentHistory}\n          />\n        </div>\n      </Card.Header>\n      {gettingEnrollmentHistory && isEmpty(enrollmentHistories) ? (\n        <DataSpinner />\n      ) : (\n        <>\n          {isEmpty(enrollmentHistories) ? (\n            <>\n              <DataNotFound message=\"You have No Enrollment History.\" />\n              <div className=\"text-center\">\n                <ReloadButton\n                  loading={gettingEnrollmentHistory}\n                  onClick={reloadEnrollmentHistory}\n                />\n              </div>\n            </>\n          ) : (\n            <Enrollments enrollmentHistories={enrollmentHistories} />\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default EnrollmentHistory;\n"]},"metadata":{},"sourceType":"module"}