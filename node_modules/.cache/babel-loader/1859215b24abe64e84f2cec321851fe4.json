{"ast":null,"code":"import { startsWith } from 'lodash';\nexport const paymentModes = [{\n  label: 'MasterCard, Visa',\n  value: 'ONLINE'\n}, {\n  label: 'Point of Sale',\n  value: 'POSPMT'\n}, {\n  label: 'Mobile Money & Airtel',\n  value: 'MOBPMT'\n}, {\n  label: 'Over-the-counter Bank payment',\n  value: 'CASH'\n}, {\n  label: 'Cheque payments',\n  value: 'CHQ'\n}, {\n  label: 'Electronic funds transfer',\n  value: 'EFT'\n}, {\n  label: 'Direct Debit',\n  value: 'DD'\n}, {\n  label: 'Real Time Gross Settlement',\n  value: 'RTGS'\n}, {\n  label: 'SWIFT',\n  value: 'SWIFT'\n}];\nexport const paymentBanks = [{\n  label: 'Bank of Africa',\n  value: 'BOA'\n}, {\n  label: 'Bank of Baroda',\n  value: 'BOB'\n}, {\n  label: 'Barclays Bank',\n  value: 'BRC'\n}, {\n  label: 'COMMERCIAL BANK OF AFRICA UGANDA LIMITED',\n  value: 'CBA'\n}, {\n  label: 'Cairo International Bank',\n  value: 'CIB'\n}, {\n  label: 'Centenary Bank',\n  value: 'CNB'\n}, {\n  label: 'Citi Bank',\n  value: 'CTB'\n}, {\n  label: 'Dfcu Bank',\n  value: 'DFC'\n}, {\n  label: 'Diamond Trust Bank',\n  value: 'DTB'\n}, {\n  label: 'Eco Bank',\n  value: 'ECO'\n}, {\n  label: 'Equity Bank Uganda Limited',\n  value: 'EQB'\n}, {\n  label: 'Exim Bank Uganda Limited',\n  value: 'IBL'\n}, {\n  label: 'Finance Trust Bank Limited',\n  value: 'FTB'\n}, {\n  label: 'Guarantee Trust Bank Uganda Limited',\n  value: 'GNB'\n}, {\n  label: 'Housing Finance Bank',\n  value: 'HFB'\n}, {\n  label: 'KCB Bank Uganda',\n  value: 'KCB'\n}, {\n  label: 'NC Bank Uganda Limited',\n  value: 'NCB'\n}, {\n  label: 'Orient Bank',\n  value: 'ORN'\n}, {\n  label: 'Post Bank Uganda Limited',\n  value: 'PBU'\n}, {\n  label: 'Stanbic Bank',\n  value: 'STN'\n}, {\n  label: 'Standard Chartered',\n  value: 'SCB'\n}, {\n  label: 'Tropical Bank Ltd',\n  value: 'TAB'\n}, {\n  label: 'United Bank for Africa',\n  value: 'UBA'\n}];\nexport const getInvoiceAmount = (invoices, findKey, keyName) => {\n  const filterInvoices = invoices.filter(invoice => startsWith(invoice.invoice_number, findKey));\n  return filterInvoices.map(invoice => {\n    return {\n      [keyName]: invoice.id,\n      amount: invoice.amount\n    };\n  });\n};","map":{"version":3,"sources":["/Users/admin/Documents/react-projects/hesmis/hesmis-front/src/containers/PaymentReferences/helper.js"],"names":["startsWith","paymentModes","label","value","paymentBanks","getInvoiceAmount","invoices","findKey","keyName","filterInvoices","filter","invoice","invoice_number","map","id","amount"],"mappings":"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","sourcesContent":["import { startsWith } from 'lodash';\n\nexport const paymentModes = [\n  {\n    label: 'MasterCard, Visa',\n    value: 'ONLINE',\n  },\n  {\n    label: 'Point of Sale',\n    value: 'POSPMT',\n  },\n  {\n    label: 'Mobile Money & Airtel',\n    value: 'MOBPMT',\n  },\n  {\n    label: 'Over-the-counter Bank payment',\n    value: 'CASH',\n  },\n  {\n    label: 'Cheque payments',\n    value: 'CHQ',\n  },\n  {\n    label: 'Electronic funds transfer',\n    value: 'EFT',\n  },\n  {\n    label: 'Direct Debit',\n    value: 'DD',\n  },\n  {\n    label: 'Real Time Gross Settlement',\n    value: 'RTGS',\n  },\n  {\n    label: 'SWIFT',\n    value: 'SWIFT',\n  },\n];\n\nexport const paymentBanks = [\n  {\n    label: 'Bank of Africa',\n    value: 'BOA',\n  },\n  {\n    label: 'Bank of Baroda',\n    value: 'BOB',\n  },\n  {\n    label: 'Barclays Bank',\n    value: 'BRC',\n  },\n  {\n    label: 'COMMERCIAL BANK OF AFRICA UGANDA LIMITED',\n    value: 'CBA',\n  },\n  {\n    label: 'Cairo International Bank',\n    value: 'CIB',\n  },\n  {\n    label: 'Centenary Bank',\n    value: 'CNB',\n  },\n  {\n    label: 'Citi Bank',\n    value: 'CTB',\n  },\n  {\n    label: 'Dfcu Bank',\n    value: 'DFC',\n  },\n  {\n    label: 'Diamond Trust Bank',\n    value: 'DTB',\n  },\n  {\n    label: 'Eco Bank',\n    value: 'ECO',\n  },\n  {\n    label: 'Equity Bank Uganda Limited',\n    value: 'EQB',\n  },\n  {\n    label: 'Exim Bank Uganda Limited',\n    value: 'IBL',\n  },\n  {\n    label: 'Finance Trust Bank Limited',\n    value: 'FTB',\n  },\n  {\n    label: 'Guarantee Trust Bank Uganda Limited',\n    value: 'GNB',\n  },\n  {\n    label: 'Housing Finance Bank',\n    value: 'HFB',\n  },\n  {\n    label: 'KCB Bank Uganda',\n    value: 'KCB',\n  },\n  {\n    label: 'NC Bank Uganda Limited',\n    value: 'NCB',\n  },\n  {\n    label: 'Orient Bank',\n    value: 'ORN',\n  },\n  {\n    label: 'Post Bank Uganda Limited',\n    value: 'PBU',\n  },\n  {\n    label: 'Stanbic Bank',\n    value: 'STN',\n  },\n  {\n    label: 'Standard Chartered',\n    value: 'SCB',\n  },\n  {\n    label: 'Tropical Bank Ltd',\n    value: 'TAB',\n  },\n  {\n    label: 'United Bank for Africa',\n    value: 'UBA',\n  },\n];\n\nexport const getInvoiceAmount = (invoices, findKey, keyName) => {\n  const filterInvoices = invoices.filter((invoice) =>\n    startsWith(invoice.invoice_number, findKey)\n  );\n  return filterInvoices.map((invoice) => {\n    return { [keyName]: invoice.id, amount: invoice.amount };\n  });\n};\n"]},"metadata":{},"sourceType":"module"}