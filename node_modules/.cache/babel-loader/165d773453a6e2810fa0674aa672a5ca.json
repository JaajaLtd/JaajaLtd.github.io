{"ast":null,"code":"import _toConsumableArray from\"/Users/admin/Documents/react-projects/hesmis/hesmis-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import React from'react';import{Table,InputNumber}from'antd';import{uniqBy}from'lodash';import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var UnPaidInvoices=function UnPaidInvoices(_ref){var invoices=_ref.invoices,setSelectedRows=_ref.setSelectedRows,selectedRows=_ref.selectedRows,editAmount=_ref.editAmount;var updateCellQuantity=function updateCellQuantity(amount,row){setSelectedRows(uniqBy([{id:row.id,invoice_number:row.invoice_number,amount:parseInt(amount,10)}].concat(_toConsumableArray(selectedRows)),'invoice_number'));};var columns=[{title:'Code',dataIndex:'invoice_number',key:'invoice_number'},{title:'Description',dataIndex:'description',key:'invoice_number'},{title:'Amount',dataIndex:'invoice_amount',key:'invoice_amount',ellipsis:true,render:function render(text,row){return/*#__PURE__*/_jsx(_Fragment,{children:\"\".concat(parseInt(text,10).toLocaleString(),\" \").concat(row.currency)});}},{title:'Paid',dataIndex:'amount_paid',key:'amount_paid',render:function render(text,row){return/*#__PURE__*/_jsx(_Fragment,{children:\"\".concat(parseInt(text,10).toLocaleString(),\" \").concat(row.currency)});}},{title:'Amount Due',dataIndex:'amount_due',key:'amount_due',width:'150px',render:function render(text,row){return/*#__PURE__*/_jsx(_Fragment,{children:\"\".concat(parseInt(text,10).toLocaleString(),\" \").concat(row.currency)});}}];if(editAmount)columns.push({title:'Amount To Pay',key:'amount_due',editable:true,width:'150px',render:function render(text,record){return/*#__PURE__*/_jsx(InputNumber,{min:1,max:record.amount_due,defaultValue:record.amount_due,onChange:function onChange(quantity){return updateCellQuantity(quantity,record);}},selectedRows.find(function(row){return row.invoice_number===record.invoice_number;}));}});return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Table,{dataSource:invoices,columns:columns,size:\"small\",pagination:false,bordered:true,rowKey:\"invoice_number\",tableLayout:\"auto\",className:\"border-0 text-sm\",scroll:{y:'65vh'}})});};UnPaidInvoices.defaultProps={invoices:[],selectedRows:[],editAmount:false};export default UnPaidInvoices;","map":{"version":3,"sources":["/Users/admin/Documents/react-projects/hesmis/hesmis-front/src/containers/PaymentReferences/UnPaidInvoices.jsx"],"names":["React","Table","InputNumber","uniqBy","UnPaidInvoices","invoices","setSelectedRows","selectedRows","editAmount","updateCellQuantity","amount","row","id","invoice_number","parseInt","columns","title","dataIndex","key","ellipsis","render","text","toLocaleString","currency","width","push","editable","record","amount_due","quantity","find","y","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes, { array } from 'prop-types';\nimport { Table, InputNumber } from 'antd';\nimport { uniqBy } from 'lodash';\n\nconst UnPaidInvoices = ({\n  invoices,\n  setSelectedRows,\n  selectedRows,\n  editAmount,\n}) => {\n  const updateCellQuantity = (amount, row) => {\n    setSelectedRows(\n      uniqBy(\n        [\n          {\n            id: row.id,\n            invoice_number: row.invoice_number,\n            amount: parseInt(amount, 10),\n          },\n          ...selectedRows,\n        ],\n        'invoice_number'\n      )\n    );\n  };\n  const columns = [\n    {\n      title: 'Code',\n      dataIndex: 'invoice_number',\n      key: 'invoice_number',\n    },\n    {\n      title: 'Description',\n      dataIndex: 'description',\n      key: 'invoice_number',\n    },\n    {\n      title: 'Amount',\n      dataIndex: 'invoice_amount',\n      key: 'invoice_amount',\n      ellipsis: true,\n      render(text, row) {\n        return <>{`${parseInt(text, 10).toLocaleString()} ${row.currency}`}</>;\n      },\n    },\n    {\n      title: 'Paid',\n      dataIndex: 'amount_paid',\n      key: 'amount_paid',\n      render(text, row) {\n        return <>{`${parseInt(text, 10).toLocaleString()} ${row.currency}`}</>;\n      },\n    },\n    {\n      title: 'Amount Due',\n      dataIndex: 'amount_due',\n      key: 'amount_due',\n      width: '150px',\n      render(text, row) {\n        return <>{`${parseInt(text, 10).toLocaleString()} ${row.currency}`}</>;\n      },\n    },\n  ];\n\n  if (editAmount)\n    columns.push({\n      title: 'Amount To Pay',\n      key: 'amount_due',\n      editable: true,\n      width: '150px',\n      render(text, record) {\n        return (\n          <InputNumber\n            min={1}\n            max={record.amount_due}\n            defaultValue={record.amount_due}\n            onChange={(quantity) => updateCellQuantity(quantity, record)}\n            key={selectedRows.find(\n              (row) => row.invoice_number === record.invoice_number\n            )}\n          />\n        );\n      },\n    });\n\n  return (\n    <div>\n      <Table\n        dataSource={invoices}\n        columns={columns}\n        size=\"small\"\n        pagination={false}\n        bordered\n        rowKey=\"invoice_number\"\n        tableLayout=\"auto\"\n        className=\"border-0 text-sm\"\n        scroll={{\n          y: '65vh',\n        }}\n      />\n    </div>\n  );\n};\n\nUnPaidInvoices.defaultProps = {\n  invoices: [],\n  selectedRows: [],\n  editAmount: false,\n};\n\nUnPaidInvoices.propTypes = {\n  invoices: PropTypes.oneOfType([array]),\n  selectedRows: PropTypes.oneOfType([array]),\n  setSelectedRows: PropTypes.func.isRequired,\n  editAmount: PropTypes.bool,\n};\n\nexport default UnPaidInvoices;\n"]},"metadata":{},"sourceType":"module"}