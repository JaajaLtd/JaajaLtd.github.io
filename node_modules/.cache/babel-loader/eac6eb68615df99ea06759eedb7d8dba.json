{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/react-projects/hesmis-front/src/components/shared/SideBar.jsx\",\n    _s = $RefreshSig$();\n\nimport { Menu } from 'antd';\nimport { isEmpty } from 'lodash';\nimport React, { Fragment } from 'react';\nimport { Spinner } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useMediaQuery } from 'react-responsive';\nimport { settingActions } from '../../config/actions';\nimport MenuList from '../../config/routes/MenuList';\nimport Avatar from '../../containers/MyProfile/Avatar';\nimport sideBarMenu from './SidebarMenu';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  SubMenu\n} = Menu;\n\nconst SideBar = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    authUser,\n    gettingAuthUser\n  } = useSelector(state => state.auth);\n  const isMobileDevice = useMediaQuery({\n    maxWidth: 767\n  });\n\n  const setSelectedMenu = content => {\n    dispatch(settingActions.setSelectedMenu(content));\n    if (isMobileDevice) dispatch(settingActions.setIsToggled(false));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `student-profile mx-auto text-sm text-center ${isMobileDevice ? 'py-2' : 'py-3'} border-bottom`,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        shape: \"square\",\n        size: 76,\n        draggable: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), gettingAuthUser && isEmpty(authUser) ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-block text-center\",\n        children: /*#__PURE__*/_jsxDEV(Spinner, {\n          variant: \"primary\",\n          size: \"sm\",\n          animation: \"border\",\n          className: \"d-block\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"font500 mt-2 text-uppercase text-light\",\n          children: `${authUser.firstname} ${authUser.lastname}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"font600 text-uppercase mt-1 text-light\",\n          children: `STUDENT NO.: ${authUser.student_number}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      mode: \"inline\",\n      defaultSelectedKeys: [MenuList.SelfEnrollment.action],\n      defaultOpenKeys: ['registration-and-enrollment'],\n      theme: \"light\",\n      children: sideBarMenu.map(menuItem => /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [isEmpty(menuItem.routes) ? /*#__PURE__*/_jsxDEV(Menu.Item, {\n          onClick: () => setSelectedMenu({ ...menuItem\n          }),\n          className: \"px-3 m-0 font500\",\n          icon: menuItem.icon,\n          children: menuItem.title\n        }, menuItem.action, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(SubMenu, {\n          title: menuItem.title,\n          icon: menuItem.icon,\n          className: \"p-0 font500\",\n          children: menuItem.routes.map(route => /*#__PURE__*/_jsxDEV(Menu.Item, {\n            onClick: () => setSelectedMenu({ ...route\n            }),\n            icon: route.icon,\n            children: route.title\n          }, route.action, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 19\n          }, this))\n        }, menuItem.key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Menu.Divider, {\n          className: \"m-0 p-0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)]\n      }, menuItem.key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SideBar, \"/vA0h0ooj0C8D3vhx1zBGNEie7g=\", false, function () {\n  return [useDispatch, useSelector, useMediaQuery];\n});\n\n_c = SideBar;\nexport default SideBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SideBar\");","map":{"version":3,"sources":["/Users/admin/Documents/react-projects/hesmis-front/src/components/shared/SideBar.jsx"],"names":["Menu","isEmpty","React","Fragment","Spinner","useDispatch","useSelector","useMediaQuery","settingActions","MenuList","Avatar","sideBarMenu","SubMenu","SideBar","dispatch","authUser","gettingAuthUser","state","auth","isMobileDevice","maxWidth","setSelectedMenu","content","setIsToggled","firstname","lastname","student_number","SelfEnrollment","action","map","menuItem","routes","icon","title","route","key"],"mappings":"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","sourcesContent":["import { Menu } from 'antd';\nimport { isEmpty } from 'lodash';\nimport React, { Fragment } from 'react';\nimport { Spinner } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useMediaQuery } from 'react-responsive';\nimport { settingActions } from '../../config/actions';\nimport MenuList from '../../config/routes/MenuList';\nimport Avatar from '../../containers/MyProfile/Avatar';\nimport sideBarMenu from './SidebarMenu';\n\nconst { SubMenu } = Menu;\n\nconst SideBar = () => {\n  const dispatch = useDispatch();\n  const { authUser, gettingAuthUser } = useSelector((state) => state.auth);\n  const isMobileDevice = useMediaQuery({ maxWidth: 767 });\n\n  const setSelectedMenu = (content) => {\n    dispatch(settingActions.setSelectedMenu(content));\n    if (isMobileDevice) dispatch(settingActions.setIsToggled(false));\n  };\n\n  return (\n    <>\n      <div\n        className={`student-profile mx-auto text-sm text-center ${\n          isMobileDevice ? 'py-2' : 'py-3'\n        } border-bottom`}\n      >\n        <Avatar shape=\"square\" size={76} draggable={false} />\n\n        {gettingAuthUser && isEmpty(authUser) ? (\n          <div className=\"d-block text-center\">\n            <Spinner\n              variant=\"primary\"\n              size=\"sm\"\n              animation=\"border\"\n              className=\"d-block\"\n            />\n          </div>\n        ) : (\n          <>\n            <div className=\"font500 mt-2 text-uppercase text-light\">\n              {`${authUser.firstname} ${authUser.lastname}`}\n            </div>\n            <div className=\"font600 text-uppercase mt-1 text-light\">\n              {`STUDENT NO.: ${authUser.student_number}`}\n            </div>\n          </>\n        )}\n      </div>\n      <Menu\n        mode=\"inline\"\n        defaultSelectedKeys={[MenuList.SelfEnrollment.action]}\n        defaultOpenKeys={['registration-and-enrollment']}\n        theme=\"light\"\n      >\n        {sideBarMenu.map((menuItem) => (\n          <Fragment key={menuItem.key}>\n            {isEmpty(menuItem.routes) ? (\n              <Menu.Item\n                key={menuItem.action}\n                onClick={() => setSelectedMenu({ ...menuItem })}\n                className=\"px-3 m-0 font500\"\n                icon={menuItem.icon}\n              >\n                {menuItem.title}\n              </Menu.Item>\n            ) : (\n              <SubMenu\n                key={menuItem.key}\n                title={menuItem.title}\n                icon={menuItem.icon}\n                className=\"p-0 font500\"\n              >\n                {menuItem.routes.map((route) => (\n                  <Menu.Item\n                    key={route.action}\n                    onClick={() => setSelectedMenu({ ...route })}\n                    icon={route.icon}\n                  >\n                    {route.title}\n                  </Menu.Item>\n                ))}\n              </SubMenu>\n            )}\n            <Menu.Divider className=\"m-0 p-0\" />\n          </Fragment>\n        ))}\n      </Menu>\n    </>\n  );\n};\n\nexport default SideBar;\n"]},"metadata":{},"sourceType":"module"}