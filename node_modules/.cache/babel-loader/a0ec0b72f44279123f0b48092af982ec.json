{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/react-projects/hesmis/hesmis-front/src/containers/MyProfile/index.jsx\",\n    _s = $RefreshSig$();\n\nimport { isEmpty } from 'lodash';\nimport moment from 'moment';\nimport React, { useEffect, useState } from 'react';\nimport { Button, Card, Col, ListGroup, Row } from 'react-bootstrap';\nimport { FaGraduationCap, FaUserCheck, FaUserFriends, FaUserGraduate, FaUsersCog, FaUserSecret, FaUserTimes } from 'react-icons/fa';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { authActions, enrollmentActions } from '../../config/actions';\nimport Avatar from './Avatar';\nimport ProfileData from './ProfileData';\nimport ChangePassword from './ChangePassword';\nimport AcademicDetail from './AcademicDetail';\nimport GuardianDetail from './GuardianDetail';\nimport NextOfKin from './NextOfKin';\nimport { DataSpinner } from '../../components/common';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MyProfile = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    gettingAuthUser,\n    authUser,\n    currentStudentProgramme\n  } = useSelector(state => state.auth);\n  const {\n    currentEvents\n  } = useSelector(state => state.enrollment);\n  const [isRegistered, setIsRegistered] = useState(false);\n  const [currentTab, setCurrentTab] = useState('bio-data');\n\n  const reloadAuthUser = () => {\n    dispatch(authActions.getAuthUser());\n    dispatch(enrollmentActions.getCurrentEvents(currentStudentProgramme === null || currentStudentProgramme === void 0 ? void 0 : currentStudentProgramme.id));\n  };\n\n  useEffect(() => {\n    if (isEmpty(authUser)) reloadAuthUser();\n  }, []);\n  useEffect(() => {\n    if (!isEmpty(currentEvents)) {\n      setIsRegistered(!isEmpty(currentEvents.studentRegistration));\n    }\n  }, [currentEvents]);\n  const tabList = [{\n    id: 1,\n    title: 'Personal Details',\n    key: 'bio-data',\n    icon: /*#__PURE__*/_jsxDEV(FaUserGraduate, {\n      className: \"me-2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  }, {\n    id: 2,\n    title: 'Academic Details',\n    key: 'academic-details',\n    icon: /*#__PURE__*/_jsxDEV(FaGraduationCap, {\n      className: \"me-2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)\n  }, {\n    id: 3,\n    title: 'Guardian Details',\n    key: 'guardian-details',\n    icon: /*#__PURE__*/_jsxDEV(FaUsersCog, {\n      className: \"me-2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)\n  }, {\n    id: 4,\n    title: 'Next of Kin',\n    key: 'next-of-kin',\n    icon: /*#__PURE__*/_jsxDEV(FaUserFriends, {\n      className: \"me-2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)\n  }, {\n    id: 5,\n    title: 'Change Password',\n    key: 'change-password',\n    icon: /*#__PURE__*/_jsxDEV(FaUserSecret, {\n      className: \"me-2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        className: \"py-3 text-primary font600 text-sm mb-0\",\n        children: \"MY ACADEMIC PROFILE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"row-deck gx-0 gy-2\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"text-sm text-muted border-0 p-0\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center p-3 border-bottom\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mx-auto text-center pb-2\",\n                children: /*#__PURE__*/_jsxDEV(Avatar, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 17\n              }, this), gettingAuthUser && isEmpty(authUser) ? /*#__PURE__*/_jsxDEV(DataSpinner, {\n                message: \"Loading Profile...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"font600 text-uppercase text-primary\",\n                  children: `${authUser.firstname} ${authUser.lastname}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"font600 text-uppercase text-xs mt-2\",\n                  children: `STUDENT NO.: ${authUser.student_number}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: isRegistered ? 'success' : 'danger',\n                  size: \"sm\",\n                  className: \"text-sm mt-2 font600\",\n                  children: [isRegistered ? /*#__PURE__*/_jsxDEV(FaUserCheck, {\n                    className: \"me-1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 25\n                  }, this) : /*#__PURE__*/_jsxDEV(FaUserTimes, {\n                    className: \"me-1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 25\n                  }, this), isRegistered ? 'REGISTERED' : 'NOT REGISTERED']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n              variant: \"flush\",\n              children: tabList.map(tab => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                onClick: () => setCurrentTab(tab.key),\n                active: currentTab === tab.key,\n                action: true,\n                className: \"font600 text-sm text-left\",\n                children: [tab.icon, tab.title]\n              }, tab.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 9,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"border-start border-top-0 border-bottom-0 border-end-0\",\n            children: [currentTab === 'bio-data' && /*#__PURE__*/_jsxDEV(ProfileData, {\n              authUser: authUser\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 45\n            }, this), currentTab === 'next-of-kin' && /*#__PURE__*/_jsxDEV(NextOfKin, {\n              authUser: authUser\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this), currentTab === 'guardian-details' && /*#__PURE__*/_jsxDEV(GuardianDetail, {\n              authUser: authUser\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this), currentTab === 'academic-details' && /*#__PURE__*/_jsxDEV(AcademicDetail, {\n              authUser: authUser\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this), currentTab === 'change-password' && /*#__PURE__*/_jsxDEV(ChangePassword, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 52\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"my-2 w-100 text-center text-muted text-xs\",\n      children: [\"Last Login\", ` ${moment(authUser.last_login).format('ddd, MMM Do YYYY, h:mm:ss a')}`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MyProfile, \"ykMvXFXX8sNYppc2zESsooiWIho=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = MyProfile;\nexport default MyProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyProfile\");","map":{"version":3,"sources":["/Users/admin/Documents/react-projects/hesmis/hesmis-front/src/containers/MyProfile/index.jsx"],"names":["isEmpty","moment","React","useEffect","useState","Button","Card","Col","ListGroup","Row","FaGraduationCap","FaUserCheck","FaUserFriends","FaUserGraduate","FaUsersCog","FaUserSecret","FaUserTimes","useDispatch","useSelector","authActions","enrollmentActions","Avatar","ProfileData","ChangePassword","AcademicDetail","GuardianDetail","NextOfKin","DataSpinner","MyProfile","dispatch","gettingAuthUser","authUser","currentStudentProgramme","state","auth","currentEvents","enrollment","isRegistered","setIsRegistered","currentTab","setCurrentTab","reloadAuthUser","getAuthUser","getCurrentEvents","id","studentRegistration","tabList","title","key","icon","firstname","lastname","student_number","map","tab","last_login","format"],"mappings":"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","sourcesContent":["import { isEmpty } from 'lodash';\nimport moment from 'moment';\nimport React, { useEffect, useState } from 'react';\nimport { Button, Card, Col, ListGroup, Row } from 'react-bootstrap';\nimport {\n  FaGraduationCap,\n  FaUserCheck,\n  FaUserFriends,\n  FaUserGraduate,\n  FaUsersCog,\n  FaUserSecret,\n  FaUserTimes,\n} from 'react-icons/fa';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { authActions, enrollmentActions } from '../../config/actions';\nimport Avatar from './Avatar';\nimport ProfileData from './ProfileData';\nimport ChangePassword from './ChangePassword';\nimport AcademicDetail from './AcademicDetail';\nimport GuardianDetail from './GuardianDetail';\nimport NextOfKin from './NextOfKin';\nimport { DataSpinner } from '../../components/common';\n\nconst MyProfile = () => {\n  const dispatch = useDispatch();\n  const { gettingAuthUser, authUser, currentStudentProgramme } = useSelector(\n    (state) => state.auth\n  );\n  const { currentEvents } = useSelector((state) => state.enrollment);\n  const [isRegistered, setIsRegistered] = useState(false);\n  const [currentTab, setCurrentTab] = useState('bio-data');\n\n  const reloadAuthUser = () => {\n    dispatch(authActions.getAuthUser());\n    dispatch(enrollmentActions.getCurrentEvents(currentStudentProgramme?.id));\n  };\n\n  useEffect(() => {\n    if (isEmpty(authUser)) reloadAuthUser();\n  }, []);\n\n  useEffect(() => {\n    if (!isEmpty(currentEvents)) {\n      setIsRegistered(!isEmpty(currentEvents.studentRegistration));\n    }\n  }, [currentEvents]);\n\n  const tabList = [\n    {\n      id: 1,\n      title: 'Personal Details',\n      key: 'bio-data',\n      icon: <FaUserGraduate className=\"me-2\" />,\n    },\n    {\n      id: 2,\n      title: 'Academic Details',\n      key: 'academic-details',\n      icon: <FaGraduationCap className=\"me-2\" />,\n    },\n    {\n      id: 3,\n      title: 'Guardian Details',\n      key: 'guardian-details',\n      icon: <FaUsersCog className=\"me-2\" />,\n    },\n    {\n      id: 4,\n      title: 'Next of Kin',\n      key: 'next-of-kin',\n      icon: <FaUserFriends className=\"me-2\" />,\n    },\n    {\n      id: 5,\n      title: 'Change Password',\n      key: 'change-password',\n      icon: <FaUserSecret className=\"me-2\" />,\n    },\n  ];\n\n  return (\n    <>\n      <Card>\n        <Card.Header className=\"py-3 text-primary font600 text-sm mb-0\">\n          MY ACADEMIC PROFILE\n        </Card.Header>\n        <Row className=\"row-deck gx-0 gy-2\">\n          <Col md={3}>\n            <Card className=\"text-sm text-muted border-0 p-0\">\n              <div className=\"text-center p-3 border-bottom\">\n                <div className=\"mx-auto text-center pb-2\">\n                  <Avatar />\n                </div>\n                {gettingAuthUser && isEmpty(authUser) ? (\n                  <DataSpinner message=\"Loading Profile...\" />\n                ) : (\n                  <>\n                    <div className=\"font600 text-uppercase text-primary\">{`${authUser.firstname} ${authUser.lastname}`}</div>\n                    <div className=\"font600 text-uppercase text-xs mt-2\">{`STUDENT NO.: ${authUser.student_number}`}</div>\n\n                    <Button\n                      variant={isRegistered ? 'success' : 'danger'}\n                      size=\"sm\"\n                      className=\"text-sm mt-2 font600\"\n                    >\n                      {isRegistered ? (\n                        <FaUserCheck className=\"me-1\" />\n                      ) : (\n                        <FaUserTimes className=\"me-1\" />\n                      )}\n                      {isRegistered ? 'REGISTERED' : 'NOT REGISTERED'}\n                    </Button>\n                  </>\n                )}\n              </div>\n              <ListGroup variant=\"flush\">\n                {tabList.map((tab) => (\n                  <ListGroup.Item\n                    key={tab.id}\n                    onClick={() => setCurrentTab(tab.key)}\n                    active={currentTab === tab.key}\n                    action\n                    className=\"font600 text-sm text-left\"\n                  >\n                    {tab.icon}\n                    {tab.title}\n                  </ListGroup.Item>\n                ))}\n              </ListGroup>\n            </Card>\n          </Col>\n          <Col md={9}>\n            <Card className=\"border-start border-top-0 border-bottom-0 border-end-0\">\n              {currentTab === 'bio-data' && <ProfileData authUser={authUser} />}\n              {currentTab === 'next-of-kin' && (\n                <NextOfKin authUser={authUser} />\n              )}\n              {currentTab === 'guardian-details' && (\n                <GuardianDetail authUser={authUser} />\n              )}\n              {currentTab === 'academic-details' && (\n                <AcademicDetail authUser={authUser} />\n              )}\n              {currentTab === 'change-password' && <ChangePassword />}\n            </Card>\n          </Col>\n        </Row>\n      </Card>\n\n      <div className=\"my-2 w-100 text-center text-muted text-xs\">\n        Last Login\n        {` ${moment(authUser.last_login).format(\n          'ddd, MMM Do YYYY, h:mm:ss a'\n        )}`}\n      </div>\n    </>\n  );\n};\n\nexport default MyProfile;\n"]},"metadata":{},"sourceType":"module"}