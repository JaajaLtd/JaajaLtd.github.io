{"ast":null,"code":"import{LoadingOutlined,LogoutOutlined,MenuFoldOutlined,MenuUnfoldOutlined,UserOutlined}from'@ant-design/icons';import{Layout,Menu}from'antd';import{isEmpty}from'lodash';import React from'react';import{Button,ButtonGroup}from'react-bootstrap';import{useDispatch,useSelector}from'react-redux';import{useMediaQuery}from'react-responsive';import{authActions,settingActions}from'../../config/actions';import MenuList from'../../config/routes/MenuList';import Avatar from'../../containers/MyProfile/Avatar';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Header=Layout.Header;var SubMenu=Menu.SubMenu;var MainHeader=function MainHeader(){var dispatch=useDispatch();var _useSelector=useSelector(function(state){return state.auth;}),authUser=_useSelector.authUser,loggingOut=_useSelector.loggingOut,gettingAuthUser=_useSelector.gettingAuthUser;var _useSelector2=useSelector(function(state){return state.setting;}),selectedMenu=_useSelector2.selectedMenu,isToggled=_useSelector2.isToggled;var isMobileDevice=useMediaQuery({maxWidth:767});var setSelectedMenu=function setSelectedMenu(menu){dispatch(settingActions.setSelectedMenu(menu));};var actionButtons=[{title:'ACADEMIC CALENDAR',action:MenuList.AcademicCalendar,id:1},{title:'GET PAYMENT REF',action:MenuList.PaymentReference,id:2}];return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Header,{theme:\"light\",className:\"bg-white border-bottom ps-0 pe-3\",children:[/*#__PURE__*/_jsx(Button,{className:\"d-inline button\",variant:\"link\",onClick:function onClick(){return dispatch(settingActions.setIsToggled(!isToggled));},children:isToggled?/*#__PURE__*/_jsx(MenuUnfoldOutlined,{}):/*#__PURE__*/_jsx(MenuFoldOutlined,{})}),!isMobileDevice&&/*#__PURE__*/_jsx(ButtonGroup,{children:actionButtons.map(function(button){return/*#__PURE__*/_jsx(Button,{size:\"sm\",variant:selectedMenu.action===button.action.action?'primary':'outline-primary',className:\"me-1 text-sm font500\",onClick:function onClick(){return setSelectedMenu(button.action);},children:button.title},button.id);})}),/*#__PURE__*/_jsx(\"div\",{className:\"rightContainer d-inline\",children:/*#__PURE__*/_jsxs(Menu,{mode:\"horizontal\",inlineCollapsed:false,children:[/*#__PURE__*/_jsxs(SubMenu,{title:/*#__PURE__*/_jsx(_Fragment,{children:loggingOut||gettingAuthUser&&isEmpty(authUser)?/*#__PURE__*/_jsx(LoadingOutlined,{}):/*#__PURE__*/_jsxs(\"span\",{className:\"my-auto\",children:[/*#__PURE__*/_jsx(\"span\",{style:{color:'#999',marginRight:4},children:\"Hi,\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-uppercase text-primary text-sm font600 me-2\",children:authUser.lastname}),/*#__PURE__*/_jsx(Avatar,{width:24,height:24,className:\"my-auto d-inline rounded-circle\",preview:false})]})}),className:\"px-0\",children:[/*#__PURE__*/_jsx(Menu.Item,{icon:/*#__PURE__*/_jsx(UserOutlined,{}),onClick:function onClick(){return setSelectedMenu(MenuList.ProfileData);},children:\"My Profile\"},\"my-profile\"),/*#__PURE__*/_jsx(Menu.Item,{icon:loggingOut?/*#__PURE__*/_jsx(LoadingOutlined,{}):/*#__PURE__*/_jsx(LogoutOutlined,{}),onClick:function onClick(){return dispatch(authActions.logoutUser());},className:\"font600\",danger:true,children:\"Log out\"},\"SignOut\")]},\"profile\"),/*#__PURE__*/_jsx(Menu.Item,{icon:loggingOut?/*#__PURE__*/_jsx(LoadingOutlined,{}):/*#__PURE__*/_jsx(LogoutOutlined,{}),onClick:function onClick(){return dispatch(authActions.logoutUser());},className:\"font600 px-2\",danger:true,children:\"Log out\"},\"SignOut\")]},MenuList.ProfileData.action)})]})});};export default MainHeader;","map":{"version":3,"sources":["/Users/admin/Documents/react-projects/hesmis/hesmis-front/src/components/shared/MainHeader.jsx"],"names":["LoadingOutlined","LogoutOutlined","MenuFoldOutlined","MenuUnfoldOutlined","UserOutlined","Layout","Menu","isEmpty","React","Button","ButtonGroup","useDispatch","useSelector","useMediaQuery","authActions","settingActions","MenuList","Avatar","Header","SubMenu","MainHeader","dispatch","state","auth","authUser","loggingOut","gettingAuthUser","setting","selectedMenu","isToggled","isMobileDevice","maxWidth","setSelectedMenu","menu","actionButtons","title","action","AcademicCalendar","id","PaymentReference","setIsToggled","map","button","color","marginRight","lastname","ProfileData","logoutUser"],"mappings":"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","sourcesContent":["import {\n  LoadingOutlined,\n  LogoutOutlined,\n  MenuFoldOutlined,\n  MenuUnfoldOutlined,\n  UserOutlined,\n} from '@ant-design/icons';\nimport { Layout, Menu } from 'antd';\nimport { isEmpty } from 'lodash';\nimport React from 'react';\nimport { Button, ButtonGroup } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useMediaQuery } from 'react-responsive';\nimport { authActions, settingActions } from '../../config/actions';\nimport MenuList from '../../config/routes/MenuList';\nimport Avatar from '../../containers/MyProfile/Avatar';\n\nconst { Header } = Layout;\nconst { SubMenu } = Menu;\n\nconst MainHeader = () => {\n  const dispatch = useDispatch();\n  const { authUser, loggingOut, gettingAuthUser } = useSelector(\n    (state) => state.auth\n  );\n  const { selectedMenu, isToggled } = useSelector((state) => state.setting);\n  const isMobileDevice = useMediaQuery({ maxWidth: 767 });\n\n  const setSelectedMenu = (menu) => {\n    dispatch(settingActions.setSelectedMenu(menu));\n  };\n\n  const actionButtons = [\n    {\n      title: 'ACADEMIC CALENDAR',\n      action: MenuList.AcademicCalendar,\n      id: 1,\n    },\n    {\n      title: 'GET PAYMENT REF',\n      action: MenuList.PaymentReference,\n      id: 2,\n    },\n  ];\n\n  return (\n    <>\n      <Header theme=\"light\" className=\"bg-white border-bottom ps-0 pe-3\">\n        <Button\n          className=\"d-inline button\"\n          variant=\"link\"\n          onClick={() => dispatch(settingActions.setIsToggled(!isToggled))}\n        >\n          {isToggled ? <MenuUnfoldOutlined /> : <MenuFoldOutlined />}\n        </Button>\n        {!isMobileDevice && (\n          <ButtonGroup>\n            {actionButtons.map((button) => (\n              <Button\n                size=\"sm\"\n                variant={\n                  selectedMenu.action === button.action.action\n                    ? 'primary'\n                    : 'outline-primary'\n                }\n                className=\"me-1 text-sm font500\"\n                onClick={() => setSelectedMenu(button.action)}\n                key={button.id}\n              >\n                {button.title}\n              </Button>\n            ))}\n          </ButtonGroup>\n        )}\n\n        <div className=\"rightContainer d-inline\">\n          <Menu\n            key={MenuList.ProfileData.action}\n            mode=\"horizontal\"\n            inlineCollapsed={false}\n          >\n            <SubMenu\n              title={\n                <>\n                  {loggingOut || (gettingAuthUser && isEmpty(authUser)) ? (\n                    <LoadingOutlined />\n                  ) : (\n                    <span className=\"my-auto\">\n                      <span style={{ color: '#999', marginRight: 4 }}>Hi,</span>\n                      <span className=\"text-uppercase text-primary text-sm font600 me-2\">\n                        {authUser.lastname}\n                      </span>\n                      <Avatar\n                        width={24}\n                        height={24}\n                        className=\"my-auto d-inline rounded-circle\"\n                        preview={false}\n                      />\n                    </span>\n                  )}\n                </>\n              }\n              key=\"profile\"\n              className=\"px-0\"\n            >\n              <Menu.Item\n                key=\"my-profile\"\n                icon={<UserOutlined />}\n                onClick={() => setSelectedMenu(MenuList.ProfileData)}\n              >\n                My Profile\n              </Menu.Item>\n              <Menu.Item\n                key=\"SignOut\"\n                icon={loggingOut ? <LoadingOutlined /> : <LogoutOutlined />}\n                onClick={() => dispatch(authActions.logoutUser())}\n                className=\"font600\"\n                danger\n              >\n                Log out\n              </Menu.Item>\n            </SubMenu>\n            <Menu.Item\n              key=\"SignOut\"\n              icon={loggingOut ? <LoadingOutlined /> : <LogoutOutlined />}\n              onClick={() => dispatch(authActions.logoutUser())}\n              className=\"font600 px-2\"\n              danger\n            >\n              Log out\n            </Menu.Item>\n          </Menu>\n        </div>\n      </Header>\n    </>\n  );\n};\n\nexport default MainHeader;\n"]},"metadata":{},"sourceType":"module"}