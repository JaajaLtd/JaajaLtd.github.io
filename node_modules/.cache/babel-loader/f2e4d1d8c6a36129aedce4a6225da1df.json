{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/react-projects/hesmis/hesmis-front/src/containers/Payments/MyTransactions.jsx\",\n    _s = $RefreshSig$();\n\nimport { isEmpty } from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport { Card } from 'react-bootstrap';\nimport DataTable from 'react-data-table-component';\nimport { FaMinus, FaPlus, FaPaperclip } from 'react-icons/fa';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { DataNotFound, DataSpinner, ReloadButton, TabMenu } from '../../components/common';\nimport { paymentActions } from '../../config/actions';\nimport TransactionTables from './TransactionTables';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyTransactions = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    transactions,\n    loading\n  } = useSelector(state => state.myTransaction);\n  const [currentMenu, setCurrentMenu] = useState('data');\n\n  const getTransactions = () => dispatch(paymentActions.getMyTransactions());\n\n  useEffect(() => {\n    if (isEmpty(transactions)) getTransactions();\n  }, []);\n  let columns = [{\n    name: 'ACADEMIC YEAR',\n\n    cell(transaction) {\n      const {\n        semester,\n        academic_year: academicYear,\n        programme_study_years: studyYear\n      } = transaction;\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"font600 text-info\",\n        children: [/*#__PURE__*/_jsxDEV(FaPaperclip, {\n          className: \"me-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), `${studyYear} - ${semester} - ${academicYear}`]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this);\n    }\n\n  }];\n\n  if (currentMenu === 'deposits') {\n    columns = [{\n      name: 'Invoice No',\n      sortable: true,\n\n      cell(row) {\n        const {\n          transaction_date: txnDate\n        } = row;\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font500 text-uppercase text-info\",\n          children: `${txnDate} Fees Deposits`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this);\n      }\n\n    }];\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(TabMenu, {\n      currentMenu: currentMenu,\n      setCurrentMenu: setCurrentMenu,\n      menus: [{\n        title: 'Invoice Payments',\n        action: 'data'\n      }, {\n        title: 'Fees Deposits',\n        action: 'deposits'\n      }],\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-options\",\n        children: /*#__PURE__*/_jsxDEV(ReloadButton, {\n          loading: loading,\n          onClick: () => getTransactions()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      className: \"p-0\",\n      children: /*#__PURE__*/_jsxDEV(DataTable, {\n        data: transactions[currentMenu],\n        noHeader: true,\n        noTableHead: true,\n        progressPending: loading && isEmpty(transactions[currentMenu]),\n        progressComponent: /*#__PURE__*/_jsxDEV(DataSpinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 30\n        }, this),\n        expandableRows: true,\n        columns: columns,\n        noDataComponent: /*#__PURE__*/_jsxDEV(DataNotFound, {\n          message: \"YOU HAVE NO TRANSACTION HISTORY\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this),\n        expandableRowsComponent: /*#__PURE__*/_jsxDEV(TransactionTables, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 36\n        }, this),\n        expandableRowExpanded: () => true,\n        expandOnRowClicked: true,\n        striped: true,\n        expandableIcon: {\n          expanded: /*#__PURE__*/_jsxDEV(FaMinus, {\n            className: \"text-info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 23\n          }, this),\n          collapsed: /*#__PURE__*/_jsxDEV(FaPlus, {\n            className: \"text-info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 24\n          }, this)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MyTransactions, \"AcLGMKWskz7yq/lC+lkYVwIc8hs=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = MyTransactions;\nexport default MyTransactions;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyTransactions\");","map":{"version":3,"sources":["/Users/admin/Documents/react-projects/hesmis/hesmis-front/src/containers/Payments/MyTransactions.jsx"],"names":["isEmpty","React","useEffect","useState","Card","DataTable","FaMinus","FaPlus","FaPaperclip","useDispatch","useSelector","DataNotFound","DataSpinner","ReloadButton","TabMenu","paymentActions","TransactionTables","MyTransactions","dispatch","transactions","loading","state","myTransaction","currentMenu","setCurrentMenu","getTransactions","getMyTransactions","columns","name","cell","transaction","semester","academic_year","academicYear","programme_study_years","studyYear","sortable","row","transaction_date","txnDate","title","action","expanded","collapsed"],"mappings":"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","sourcesContent":["import { isEmpty } from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport { Card } from 'react-bootstrap';\nimport DataTable from 'react-data-table-component';\nimport { FaMinus, FaPlus, FaPaperclip } from 'react-icons/fa';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  DataNotFound,\n  DataSpinner,\n  ReloadButton,\n  TabMenu,\n} from '../../components/common';\nimport { paymentActions } from '../../config/actions';\nimport TransactionTables from './TransactionTables';\n\nconst MyTransactions = () => {\n  const dispatch = useDispatch();\n  const { transactions, loading } = useSelector((state) => state.myTransaction);\n  const [currentMenu, setCurrentMenu] = useState('data');\n\n  const getTransactions = () => dispatch(paymentActions.getMyTransactions());\n\n  useEffect(() => {\n    if (isEmpty(transactions)) getTransactions();\n  }, []);\n\n  let columns = [\n    {\n      name: 'ACADEMIC YEAR',\n      cell(transaction) {\n        const {\n          semester,\n          academic_year: academicYear,\n          programme_study_years: studyYear,\n        } = transaction;\n        return (\n          <span className=\"font600 text-info\">\n            <FaPaperclip className=\"me-1\" />\n            {`${studyYear} - ${semester} - ${academicYear}`}\n          </span>\n        );\n      },\n    },\n  ];\n\n  if (currentMenu === 'deposits') {\n    columns = [\n      {\n        name: 'Invoice No',\n        sortable: true,\n        cell(row) {\n          const { transaction_date: txnDate } = row;\n          return (\n            <span className=\"font500 text-uppercase text-info\">\n              {`${txnDate} Fees Deposits`}\n            </span>\n          );\n        },\n      },\n    ];\n  }\n\n  return (\n    <Card>\n      <TabMenu\n        currentMenu={currentMenu}\n        setCurrentMenu={setCurrentMenu}\n        menus={[\n          {\n            title: 'Invoice Payments',\n            action: 'data',\n          },\n          {\n            title: 'Fees Deposits',\n            action: 'deposits',\n          },\n        ]}\n      >\n        <div className=\"card-options\">\n          <ReloadButton loading={loading} onClick={() => getTransactions()} />\n        </div>\n      </TabMenu>\n\n      <Card.Body className=\"p-0\">\n        <DataTable\n          data={transactions[currentMenu]}\n          noHeader\n          noTableHead\n          progressPending={loading && isEmpty(transactions[currentMenu])}\n          progressComponent={<DataSpinner />}\n          expandableRows\n          columns={columns}\n          noDataComponent={\n            <DataNotFound message=\"YOU HAVE NO TRANSACTION HISTORY\" />\n          }\n          expandableRowsComponent={<TransactionTables />}\n          expandableRowExpanded={() => true}\n          expandOnRowClicked\n          striped\n          expandableIcon={{\n            expanded: <FaMinus className=\"text-info\" />,\n            collapsed: <FaPlus className=\"text-info\" />,\n          }}\n        />\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default MyTransactions;\n"]},"metadata":{},"sourceType":"module"}