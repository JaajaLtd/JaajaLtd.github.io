{"ast":null,"code":"import{isEmpty}from'lodash';import React from'react';import{Button,Card}from'react-bootstrap';import{FaMinusCircle,FaTrash}from'react-icons/fa';import{DataNotFound}from'../../components/common';import CourseUnitsTable from'./CourseUnitsTable';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var SelectedCourseUnits=function SelectedCourseUnits(_ref){var selectedCourseUnits=_ref.selectedCourseUnits,setSelectedCourseUnits=_ref.setSelectedCourseUnits,setDataAndOpenPopUp=_ref.setDataAndOpenPopUp;var findCourseUnit=function findCourseUnit(rowData){return selectedCourseUnits.find(function(courseUnit){return courseUnit.course_unit_id===rowData.course_unit_id;});};var removeSelectedRowData=function removeSelectedRowData(data){var courseExists=findCourseUnit(data);if(courseExists){setSelectedCourseUnits(selectedCourseUnits.filter(function(courseUnit){return courseUnit.course_unit_id!==courseExists.course_unit_id;}));}};return/*#__PURE__*/_jsx(_Fragment,{children:isEmpty(selectedCourseUnits)?/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(DataNotFound,{message:\"SELECT COURSES/MODULES TO REGISTER\"})}):/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsxs(Card.Header,{className:\"py-2 text-xs font600 text-info\",children:[\"COURSES/MODULES TO BE REGISTERED\",/*#__PURE__*/_jsx(\"div\",{className:\"card-options\",children:/*#__PURE__*/_jsxs(Button,{size:\"sm\",variant:\"danger\",onClick:function onClick(){return setSelectedCourseUnits([]);},className:\"text-xs text-uppercase\",children:[/*#__PURE__*/_jsx(FaTrash,{className:\"me-1\"}),\"Clear\"]})})]}),/*#__PURE__*/_jsx(Card.Body,{className:\"p-0\",children:/*#__PURE__*/_jsx(CourseUnitsTable,{courseUnits:selectedCourseUnits,onRowClicked:setDataAndOpenPopUp,columnsBefore:[{name:'#',cell:function cell(rowData,index){return/*#__PURE__*/_jsx(_Fragment,{children:index+1});},width:'30px'},{name:'ACTION',width:'100px',cell:function cell(rowData){return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Button,{size:\"sm\",variant:\"danger\",onClick:function onClick(){return removeSelectedRowData(rowData);},className:\"text-xs p-1\",children:[/*#__PURE__*/_jsx(FaMinusCircle,{className:\"me-1\"}),\"Remove\"]})});}},{name:'STATUS',selector:'registrationStatus.label',width:'100px',wrap:true}],columnsAfter:[{name:'STUDY YR',selector:'study_year',width:'100px'}]})})]})});};SelectedCourseUnits.defaultProps={selectedCourseUnits:[]};export default SelectedCourseUnits;","map":{"version":3,"sources":["/Users/admin/Documents/react-projects/hesmis/hesmis-front/src/containers/RegistrationHistory/SelectedCourseUnits.jsx"],"names":["isEmpty","React","Button","Card","FaMinusCircle","FaTrash","DataNotFound","CourseUnitsTable","SelectedCourseUnits","selectedCourseUnits","setSelectedCourseUnits","setDataAndOpenPopUp","findCourseUnit","rowData","find","courseUnit","course_unit_id","removeSelectedRowData","data","courseExists","filter","name","cell","index","width","selector","wrap","defaultProps"],"mappings":"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","sourcesContent":["import { isEmpty } from 'lodash';\nimport PropTypes, { array } from 'prop-types';\nimport React from 'react';\nimport { Button, Card } from 'react-bootstrap';\nimport { FaMinusCircle, FaTrash } from 'react-icons/fa';\nimport { DataNotFound } from '../../components/common';\nimport CourseUnitsTable from './CourseUnitsTable';\n\nconst SelectedCourseUnits = ({\n  selectedCourseUnits,\n  setSelectedCourseUnits,\n  setDataAndOpenPopUp,\n}) => {\n  const findCourseUnit = (rowData) =>\n    selectedCourseUnits.find(\n      (courseUnit) => courseUnit.course_unit_id === rowData.course_unit_id\n    );\n\n  const removeSelectedRowData = (data) => {\n    const courseExists = findCourseUnit(data);\n    if (courseExists) {\n      setSelectedCourseUnits(\n        selectedCourseUnits.filter(\n          (courseUnit) =>\n            courseUnit.course_unit_id !== courseExists.course_unit_id\n        )\n      );\n    }\n  };\n\n  return (\n    <>\n      {isEmpty(selectedCourseUnits) ? (\n        <Card>\n          <DataNotFound message=\"SELECT COURSES/MODULES TO REGISTER\" />\n        </Card>\n      ) : (\n        <Card>\n          <Card.Header className=\"py-2 text-xs font600 text-info\">\n            COURSES/MODULES TO BE REGISTERED\n            <div className=\"card-options\">\n              <Button\n                size=\"sm\"\n                variant=\"danger\"\n                onClick={() => setSelectedCourseUnits([])}\n                className=\"text-xs text-uppercase\"\n              >\n                <FaTrash className=\"me-1\" />\n                Clear\n              </Button>\n            </div>\n          </Card.Header>\n          <Card.Body className=\"p-0\">\n            <CourseUnitsTable\n              courseUnits={selectedCourseUnits}\n              onRowClicked={setDataAndOpenPopUp}\n              columnsBefore={[\n                {\n                  name: '#',\n                  cell(rowData, index) {\n                    return <>{index + 1}</>;\n                  },\n                  width: '30px',\n                },\n                {\n                  name: 'ACTION',\n                  width: '100px',\n                  cell(rowData) {\n                    return (\n                      <>\n                        <Button\n                          size=\"sm\"\n                          variant=\"danger\"\n                          onClick={() => removeSelectedRowData(rowData)}\n                          className=\"text-xs p-1\"\n                        >\n                          <FaMinusCircle className=\"me-1\" />\n                          Remove\n                        </Button>\n                      </>\n                    );\n                  },\n                },\n                {\n                  name: 'STATUS',\n                  selector: 'registrationStatus.label',\n                  width: '100px',\n                  wrap: true,\n                },\n              ]}\n              columnsAfter={[\n                {\n                  name: 'STUDY YR',\n                  selector: 'study_year',\n                  width: '100px',\n                },\n              ]}\n            />\n          </Card.Body>\n        </Card>\n      )}\n    </>\n  );\n};\n\nSelectedCourseUnits.defaultProps = {\n  selectedCourseUnits: [],\n};\n\nSelectedCourseUnits.propTypes = {\n  selectedCourseUnits: PropTypes.oneOfType([array]),\n  setSelectedCourseUnits: PropTypes.func.isRequired,\n  setDataAndOpenPopUp: PropTypes.func.isRequired,\n};\n\nexport default SelectedCourseUnits;\n"]},"metadata":{},"sourceType":"module"}