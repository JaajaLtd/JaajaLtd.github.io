{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/react-projects/hesmis-front/src/containers/RegistrationHistory/StudyYearCourseUnits.jsx\";\nimport React from 'react';\nimport PropTypes, { object, any } from 'prop-types';\nimport { Form } from 'react-bootstrap';\nimport { FaCheckSquare } from 'react-icons/fa';\nimport CourseUnitsTable from './CourseUnitsTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst StudyYearCourseUnits = ({\n  selectedCourseUnits,\n  studyYearCourse,\n  setDataAndOpenPopUp,\n  setSelectedRowData,\n  findCourseUnit\n}) => {\n  const conditionalRowStyles = [{\n    when: row => selectedCourseUnits.find(courseUnit => courseUnit.course_unit_id === row.course_unit_id),\n    style: {\n      backgroundColor: '#b2bec3',\n      fontWeight: 'bold !important',\n      color: '#2d3436',\n      '&:hover': {\n        backgroundColor: '#636e72',\n        cursor: 'pointer'\n      }\n    }\n  }];\n\n  const onSelectCourse = rowData => {\n    if (rowData) {\n      setSelectedRowData({ ...rowData,\n        study_year: studyYearCourse.study_year\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(CourseUnitsTable, {\n      courseUnits: studyYearCourse.course_units,\n      onRowClicked: rowData => setDataAndOpenPopUp({ ...rowData,\n        study_year: studyYearCourse.study_year\n      }),\n      conditionalRowStyles: conditionalRowStyles,\n      compact: true,\n      columnsBefore: [{\n        name: /*#__PURE__*/_jsxDEV(FaCheckSquare, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 19\n        }, this),\n        width: '30px',\n\n        cell(rowData) {\n          const {\n            id\n          } = rowData;\n          return /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"checkbox\",\n            defaultChecked: findCourseUnit(rowData),\n            id: `custom-${id}`,\n            onChange: () => onSelectCourse(rowData)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this);\n        }\n\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c = StudyYearCourseUnits;\nStudyYearCourseUnits.defaultProps = {\n  selectedCourseUnits: [],\n  studyYearCourse: {}\n};\nStudyYearCourseUnits.propTypes = {\n  selectedCourseUnits: PropTypes.oneOfType([any]),\n  studyYearCourse: PropTypes.oneOfType([object]),\n  setDataAndOpenPopUp: PropTypes.func.isRequired,\n  setSelectedRowData: PropTypes.func.isRequired,\n  findCourseUnit: PropTypes.func.isRequired\n};\nexport default StudyYearCourseUnits;\n\nvar _c;\n\n$RefreshReg$(_c, \"StudyYearCourseUnits\");","map":{"version":3,"sources":["/Users/admin/Documents/react-projects/hesmis-front/src/containers/RegistrationHistory/StudyYearCourseUnits.jsx"],"names":["React","PropTypes","object","any","Form","FaCheckSquare","CourseUnitsTable","StudyYearCourseUnits","selectedCourseUnits","studyYearCourse","setDataAndOpenPopUp","setSelectedRowData","findCourseUnit","conditionalRowStyles","when","row","find","courseUnit","course_unit_id","style","backgroundColor","fontWeight","color","cursor","onSelectCourse","rowData","study_year","course_units","name","width","cell","id","defaultProps","propTypes","oneOfType","func","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,IAAoBC,MAApB,EAA4BC,GAA5B,QAAuC,YAAvC;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAASC,aAAT,QAA8B,gBAA9B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;;;AAEA,MAAMC,oBAAoB,GAAG,CAAC;AAC5BC,EAAAA,mBAD4B;AAE5BC,EAAAA,eAF4B;AAG5BC,EAAAA,mBAH4B;AAI5BC,EAAAA,kBAJ4B;AAK5BC,EAAAA;AAL4B,CAAD,KAMvB;AACJ,QAAMC,oBAAoB,GAAG,CAC3B;AACEC,IAAAA,IAAI,EAAGC,GAAD,IACJP,mBAAmB,CAACQ,IAApB,CACGC,UAAD,IAAgBA,UAAU,CAACC,cAAX,KAA8BH,GAAG,CAACG,cADpD,CAFJ;AAKEC,IAAAA,KAAK,EAAE;AACLC,MAAAA,eAAe,EAAE,SADZ;AAELC,MAAAA,UAAU,EAAE,iBAFP;AAGLC,MAAAA,KAAK,EAAE,SAHF;AAIL,iBAAW;AACTF,QAAAA,eAAe,EAAE,SADR;AAETG,QAAAA,MAAM,EAAE;AAFC;AAJN;AALT,GAD2B,CAA7B;;AAkBA,QAAMC,cAAc,GAAIC,OAAD,IAAa;AAClC,QAAIA,OAAJ,EAAa;AACXd,MAAAA,kBAAkB,CAAC,EACjB,GAAGc,OADc;AAEjBC,QAAAA,UAAU,EAAEjB,eAAe,CAACiB;AAFX,OAAD,CAAlB;AAID;AACF,GAPD;;AASA,sBACE;AAAA,2BACE,QAAC,gBAAD;AACE,MAAA,WAAW,EAAEjB,eAAe,CAACkB,YAD/B;AAEE,MAAA,YAAY,EAAGF,OAAD,IACZf,mBAAmB,CAAC,EAClB,GAAGe,OADe;AAElBC,QAAAA,UAAU,EAAEjB,eAAe,CAACiB;AAFV,OAAD,CAHvB;AAQE,MAAA,oBAAoB,EAAEb,oBARxB;AASE,MAAA,OAAO,MATT;AAUE,MAAA,aAAa,EAAE,CACb;AACEe,QAAAA,IAAI,eAAE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,gBADR;AAEEC,QAAAA,KAAK,EAAE,MAFT;;AAGEC,QAAAA,IAAI,CAACL,OAAD,EAAU;AACZ,gBAAM;AAAEM,YAAAA;AAAF,cAASN,OAAf;AACA,8BACE,QAAC,IAAD,CAAM,KAAN;AACE,YAAA,IAAI,EAAC,UADP;AAEE,YAAA,cAAc,EAAEb,cAAc,CAACa,OAAD,CAFhC;AAGE,YAAA,EAAE,EAAG,UAASM,EAAG,EAHnB;AAIE,YAAA,QAAQ,EAAE,MAAMP,cAAc,CAACC,OAAD;AAJhC;AAAA;AAAA;AAAA;AAAA,kBADF;AAQD;;AAbH,OADa;AAVjB;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAgCD,CAlED;;KAAMlB,oB;AAoENA,oBAAoB,CAACyB,YAArB,GAAoC;AAClCxB,EAAAA,mBAAmB,EAAE,EADa;AAElCC,EAAAA,eAAe,EAAE;AAFiB,CAApC;AAKAF,oBAAoB,CAAC0B,SAArB,GAAiC;AAC/BzB,EAAAA,mBAAmB,EAAEP,SAAS,CAACiC,SAAV,CAAoB,CAAC/B,GAAD,CAApB,CADU;AAE/BM,EAAAA,eAAe,EAAER,SAAS,CAACiC,SAAV,CAAoB,CAAChC,MAAD,CAApB,CAFc;AAG/BQ,EAAAA,mBAAmB,EAAET,SAAS,CAACkC,IAAV,CAAeC,UAHL;AAI/BzB,EAAAA,kBAAkB,EAAEV,SAAS,CAACkC,IAAV,CAAeC,UAJJ;AAK/BxB,EAAAA,cAAc,EAAEX,SAAS,CAACkC,IAAV,CAAeC;AALA,CAAjC;AAQA,eAAe7B,oBAAf","sourcesContent":["import React from 'react';\nimport PropTypes, { object, any } from 'prop-types';\nimport { Form } from 'react-bootstrap';\nimport { FaCheckSquare } from 'react-icons/fa';\nimport CourseUnitsTable from './CourseUnitsTable';\n\nconst StudyYearCourseUnits = ({\n  selectedCourseUnits,\n  studyYearCourse,\n  setDataAndOpenPopUp,\n  setSelectedRowData,\n  findCourseUnit,\n}) => {\n  const conditionalRowStyles = [\n    {\n      when: (row) =>\n        selectedCourseUnits.find(\n          (courseUnit) => courseUnit.course_unit_id === row.course_unit_id\n        ),\n      style: {\n        backgroundColor: '#b2bec3',\n        fontWeight: 'bold !important',\n        color: '#2d3436',\n        '&:hover': {\n          backgroundColor: '#636e72',\n          cursor: 'pointer',\n        },\n      },\n    },\n  ];\n\n  const onSelectCourse = (rowData) => {\n    if (rowData) {\n      setSelectedRowData({\n        ...rowData,\n        study_year: studyYearCourse.study_year,\n      });\n    }\n  };\n\n  return (\n    <>\n      <CourseUnitsTable\n        courseUnits={studyYearCourse.course_units}\n        onRowClicked={(rowData) =>\n          setDataAndOpenPopUp({\n            ...rowData,\n            study_year: studyYearCourse.study_year,\n          })\n        }\n        conditionalRowStyles={conditionalRowStyles}\n        compact\n        columnsBefore={[\n          {\n            name: <FaCheckSquare />,\n            width: '30px',\n            cell(rowData) {\n              const { id } = rowData;\n              return (\n                <Form.Check\n                  type=\"checkbox\"\n                  defaultChecked={findCourseUnit(rowData)}\n                  id={`custom-${id}`}\n                  onChange={() => onSelectCourse(rowData)}\n                />\n              );\n            },\n          },\n        ]}\n      />\n    </>\n  );\n};\n\nStudyYearCourseUnits.defaultProps = {\n  selectedCourseUnits: [],\n  studyYearCourse: {},\n};\n\nStudyYearCourseUnits.propTypes = {\n  selectedCourseUnits: PropTypes.oneOfType([any]),\n  studyYearCourse: PropTypes.oneOfType([object]),\n  setDataAndOpenPopUp: PropTypes.func.isRequired,\n  setSelectedRowData: PropTypes.func.isRequired,\n  findCourseUnit: PropTypes.func.isRequired,\n};\n\nexport default StudyYearCourseUnits;\n"]},"metadata":{},"sourceType":"module"}