{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/react-projects/hesmis-front/src/containers/EnrollmentHistory/InvoiceCard.jsx\";\nimport { isArray } from 'lodash';\nimport React from 'react';\nimport PropTypes, { object, any } from 'prop-types';\nimport { Accordion, Table } from 'react-bootstrap';\nimport { FaPaperclip } from 'react-icons/fa';\nimport AccordionHeader from '../../components/common/AccordionHeader';\nimport InvoiceForm from './InvoiceForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst InvoiceCard = ({\n  register,\n  errors,\n  activeKey,\n  setActiveKey,\n  invoiceCardId,\n  invoiceTitle,\n  invoice,\n  invoiceType\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Accordion.Item, {\n      eventKey: invoiceCardId,\n      className: \"mb-2 border border-muted\",\n      children: [/*#__PURE__*/_jsxDEV(AccordionHeader, {\n        activeKey: activeKey,\n        setActiveKey: setActiveKey,\n        eventKey: invoiceCardId,\n        children: [/*#__PURE__*/_jsxDEV(FaPaperclip, {\n          className: \"me-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), 'MY NEW INVOICE'\n        /*invoiceTitle*/\n        ]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          size: \"sm\",\n          responsive: true,\n          striped: true,\n          className: \"border-0 m-0\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"text-xs text-muted\",\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"INVOICE NUMBER\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"TOTAL AMOUNT\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"AMOUNT PAID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"AMOUNT DUE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"AMOUNT YOU ARE PAYING\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: isArray(invoice) ? invoice.map((singleInvoice, index) => /*#__PURE__*/_jsxDEV(InvoiceForm, {\n              //{`${invoiceType}_${singleInvoice.id}`}\n              register: register,\n              errors: errors,\n              invoice: singleInvoice,\n              formKey: `${invoiceType}[${index}]`\n            }, '123453', false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 19\n            }, this)) : /*#__PURE__*/_jsxDEV(InvoiceForm, {\n              register: register,\n              errors: errors,\n              invoice: invoice,\n              formKey: invoiceType\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c = InvoiceCard;\nInvoiceCard.defaultProps = {\n  invoice: {},\n  activeKey: '123',\n  invoiceType: 'paymentReference',\n  invoiceCardId: 2333432\n};\nInvoiceCard.propTypes = {\n  invoice: PropTypes.oneOfType([object]),\n  errors: PropTypes.oneOfType([any]).isRequired,\n  invoiceCardId: PropTypes.oneOfType([any]).isRequired,\n  activeKey: PropTypes.oneOfType([any]),\n  register: PropTypes.func.isRequired,\n  setActiveKey: PropTypes.func.isRequired,\n  invoiceType: PropTypes.string.isRequired,\n  invoiceTitle: PropTypes.string.isRequired\n};\nexport default InvoiceCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"InvoiceCard\");","map":{"version":3,"sources":["/Users/admin/Documents/react-projects/hesmis-front/src/containers/EnrollmentHistory/InvoiceCard.jsx"],"names":["isArray","React","PropTypes","object","any","Accordion","Table","FaPaperclip","AccordionHeader","InvoiceForm","InvoiceCard","register","errors","activeKey","setActiveKey","invoiceCardId","invoiceTitle","invoice","invoiceType","map","singleInvoice","index","defaultProps","propTypes","oneOfType","isRequired","func","string"],"mappings":"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","sourcesContent":["import { isArray } from 'lodash';\nimport React from 'react';\nimport PropTypes, { object, any } from 'prop-types';\nimport { Accordion, Table } from 'react-bootstrap';\nimport { FaPaperclip } from 'react-icons/fa';\nimport AccordionHeader from '../../components/common/AccordionHeader';\nimport InvoiceForm from './InvoiceForm';\n\nconst InvoiceCard = ({\n  register,\n  errors,\n  activeKey,\n  setActiveKey,\n  invoiceCardId,\n  invoiceTitle,\n  invoice,\n  invoiceType,\n}) => {\n  return (\n    <>\n      <Accordion.Item\n        eventKey={invoiceCardId}\n        className=\"mb-2 border border-muted\"\n      >\n        <AccordionHeader\n          activeKey={activeKey}\n          setActiveKey={setActiveKey}\n          eventKey={invoiceCardId}\n        >\n          <FaPaperclip className=\"me-1\" />\n          {'MY NEW INVOICE'/*invoiceTitle*/}\n        </AccordionHeader>\n        <Accordion.Body>\n          <Table size=\"sm\" responsive striped className=\"border-0 m-0\">\n            <thead className=\"text-xs text-muted\">\n              <tr>\n                <td>INVOICE NUMBER</td>\n                <td>TOTAL AMOUNT</td>\n                <td>AMOUNT PAID</td>\n                <td>AMOUNT DUE</td>\n                <td>AMOUNT YOU ARE PAYING</td>\n              </tr>\n            </thead>\n            <tbody>\n              {isArray(invoice) ? (\n                invoice.map((singleInvoice, index) => (\n                  <InvoiceForm\n                    key= '123453'//{`${invoiceType}_${singleInvoice.id}`}\n                    register={register}\n                    errors={errors}\n                    invoice={singleInvoice}\n                    formKey={`${invoiceType}[${index}]`}\n                  />\n                ))\n              ) : (\n                <InvoiceForm\n                  register={register}\n                  errors={errors}\n                  invoice={invoice}\n                  formKey={invoiceType}\n                />\n              )}\n            </tbody>\n          </Table>\n        </Accordion.Body>\n      </Accordion.Item>\n    </>\n  );\n};\n\nInvoiceCard.defaultProps = {\n  invoice: {},\n  activeKey: '123',\n  invoiceType: 'paymentReference',\n  invoiceCardId: 2333432\n};\n\nInvoiceCard.propTypes = {\n  invoice: PropTypes.oneOfType([object]),\n  errors: PropTypes.oneOfType([any]).isRequired,\n  invoiceCardId: PropTypes.oneOfType([any]).isRequired,\n  activeKey: PropTypes.oneOfType([any]),\n  register: PropTypes.func.isRequired,\n  setActiveKey: PropTypes.func.isRequired,\n  invoiceType: PropTypes.string.isRequired,\n  invoiceTitle: PropTypes.string.isRequired,\n};\nexport default InvoiceCard;\n"]},"metadata":{},"sourceType":"module"}