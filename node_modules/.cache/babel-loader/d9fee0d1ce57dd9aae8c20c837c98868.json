{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/react-projects/hesmis-front/src/containers/RegistrationHistory/RegistrationForm.jsx\",\n    _s = $RefreshSig$();\n\nimport { isEmpty } from 'lodash';\nimport PropTypes, { array } from 'prop-types';\nimport React, { useState } from 'react';\nimport { Card, Col, Row } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { SubmitButton } from '../../components/common';\nimport { settingActions } from '../../config/actions';\nimport RegistrationStatusPopUp from './RegistrationStatusPopUp';\nimport SelectedCourseUnits from './SelectedCourseUnits';\nimport StudyYearCourseUnits from './StudyYearCourseUnits';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RegistrationForm = ({\n  registrationStatusOptions,\n  courseUnitsByStudyYear,\n  selectedCourseUnits,\n  setSelectedCourseUnits,\n  registeringStudent,\n  onClickRegisterButton\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [rowData, setRowData] = useState(null);\n  const showModal = useSelector(state => state.setting.showModal);\n\n  const findCourseUnit = row => selectedCourseUnits.find(courseUnit => courseUnit.course_unit_id === row.course_unit_id);\n\n  const setDataAndOpenPopUp = data => {\n    setRowData(data);\n    dispatch(settingActions.setShowModal(true));\n  };\n\n  const setSelectedRowData = data => {\n    const courseExists = findCourseUnit(data);\n\n    if (courseExists) {\n      setSelectedCourseUnits(selectedCourseUnits.filter(courseUnit => courseUnit.course_unit_id !== courseExists.course_unit_id));\n    } else {\n      setDataAndOpenPopUp(data);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"rounded-0 border-bottom border-right-0 border-left-0 border-top-0\",\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            className: \"p-0\",\n            children: courseUnitsByStudyYear.map(studyYearCourse => /*#__PURE__*/_jsxDEV(Card, {\n              className: \"border-left border-right border-top-0 border-bottom-0\",\n              children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                className: \"py-1 text-xs border-top bg-white font600 text-info\",\n                children: `${studyYearCourse.study_year} - ${studyYearCourse.semester}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                className: \"p-0\",\n                children: /*#__PURE__*/_jsxDEV(StudyYearCourseUnits, {\n                  studyYearCourse: studyYearCourse,\n                  findCourseUnit: findCourseUnit,\n                  setDataAndOpenPopUp: setDataAndOpenPopUp,\n                  setSelectedRowData: setSelectedRowData,\n                  selectedCourseUnits: selectedCourseUnits\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 19\n              }, this)]\n            }, studyYearCourse.study_year, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: [/*#__PURE__*/_jsxDEV(SelectedCourseUnits, {\n          setSelectedCourseUnits: setSelectedCourseUnits,\n          selectedCourseUnits: selectedCourseUnits,\n          setDataAndOpenPopUp: setDataAndOpenPopUp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), !isEmpty(selectedCourseUnits) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"my-4 text-right\",\n          children: /*#__PURE__*/_jsxDEV(SubmitButton, {\n            text: \"Register Now\",\n            loading: registeringStudent,\n            onClick: onClickRegisterButton,\n            loadingText: \"Registering...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), showModal && !isEmpty(rowData) && /*#__PURE__*/_jsxDEV(RegistrationStatusPopUp, {\n      setSelectedRow: setSelectedCourseUnits,\n      selectedCourseUnits: selectedCourseUnits,\n      rowData: rowData,\n      registrationStatusOptions: registrationStatusOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(RegistrationForm, \"m2ZtS/N8pOLV+ivoC3vZ7btxvZg=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = RegistrationForm;\nRegistrationForm.defaultProps = {\n  registrationStatusOptions: [],\n  courseUnitsByStudyYear: [],\n  selectedCourseUnits: [],\n  registeringStudent: []\n};\nRegistrationForm.propTypes = {\n  registrationStatusOptions: PropTypes.oneOfType([array]),\n  courseUnitsByStudyYear: PropTypes.oneOfType([array]),\n  selectedCourseUnits: PropTypes.oneOfType([array]),\n  setSelectedCourseUnits: PropTypes.func.isRequired,\n  registeringStudent: PropTypes.oneOfType([array]),\n  onClickRegisterButton: PropTypes.func.isRequired\n};\nexport default RegistrationForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegistrationForm\");","map":{"version":3,"sources":["/Users/admin/Documents/react-projects/hesmis-front/src/containers/RegistrationHistory/RegistrationForm.jsx"],"names":["isEmpty","PropTypes","array","React","useState","Card","Col","Row","useDispatch","useSelector","SubmitButton","settingActions","RegistrationStatusPopUp","SelectedCourseUnits","StudyYearCourseUnits","RegistrationForm","registrationStatusOptions","courseUnitsByStudyYear","selectedCourseUnits","setSelectedCourseUnits","registeringStudent","onClickRegisterButton","dispatch","rowData","setRowData","showModal","state","setting","findCourseUnit","row","find","courseUnit","course_unit_id","setDataAndOpenPopUp","data","setShowModal","setSelectedRowData","courseExists","filter","map","studyYearCourse","study_year","semester","defaultProps","propTypes","oneOfType","func","isRequired"],"mappings":"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","sourcesContent":["import { isEmpty } from 'lodash';\nimport PropTypes, { array } from 'prop-types';\nimport React, { useState } from 'react';\nimport { Card, Col, Row } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { SubmitButton } from '../../components/common';\nimport { settingActions } from '../../config/actions';\nimport RegistrationStatusPopUp from './RegistrationStatusPopUp';\nimport SelectedCourseUnits from './SelectedCourseUnits';\nimport StudyYearCourseUnits from './StudyYearCourseUnits';\n\nconst RegistrationForm = ({\n  registrationStatusOptions,\n  courseUnitsByStudyYear,\n  selectedCourseUnits,\n  setSelectedCourseUnits,\n  registeringStudent,\n  onClickRegisterButton,\n}) => {\n  const dispatch = useDispatch();\n  const [rowData, setRowData] = useState(null);\n  const showModal = useSelector((state) => state.setting.showModal);\n\n  const findCourseUnit = (row) =>\n    selectedCourseUnits.find(\n      (courseUnit) => courseUnit.course_unit_id === row.course_unit_id\n    );\n\n  const setDataAndOpenPopUp = (data) => {\n    setRowData(data);\n    dispatch(settingActions.setShowModal(true));\n  };\n\n  const setSelectedRowData = (data) => {\n    const courseExists = findCourseUnit(data);\n    if (courseExists) {\n      setSelectedCourseUnits(\n        selectedCourseUnits.filter(\n          (courseUnit) =>\n            courseUnit.course_unit_id !== courseExists.course_unit_id\n        )\n      );\n    } else {\n      setDataAndOpenPopUp(data);\n    }\n  };\n\n  return (\n    <>\n      <Row>\n        <Col md={6}>\n          <Card className=\"rounded-0 border-bottom border-right-0 border-left-0 border-top-0\">\n            <Card.Body className=\"p-0\">\n              {courseUnitsByStudyYear.map((studyYearCourse) => (\n                <Card\n                  className=\"border-left border-right border-top-0 border-bottom-0\"\n                  key={studyYearCourse.study_year}\n                >\n                  <Card.Header className=\"py-1 text-xs border-top bg-white font600 text-info\">\n                    {`${studyYearCourse.study_year} - ${studyYearCourse.semester}`}\n                  </Card.Header>\n                  <Card.Body className=\"p-0\">\n                    <StudyYearCourseUnits\n                      studyYearCourse={studyYearCourse}\n                      findCourseUnit={findCourseUnit}\n                      setDataAndOpenPopUp={setDataAndOpenPopUp}\n                      setSelectedRowData={setSelectedRowData}\n                      selectedCourseUnits={selectedCourseUnits}\n                    />\n                  </Card.Body>\n                </Card>\n              ))}\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col md={6}>\n          <SelectedCourseUnits\n            setSelectedCourseUnits={setSelectedCourseUnits}\n            selectedCourseUnits={selectedCourseUnits}\n            setDataAndOpenPopUp={setDataAndOpenPopUp}\n          />\n          {!isEmpty(selectedCourseUnits) && (\n            <div className=\"my-4 text-right\">\n              <SubmitButton\n                text=\"Register Now\"\n                loading={registeringStudent}\n                onClick={onClickRegisterButton}\n                loadingText=\"Registering...\"\n              />\n            </div>\n          )}\n        </Col>\n      </Row>\n      {showModal && !isEmpty(rowData) && (\n        <RegistrationStatusPopUp\n          setSelectedRow={setSelectedCourseUnits}\n          selectedCourseUnits={selectedCourseUnits}\n          rowData={rowData}\n          registrationStatusOptions={registrationStatusOptions}\n        />\n      )}\n    </>\n  );\n};\n\nRegistrationForm.defaultProps = {\n  registrationStatusOptions: [],\n  courseUnitsByStudyYear: [],\n  selectedCourseUnits: [],\n  registeringStudent: [],\n};\n\nRegistrationForm.propTypes = {\n  registrationStatusOptions: PropTypes.oneOfType([array]),\n  courseUnitsByStudyYear: PropTypes.oneOfType([array]),\n  selectedCourseUnits: PropTypes.oneOfType([array]),\n  setSelectedCourseUnits: PropTypes.func.isRequired,\n  registeringStudent: PropTypes.oneOfType([array]),\n  onClickRegisterButton: PropTypes.func.isRequired,\n};\n\nexport default RegistrationForm;\n"]},"metadata":{},"sourceType":"module"}