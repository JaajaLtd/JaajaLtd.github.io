{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/react-projects/hesmis-front/src/containers/Dashboard/ProgrammeTab.jsx\",\n    _s = $RefreshSig$();\n\nimport { isEmpty } from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport { Card } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { SelectInput } from '../../components/common';\nimport { authActions } from '../../config/actions';\nimport { formatProgrammes } from '../../helpers/dataFormatter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProgrammeTab = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    authUser,\n    currentStudentProgramme\n  } = useSelector(state => state.auth);\n  const [programmeOptions, setProgrammeOption] = useState([]);\n  const [selectedProgramme, setSelectedProgramme] = useState(currentStudentProgramme.id);\n  useEffect(() => {\n    dispatch(authActions.getStudentProgrammes());\n  }, []);\n\n  const setCurrentStudentProgramme = programme => {\n    dispatch(authActions.setCurrentStudentProgramme(programme, 'programme_id'));\n  };\n\n  useEffect(() => {\n    if (authUser) {\n      setProgrammeOption(formatProgrammes(authUser.academic_records || []));\n\n      if (!isEmpty(authUser.academic_records)) {\n        const findCurrentProgramme = authUser.academic_records.find(programme => programme.is_current_programme === true);\n        const programme = findCurrentProgramme || authUser.academic_records[0];\n        setCurrentStudentProgramme(programme);\n        setSelectedProgramme(programme.programme_id);\n      }\n    }\n  }, [authUser]);\n\n  const handleChangeProgramme = e => {\n    const {\n      value\n    } = e.target;\n\n    if (value && !isEmpty(authUser.academic_records)) {\n      setSelectedProgramme(value);\n      const findProgramme = authUser.academic_records.find(programme => parseInt(programme.programme_id, 10) === parseInt(value, 10));\n      if (findProgramme) setCurrentStudentProgramme(findProgramme);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card.Header, {\n      className: \"py-2 px-3 border-0 bg-light\",\n      children: programmeOptions.length > 1 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(SelectInput, {\n          type: \"select\",\n          selectOptions: programmeOptions,\n          onChange: handleChangeProgramme,\n          value: selectedProgramme,\n          name: \"current_programme\",\n          label: \"PROGRAMME:\",\n          inline: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-sm font500 my-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-primary me-1\",\n          children: \"PROGRAMME:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), `(${currentStudentProgramme.programme_code}) - ${currentStudentProgramme.programme_title}`]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(ProgrammeTab, \"WuX8/s++DayuxCb3K1v2//4V1qw=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ProgrammeTab;\nexport default ProgrammeTab;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProgrammeTab\");","map":{"version":3,"sources":["/Users/admin/Documents/react-projects/hesmis-front/src/containers/Dashboard/ProgrammeTab.jsx"],"names":["isEmpty","React","useEffect","useState","Card","useDispatch","useSelector","SelectInput","authActions","formatProgrammes","ProgrammeTab","dispatch","authUser","currentStudentProgramme","state","auth","programmeOptions","setProgrammeOption","selectedProgramme","setSelectedProgramme","id","getStudentProgrammes","setCurrentStudentProgramme","programme","academic_records","findCurrentProgramme","find","is_current_programme","programme_id","handleChangeProgramme","e","value","target","findProgramme","parseInt","length","programme_code","programme_title"],"mappings":"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","sourcesContent":["import { isEmpty } from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport { Card } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { SelectInput } from '../../components/common';\nimport { authActions } from '../../config/actions';\nimport { formatProgrammes } from '../../helpers/dataFormatter';\n\nconst ProgrammeTab = () => {\n  const dispatch = useDispatch();\n  const { authUser, currentStudentProgramme } = useSelector(\n    (state) => state.auth\n  );\n  const [programmeOptions, setProgrammeOption] = useState([]);\n  const [selectedProgramme, setSelectedProgramme] = useState(\n    currentStudentProgramme.id\n  );\n\n  useEffect(() => {\n    dispatch(authActions.getStudentProgrammes());\n  }, []);\n\n  const setCurrentStudentProgramme = (programme) => {\n    dispatch(authActions.setCurrentStudentProgramme(programme, 'programme_id'));\n  };\n\n  useEffect(() => {\n    if (authUser) {\n      setProgrammeOption(formatProgrammes(authUser.academic_records || []));\n      if (!isEmpty(authUser.academic_records)) {\n        const findCurrentProgramme = authUser.academic_records.find(\n          (programme) => programme.is_current_programme === true\n        );\n        const programme = findCurrentProgramme || authUser.academic_records[0];\n        setCurrentStudentProgramme(programme);\n        setSelectedProgramme(programme.programme_id);\n      }\n    }\n  }, [authUser]);\n\n  const handleChangeProgramme = (e) => {\n    const { value } = e.target;\n    if (value && !isEmpty(authUser.academic_records)) {\n      setSelectedProgramme(value);\n      const findProgramme = authUser.academic_records.find(\n        (programme) =>\n          parseInt(programme.programme_id, 10) === parseInt(value, 10)\n      );\n      if (findProgramme) setCurrentStudentProgramme(findProgramme);\n    }\n  };\n\n  return (\n    <>\n      <Card.Header className=\"py-2 px-3 border-0 bg-light\">\n        {programmeOptions.length > 1 ? (\n          <>\n            <SelectInput\n              type=\"select\"\n              selectOptions={programmeOptions}\n              onChange={handleChangeProgramme}\n              value={selectedProgramme}\n              name=\"current_programme\"\n              label=\"PROGRAMME:\"\n              inline\n            />\n          </>\n        ) : (\n          <div className=\"text-sm font500 my-auto\">\n            <span className=\"text-primary me-1\">PROGRAMME:</span>\n            {`(${currentStudentProgramme.programme_code}) - ${currentStudentProgramme.programme_title}`}\n          </div>\n        )}\n      </Card.Header>\n    </>\n  );\n};\n\nexport default ProgrammeTab;\n"]},"metadata":{},"sourceType":"module"}