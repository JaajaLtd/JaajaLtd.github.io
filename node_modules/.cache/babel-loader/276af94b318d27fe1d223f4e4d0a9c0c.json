{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/react-projects/hesmis/hesmis-front/src/containers/Payments/Invoice.jsx\",\n    _s = $RefreshSig$();\n\nimport { isEmpty, sumBy } from 'lodash';\nimport PropTypes, { any } from 'prop-types';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { Card, Col, Row } from 'react-bootstrap';\nimport DataTable from 'react-data-table-component';\nimport darkHeader from '../../helpers/dataTableCustomStyle';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Invoice = ({\n  data\n}) => {\n  _s();\n\n  const [affectedInvoices, setAffectedInvoices] = useState(0);\n  const [invoices, setInvoices] = useState([]);\n  useEffect(() => {\n    let average = 0;\n    if (!isEmpty(data.tuition_invoices)) average += 1;\n    if (!isEmpty(data.functional_fees_invoices)) average += 1;\n    if (!isEmpty(data.manual_invoices)) average += 1;\n    if (!isEmpty(data.other_fees_invoices)) average += 1;\n    setAffectedInvoices(average);\n\n    if (!isEmpty(data)) {\n      var _data$tuition_invoice, _data$functional_fees, _data$manual_invoices, _data$other_fees_invo;\n\n      const invoiceData = [...((_data$tuition_invoice = data.tuition_invoices) === null || _data$tuition_invoice === void 0 ? void 0 : _data$tuition_invoice.map(invoice => ({ ...invoice,\n        invoice_group: 'Tuition Invoice'\n      }))), ...((_data$functional_fees = data.functional_fees_invoices) === null || _data$functional_fees === void 0 ? void 0 : _data$functional_fees.map(invoice => ({ ...invoice,\n        invoice_group: 'Functional Fees Invoice'\n      }))), ...((_data$manual_invoices = data.manual_invoices) === null || _data$manual_invoices === void 0 ? void 0 : _data$manual_invoices.map(invoice => ({ ...invoice,\n        invoice_group: 'Manual Invoice'\n      }))), ...((_data$other_fees_invo = data.other_fees_invoices) === null || _data$other_fees_invo === void 0 ? void 0 : _data$other_fees_invo.map(invoice => ({ ...invoice,\n        invoice_group: 'Other Fees Invoice'\n      })))];\n      setInvoices(invoiceData);\n    }\n  }, [data]);\n  const invoiceGrandTotalAmount = sumBy(data.tuition_invoices, 'invoice_amount') + sumBy(data.functional_fees_invoices, 'invoice_amount') + sumBy(data.manual_invoices, 'invoice_amount') + sumBy(data.other_fees_invoices, 'invoice_amount');\n  const invoiceGrandAmountDue = sumBy(data.tuition_invoices, 'amount_due') + sumBy(data.functional_fees_invoices, 'amount_due') + sumBy(data.manual_invoices, 'amount_due') + sumBy(data.other_fees_invoices, 'amount_due');\n  const invoiceGrandAmountPaid = sumBy(data.tuition_invoices, 'amount_paid') + sumBy(data.functional_fees_invoices, 'amount_paid') + sumBy(data.manual_invoices, 'amount_paid') + sumBy(data.other_fees_invoices, 'amount_paid');\n  const invoiceGrandPercentage = sumBy(data.tuition_invoices, 'percentage_completion') + sumBy(data.functional_fees_invoices, 'percentage_completion') + sumBy(data.manual_invoices, 'percentage_completion') + sumBy(data.other_fees_invoices, 'percentage_completion');\n  const columns = useMemo(() => [{\n    name: '#',\n    width: '50px',\n\n    cell(row, index) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: index + 1\n      }, void 0, false);\n    }\n\n  }, {\n    name: 'Invoice No.',\n    selector: 'invoice_number'\n  }, {\n    name: 'Category',\n    selector: 'invoice_group'\n  }, {\n    name: 'Inv. Amount',\n    width: '100px',\n    wrap: true,\n\n    cell(row) {\n      const {\n        invoice_amount: invoiceAmount\n      } = row;\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: parseInt(invoiceAmount, 10).toLocaleString()\n      }, void 0, false);\n    }\n\n  }, {\n    name: 'Paid',\n    width: '120px',\n    wrap: true,\n\n    cell(row) {\n      const {\n        amount_paid: amountPaid\n      } = row;\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: parseInt(amountPaid, 10).toLocaleString()\n      }, void 0, false);\n    }\n\n  }, {\n    name: 'Due',\n    width: '120px',\n    wrap: true,\n\n    cell(row) {\n      const {\n        amount_due: amountDue\n      } = row;\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: parseInt(amountDue, 10).toLocaleString()\n      }, void 0, false);\n    }\n\n  }, {\n    name: 'CURR',\n    selector: 'currency'\n  }, {\n    name: 'Narration',\n    selector: 'description'\n  }, {\n    name: 'Type',\n    selector: 'invoice_type'\n  }, {\n    name: 'Status',\n    selector: 'invoice_status'\n  }, {\n    name: 'Completion',\n    selector: 'percentage_completion'\n  }], []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"border-bottom\",\n    children: [/*#__PURE__*/_jsxDEV(DataTable, {\n      data: invoices,\n      columns: columns,\n      dense: true,\n      customStyles: darkHeader,\n      keyField: \"invoice_number\",\n      noHeader: true,\n      striped: true,\n      fixedHeader: true,\n      fixedHeaderScrollHeight: \"500px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"px-4 py-2\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          className: \"my-1\",\n          children: /*#__PURE__*/_jsxDEV(Card.Header, {\n            className: \"border bg-light rounded p-2\",\n            children: /*#__PURE__*/_jsxDEV(Card.Text, {\n              className: \"text-xs font600\",\n              children: [\"TOTAL AMOUNT:\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-info mx-1\",\n                children: invoiceGrandTotalAmount.toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          className: \"my-1\",\n          children: /*#__PURE__*/_jsxDEV(Card.Header, {\n            className: \"border bg-light rounded p-2\",\n            children: /*#__PURE__*/_jsxDEV(Card.Text, {\n              className: \"text-xs font600\",\n              children: [\"TOTAL AMOUNT PAID:\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-success mx-1\",\n                children: invoiceGrandAmountPaid.toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          className: \"my-1\",\n          children: /*#__PURE__*/_jsxDEV(Card.Header, {\n            className: \"border bg-light rounded p-2\",\n            children: /*#__PURE__*/_jsxDEV(Card.Text, {\n              className: \"text-xs font600\",\n              children: [\"TOTAL AMOUNT DUE:\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-danger mx-1\",\n                children: invoiceGrandAmountDue.toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          className: \"my-1\",\n          children: /*#__PURE__*/_jsxDEV(Card.Header, {\n            className: \"border bg-light rounded p-2\",\n            children: /*#__PURE__*/_jsxDEV(Card.Text, {\n              className: \"text-xs font600\",\n              children: [\"COMPLETION:\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: invoiceGrandPercentage > 70 ? 'mx-1 text-success' : 'mx-1 text-danger',\n                children: `${parseInt(invoiceGrandPercentage, 10) / affectedInvoices} %`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Invoice, \"pn/UwrPPSrc/47LETngrL+fVn8c=\");\n\n_c = Invoice;\nInvoice.defaultProps = {\n  data: {}\n};\nInvoice.propTypes = {\n  data: PropTypes.oneOfType([any])\n};\nexport default Invoice;\n\nvar _c;\n\n$RefreshReg$(_c, \"Invoice\");","map":{"version":3,"sources":["/Users/admin/Documents/react-projects/hesmis/hesmis-front/src/containers/Payments/Invoice.jsx"],"names":["isEmpty","sumBy","PropTypes","any","React","useEffect","useMemo","useState","Card","Col","Row","DataTable","darkHeader","Invoice","data","affectedInvoices","setAffectedInvoices","invoices","setInvoices","average","tuition_invoices","functional_fees_invoices","manual_invoices","other_fees_invoices","invoiceData","map","invoice","invoice_group","invoiceGrandTotalAmount","invoiceGrandAmountDue","invoiceGrandAmountPaid","invoiceGrandPercentage","columns","name","width","cell","row","index","selector","wrap","invoice_amount","invoiceAmount","parseInt","toLocaleString","amount_paid","amountPaid","amount_due","amountDue","defaultProps","propTypes","oneOfType"],"mappings":"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","sourcesContent":["import { isEmpty, sumBy } from 'lodash';\nimport PropTypes, { any } from 'prop-types';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { Card, Col, Row } from 'react-bootstrap';\nimport DataTable from 'react-data-table-component';\nimport darkHeader from '../../helpers/dataTableCustomStyle';\n\nconst Invoice = ({ data }) => {\n  const [affectedInvoices, setAffectedInvoices] = useState(0);\n  const [invoices, setInvoices] = useState([]);\n\n  useEffect(() => {\n    let average = 0;\n    if (!isEmpty(data.tuition_invoices)) average += 1;\n    if (!isEmpty(data.functional_fees_invoices)) average += 1;\n    if (!isEmpty(data.manual_invoices)) average += 1;\n    if (!isEmpty(data.other_fees_invoices)) average += 1;\n    setAffectedInvoices(average);\n\n    if (!isEmpty(data)) {\n      const invoiceData = [\n        ...data.tuition_invoices?.map((invoice) => ({\n          ...invoice,\n          invoice_group: 'Tuition Invoice',\n        })),\n        ...data.functional_fees_invoices?.map((invoice) => ({\n          ...invoice,\n          invoice_group: 'Functional Fees Invoice',\n        })),\n        ...data.manual_invoices?.map((invoice) => ({\n          ...invoice,\n          invoice_group: 'Manual Invoice',\n        })),\n        ...data.other_fees_invoices?.map((invoice) => ({\n          ...invoice,\n          invoice_group: 'Other Fees Invoice',\n        })),\n      ];\n      setInvoices(invoiceData);\n    }\n  }, [data]);\n\n  const invoiceGrandTotalAmount =\n    sumBy(data.tuition_invoices, 'invoice_amount') +\n    sumBy(data.functional_fees_invoices, 'invoice_amount') +\n    sumBy(data.manual_invoices, 'invoice_amount') +\n    sumBy(data.other_fees_invoices, 'invoice_amount');\n\n  const invoiceGrandAmountDue =\n    sumBy(data.tuition_invoices, 'amount_due') +\n    sumBy(data.functional_fees_invoices, 'amount_due') +\n    sumBy(data.manual_invoices, 'amount_due') +\n    sumBy(data.other_fees_invoices, 'amount_due');\n\n  const invoiceGrandAmountPaid =\n    sumBy(data.tuition_invoices, 'amount_paid') +\n    sumBy(data.functional_fees_invoices, 'amount_paid') +\n    sumBy(data.manual_invoices, 'amount_paid') +\n    sumBy(data.other_fees_invoices, 'amount_paid');\n\n  const invoiceGrandPercentage =\n    sumBy(data.tuition_invoices, 'percentage_completion') +\n    sumBy(data.functional_fees_invoices, 'percentage_completion') +\n    sumBy(data.manual_invoices, 'percentage_completion') +\n    sumBy(data.other_fees_invoices, 'percentage_completion');\n\n  const columns = useMemo(\n    () => [\n      {\n        name: '#',\n        width: '50px',\n        cell(row, index) {\n          return <>{index + 1}</>;\n        },\n      },\n      {\n        name: 'Invoice No.',\n        selector: 'invoice_number',\n      },\n      {\n        name: 'Category',\n        selector: 'invoice_group',\n      },\n      {\n        name: 'Inv. Amount',\n        width: '100px',\n        wrap: true,\n        cell(row) {\n          const { invoice_amount: invoiceAmount } = row;\n          return <>{parseInt(invoiceAmount, 10).toLocaleString()}</>;\n        },\n      },\n      {\n        name: 'Paid',\n        width: '120px',\n        wrap: true,\n        cell(row) {\n          const { amount_paid: amountPaid } = row;\n          return <>{parseInt(amountPaid, 10).toLocaleString()}</>;\n        },\n      },\n      {\n        name: 'Due',\n        width: '120px',\n        wrap: true,\n        cell(row) {\n          const { amount_due: amountDue } = row;\n          return <>{parseInt(amountDue, 10).toLocaleString()}</>;\n        },\n      },\n      {\n        name: 'CURR',\n        selector: 'currency',\n      },\n      {\n        name: 'Narration',\n        selector: 'description',\n      },\n      {\n        name: 'Type',\n        selector: 'invoice_type',\n      },\n      {\n        name: 'Status',\n        selector: 'invoice_status',\n      },\n      {\n        name: 'Completion',\n        selector: 'percentage_completion',\n      },\n    ],\n    []\n  );\n\n  return (\n    <div className=\"border-bottom\">\n      <DataTable\n        data={invoices}\n        columns={columns}\n        dense\n        customStyles={darkHeader}\n        keyField=\"invoice_number\"\n        noHeader\n        striped\n        fixedHeader\n        fixedHeaderScrollHeight=\"500px\"\n      />\n\n      <div className=\"px-4 py-2\">\n        <Row>\n          <Col md={3} className=\"my-1\">\n            <Card.Header className=\"border bg-light rounded p-2\">\n              <Card.Text className=\"text-xs font600\">\n                TOTAL AMOUNT:\n                <span className=\"text-info mx-1\">\n                  {invoiceGrandTotalAmount.toLocaleString()}\n                </span>\n              </Card.Text>\n            </Card.Header>\n          </Col>\n          <Col md={3} className=\"my-1\">\n            <Card.Header className=\"border bg-light rounded p-2\">\n              <Card.Text className=\"text-xs font600\">\n                TOTAL AMOUNT PAID:\n                <span className=\"text-success mx-1\">\n                  {invoiceGrandAmountPaid.toLocaleString()}\n                </span>\n              </Card.Text>\n            </Card.Header>\n          </Col>\n          <Col md={3} className=\"my-1\">\n            <Card.Header className=\"border bg-light rounded p-2\">\n              <Card.Text className=\"text-xs font600\">\n                TOTAL AMOUNT DUE:\n                <span className=\"text-danger mx-1\">\n                  {invoiceGrandAmountDue.toLocaleString()}\n                </span>\n              </Card.Text>\n            </Card.Header>\n          </Col>\n          <Col md={3} className=\"my-1\">\n            <Card.Header className=\"border bg-light rounded p-2\">\n              <Card.Text className=\"text-xs font600\">\n                COMPLETION:\n                <span\n                  className={\n                    invoiceGrandPercentage > 70\n                      ? 'mx-1 text-success'\n                      : 'mx-1 text-danger'\n                  }\n                >\n                  {`${\n                    parseInt(invoiceGrandPercentage, 10) / affectedInvoices\n                  } %`}\n                </span>\n              </Card.Text>\n            </Card.Header>\n          </Col>\n        </Row>\n      </div>\n    </div>\n  );\n};\n\nInvoice.defaultProps = {\n  data: {},\n};\n\nInvoice.propTypes = {\n  data: PropTypes.oneOfType([any]),\n};\n\nexport default Invoice;\n"]},"metadata":{},"sourceType":"module"}