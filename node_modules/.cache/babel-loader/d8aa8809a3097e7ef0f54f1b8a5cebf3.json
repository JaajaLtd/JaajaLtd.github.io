{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/react-projects/hesmis-front/src/components/common/AccordionHeader.jsx\";\nimport React from 'react';\nimport PropTypes, { any } from 'prop-types';\nimport { Accordion } from 'react-bootstrap'; //import { useAccordionButton } from 'react-bootstrap/AccordionButton';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AccordionHeader = ({\n  activeKey,\n  setActiveKey,\n  eventKey,\n  children,\n  ...props\n}) => {\n  const handleActiveKeyState = () => {\n    if (activeKey === eventKey) {\n      setActiveKey(null);\n    } else {\n      setActiveKey(eventKey);\n    }\n  };\n  /*\n  const handleOnToggleClick = useAccordionButton(eventKey, () => {\n  handleActiveKeyState();\n  });*/\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Accordion.Header, {\n      className: \"text-info bg-white\",\n      ...props,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-sm font600\",\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c = AccordionHeader;\nAccordionHeader.defaultProps = {\n  activeKey: 1,\n  eventKey: null,\n  children: null\n};\nAccordionHeader.propTypes = {\n  activeKey: PropTypes.oneOfType([any]),\n  setActiveKey: PropTypes.func.isRequired,\n  eventKey: PropTypes.oneOfType([any]),\n  children: PropTypes.oneOfType([any])\n};\nexport default AccordionHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccordionHeader\");","map":{"version":3,"sources":["/Users/admin/Documents/react-projects/hesmis-front/src/components/common/AccordionHeader.jsx"],"names":["React","PropTypes","any","Accordion","AccordionHeader","activeKey","setActiveKey","eventKey","children","props","handleActiveKeyState","defaultProps","propTypes","oneOfType","func","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,IAAoBC,GAApB,QAA+B,YAA/B;AACA,SAASC,SAAT,QAA0B,iBAA1B,C,CACA;;;;;AAEA,MAAMC,eAAe,GAAG,CAAC;AACvBC,EAAAA,SADuB;AAEvBC,EAAAA,YAFuB;AAGvBC,EAAAA,QAHuB;AAIvBC,EAAAA,QAJuB;AAKvB,KAAGC;AALoB,CAAD,KAMlB;AACJ,QAAMC,oBAAoB,GAAG,MAAM;AACjC,QAAIL,SAAS,KAAKE,QAAlB,EAA4B;AAC1BD,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,KAFD,MAEO;AACLA,MAAAA,YAAY,CAACC,QAAD,CAAZ;AACD;AACF,GAND;AAME;AACJ;AACA;AACA;;;AAEE,sBACE;AAAA,2BACE,QAAC,SAAD,CAAW,MAAX;AACE,MAAA,SAAS,EAAC,oBADZ;AAAA,SAEME,KAFN;AAAA,6BAIE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,kBAAkCD;AAAlC;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAUD,CA5BD;;KAAMJ,e;AA8BNA,eAAe,CAACO,YAAhB,GAA+B;AAC7BN,EAAAA,SAAS,EAAE,CADkB;AAE7BE,EAAAA,QAAQ,EAAE,IAFmB;AAG7BC,EAAAA,QAAQ,EAAE;AAHmB,CAA/B;AAMAJ,eAAe,CAACQ,SAAhB,GAA4B;AAC1BP,EAAAA,SAAS,EAAEJ,SAAS,CAACY,SAAV,CAAoB,CAACX,GAAD,CAApB,CADe;AAE1BI,EAAAA,YAAY,EAAEL,SAAS,CAACa,IAAV,CAAeC,UAFH;AAG1BR,EAAAA,QAAQ,EAAEN,SAAS,CAACY,SAAV,CAAoB,CAACX,GAAD,CAApB,CAHgB;AAI1BM,EAAAA,QAAQ,EAAEP,SAAS,CAACY,SAAV,CAAoB,CAACX,GAAD,CAApB;AAJgB,CAA5B;AAOA,eAAeE,eAAf","sourcesContent":["import React from 'react';\nimport PropTypes, { any } from 'prop-types';\nimport { Accordion } from 'react-bootstrap';\n//import { useAccordionButton } from 'react-bootstrap/AccordionButton';\n\nconst AccordionHeader = ({\n  activeKey,\n  setActiveKey,\n  eventKey,\n  children,\n  ...props\n}) => {\n  const handleActiveKeyState = () => {\n    if (activeKey === eventKey) {\n      setActiveKey(null);\n    } else {\n      setActiveKey(eventKey);\n    }\n  };/*\n  const handleOnToggleClick = useAccordionButton(eventKey, () => {\n    handleActiveKeyState();\n  });*/\n\n  return (\n    <>\n      <Accordion.Header\n        className=\"text-info bg-white\"\n        {...props}\n      >\n        <div className=\"text-sm font600\">{children}</div>\n      </Accordion.Header>\n    </>\n  );\n};\n\nAccordionHeader.defaultProps = {\n  activeKey: 1,\n  eventKey: null,\n  children: null,\n};\n\nAccordionHeader.propTypes = {\n  activeKey: PropTypes.oneOfType([any]),\n  setActiveKey: PropTypes.func.isRequired,\n  eventKey: PropTypes.oneOfType([any]),\n  children: PropTypes.oneOfType([any]),\n};\n\nexport default AccordionHeader;\n"]},"metadata":{},"sourceType":"module"}