{"ast":null,"code":"import { isEmpty } from 'lodash';\nimport { authActions } from '../../actions';\nimport initialState from '../../initialState';\n\nfunction auth(state = initialState.auth, actions) {\n  switch (actions.type) {\n    case authActions.LOGIN_STUDENT_REQUEST:\n      return { ...state,\n        loginError: {},\n        loginIn: true,\n        authUserError: {}\n      };\n\n    case authActions.LOGIN_STUDENT_SUCCESS:\n      return { ...state,\n        loginData: actions.data,\n        loginError: {},\n        loginIn: false\n      };\n\n    case authActions.LOGIN_STUDENT_ERROR:\n      return { ...state,\n        loginError: actions.error,\n        loginIn: false\n      };\n\n    case authActions.LOGOUT_REQUEST:\n      return { ...state,\n        loading: true,\n        loggingOut: true,\n        logoutData: {},\n        logoutError: {}\n      };\n\n    case authActions.LOGOUT_SUCCESS:\n      return { ...state,\n        loggingOut: false,\n        false: true,\n        logoutData: actions.data\n      };\n\n    case authActions.LOGOUT_ERROR:\n      return { ...state,\n        loggingOut: false,\n        false: true,\n        logoutError: actions.error\n      };\n\n    case authActions.GET_AUTH_USER_REQUEST:\n      return { ...state,\n        gettingAuthUser: true,\n        authUserError: {}\n      };\n\n    case authActions.GET_AUTH_USER_SUCCESS:\n      {\n        const authUser = actions.data;\n        let currentStudentProgramme = {};\n\n        if (!isEmpty(authUser.academic_records)) {\n          const findCurrentProgramme = authUser.academic_records.find(programme => programme.is_current_programme === true);\n          const programme = findCurrentProgramme || authUser.academic_records[0];\n          currentStudentProgramme = programme;\n        }\n\n        return { ...state,\n          gettingAuthUser: false,\n          authUser,\n          currentStudentProgramme\n        };\n      }\n\n    case authActions.GET_AUTH_USER_ERROR:\n      return { ...state,\n        gettingAuthUser: false,\n        authUserError: actions.error\n      };\n\n    case authActions.GET_STUDENT_PROGRAMMES_REQUEST:\n      return { ...state,\n        gettingStudentProgrammes: true,\n        studentProgrammeError: {}\n      };\n\n    case authActions.GET_STUDENT_PROGRAMMES_SUCCESS:\n      return { ...state,\n        gettingStudentProgrammes: false,\n        studentProgrammes: actions.data\n      };\n\n    case authActions.GET_STUDENT_PROGRAMMES_ERROR:\n      return { ...state,\n        gettingStudentProgrammes: false,\n        studentProgrammeError: actions.error\n      };\n\n    case authActions.CHANGE_PASSWORD_REQUEST:\n      return { ...state,\n        changingPassword: true,\n        changePasswordError: {}\n      };\n\n    case authActions.CHANGE_PASSWORD_SUCCESS:\n      return { ...state,\n        changingPassword: false,\n        changePasswordSuccess: actions.data\n      };\n\n    case authActions.CHANGE_PASSWORD_ERROR:\n      return { ...state,\n        changingPassword: false,\n        changePasswordError: actions.error\n      };\n\n    case authActions.REQUEST_TOKEN_REQUEST:\n      return { ...state,\n        requestingToken: true,\n        requestTokenError: {},\n        requestTokenSuccess: {}\n      };\n\n    case authActions.REQUEST_TOKEN_SUCCESS:\n      return { ...state,\n        requestingToken: false,\n        requestTokenSuccess: actions.data\n      };\n\n    case authActions.REQUEST_TOKEN_ERROR:\n      return { ...state,\n        requestingToken: false,\n        requestTokenError: actions.error\n      };\n\n    case authActions.RESET_PASSWORD_REQUEST:\n      return { ...state,\n        resettingPassword: true,\n        resetPasswordError: {},\n        resetPasswordSuccess: {}\n      };\n\n    case authActions.RESET_PASSWORD_SUCCESS:\n      return { ...state,\n        resettingPassword: false,\n        resetPasswordSuccess: actions.data\n      };\n\n    case authActions.RESET_PASSWORD_ERROR:\n      return { ...state,\n        resettingPassword: false,\n        resetPasswordError: actions.error\n      };\n\n    case authActions.GET_AUTH_USER_ACCOUNT_BALANCE_REQUEST:\n      return { ...state,\n        gettingAccountBalance: true,\n        accountBalanceError: {}\n      };\n\n    case authActions.GET_AUTH_USER_ACCOUNT_BALANCE_SUCCESS:\n      return { ...state,\n        gettingAccountBalance: false,\n        accountBalance: actions.data\n      };\n\n    case authActions.GET_AUTH_USER_ACCOUNT_BALANCE_ERROR:\n      return { ...state,\n        gettingAccountBalance: false,\n        accountBalanceError: actions.error\n      };\n\n    case authActions.SET_AUTH_USER:\n      return { ...state,\n        authUser: actions.user\n      };\n\n    case authActions.SET_CURRENT_STUDENT_PROGRAMME:\n      return { ...state,\n        currentStudentProgramme: actions.currentStudentProgramme\n      };\n\n    case authActions.REMOVE_AUTH_USER:\n      return { ...state,\n        authUser: {}\n      };\n\n    case authActions.SET_IS_AUTHENTICATED:\n      return { ...state,\n        isAuthenticated: actions.payload\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default auth;","map":{"version":3,"sources":["/Users/admin/Documents/react-projects/hesmis-front/src/config/reducers/auth/index.js"],"names":["isEmpty","authActions","initialState","auth","state","actions","type","LOGIN_STUDENT_REQUEST","loginError","loginIn","authUserError","LOGIN_STUDENT_SUCCESS","loginData","data","LOGIN_STUDENT_ERROR","error","LOGOUT_REQUEST","loading","loggingOut","logoutData","logoutError","LOGOUT_SUCCESS","false","LOGOUT_ERROR","GET_AUTH_USER_REQUEST","gettingAuthUser","GET_AUTH_USER_SUCCESS","authUser","currentStudentProgramme","academic_records","findCurrentProgramme","find","programme","is_current_programme","GET_AUTH_USER_ERROR","GET_STUDENT_PROGRAMMES_REQUEST","gettingStudentProgrammes","studentProgrammeError","GET_STUDENT_PROGRAMMES_SUCCESS","studentProgrammes","GET_STUDENT_PROGRAMMES_ERROR","CHANGE_PASSWORD_REQUEST","changingPassword","changePasswordError","CHANGE_PASSWORD_SUCCESS","changePasswordSuccess","CHANGE_PASSWORD_ERROR","REQUEST_TOKEN_REQUEST","requestingToken","requestTokenError","requestTokenSuccess","REQUEST_TOKEN_SUCCESS","REQUEST_TOKEN_ERROR","RESET_PASSWORD_REQUEST","resettingPassword","resetPasswordError","resetPasswordSuccess","RESET_PASSWORD_SUCCESS","RESET_PASSWORD_ERROR","GET_AUTH_USER_ACCOUNT_BALANCE_REQUEST","gettingAccountBalance","accountBalanceError","GET_AUTH_USER_ACCOUNT_BALANCE_SUCCESS","accountBalance","GET_AUTH_USER_ACCOUNT_BALANCE_ERROR","SET_AUTH_USER","user","SET_CURRENT_STUDENT_PROGRAMME","REMOVE_AUTH_USER","SET_IS_AUTHENTICATED","isAuthenticated","payload"],"mappings":"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","sourcesContent":["import { isEmpty } from 'lodash';\nimport { authActions } from '../../actions';\nimport initialState from '../../initialState';\n\nfunction auth(state = initialState.auth, actions) {\n  switch (actions.type) {\n    case authActions.LOGIN_STUDENT_REQUEST:\n      return {\n        ...state,\n        loginError: {},\n        loginIn: true,\n        authUserError: {},\n      };\n    case authActions.LOGIN_STUDENT_SUCCESS:\n      return {\n        ...state,\n        loginData: actions.data,\n        loginError: {},\n        loginIn: false,\n      };\n    case authActions.LOGIN_STUDENT_ERROR:\n      return {\n        ...state,\n        loginError: actions.error,\n        loginIn: false,\n      };\n    case authActions.LOGOUT_REQUEST:\n      return {\n        ...state,\n        loading: true,\n        loggingOut: true,\n        logoutData: {},\n        logoutError: {},\n      };\n    case authActions.LOGOUT_SUCCESS:\n      return {\n        ...state,\n        loggingOut: false,\n        false: true,\n        logoutData: actions.data,\n      };\n    case authActions.LOGOUT_ERROR:\n      return {\n        ...state,\n        loggingOut: false,\n        false: true,\n        logoutError: actions.error,\n      };\n\n    case authActions.GET_AUTH_USER_REQUEST:\n      return {\n        ...state,\n        gettingAuthUser: true,\n        authUserError: {},\n      };\n    case authActions.GET_AUTH_USER_SUCCESS: {\n      const authUser = actions.data;\n      let currentStudentProgramme = {};\n      if (!isEmpty(authUser.academic_records)) {\n        const findCurrentProgramme = authUser.academic_records.find(\n          (programme) => programme.is_current_programme === true\n        );\n        const programme = findCurrentProgramme || authUser.academic_records[0];\n        currentStudentProgramme = programme;\n      }\n\n      return {\n        ...state,\n        gettingAuthUser: false,\n        authUser,\n        currentStudentProgramme,\n      };\n    }\n    case authActions.GET_AUTH_USER_ERROR:\n      return {\n        ...state,\n        gettingAuthUser: false,\n        authUserError: actions.error,\n      };\n\n    case authActions.GET_STUDENT_PROGRAMMES_REQUEST:\n      return {\n        ...state,\n        gettingStudentProgrammes: true,\n        studentProgrammeError: {},\n      };\n    case authActions.GET_STUDENT_PROGRAMMES_SUCCESS:\n      return {\n        ...state,\n        gettingStudentProgrammes: false,\n        studentProgrammes: actions.data,\n      };\n    case authActions.GET_STUDENT_PROGRAMMES_ERROR:\n      return {\n        ...state,\n        gettingStudentProgrammes: false,\n        studentProgrammeError: actions.error,\n      };\n\n    case authActions.CHANGE_PASSWORD_REQUEST:\n      return {\n        ...state,\n        changingPassword: true,\n        changePasswordError: {},\n      };\n\n    case authActions.CHANGE_PASSWORD_SUCCESS:\n      return {\n        ...state,\n        changingPassword: false,\n        changePasswordSuccess: actions.data,\n      };\n\n    case authActions.CHANGE_PASSWORD_ERROR:\n      return {\n        ...state,\n        changingPassword: false,\n        changePasswordError: actions.error,\n      };\n\n    case authActions.REQUEST_TOKEN_REQUEST:\n      return {\n        ...state,\n        requestingToken: true,\n        requestTokenError: {},\n        requestTokenSuccess: {},\n      };\n\n    case authActions.REQUEST_TOKEN_SUCCESS:\n      return {\n        ...state,\n        requestingToken: false,\n        requestTokenSuccess: actions.data,\n      };\n\n    case authActions.REQUEST_TOKEN_ERROR:\n      return {\n        ...state,\n        requestingToken: false,\n        requestTokenError: actions.error,\n      };\n\n    case authActions.RESET_PASSWORD_REQUEST:\n      return {\n        ...state,\n        resettingPassword: true,\n        resetPasswordError: {},\n        resetPasswordSuccess: {},\n      };\n\n    case authActions.RESET_PASSWORD_SUCCESS:\n      return {\n        ...state,\n        resettingPassword: false,\n        resetPasswordSuccess: actions.data,\n      };\n\n    case authActions.RESET_PASSWORD_ERROR:\n      return {\n        ...state,\n        resettingPassword: false,\n        resetPasswordError: actions.error,\n      };\n\n    case authActions.GET_AUTH_USER_ACCOUNT_BALANCE_REQUEST:\n      return {\n        ...state,\n        gettingAccountBalance: true,\n        accountBalanceError: {},\n      };\n\n    case authActions.GET_AUTH_USER_ACCOUNT_BALANCE_SUCCESS:\n      return {\n        ...state,\n        gettingAccountBalance: false,\n        accountBalance: actions.data,\n      };\n\n    case authActions.GET_AUTH_USER_ACCOUNT_BALANCE_ERROR:\n      return {\n        ...state,\n        gettingAccountBalance: false,\n        accountBalanceError: actions.error,\n      };\n\n    case authActions.SET_AUTH_USER:\n      return {\n        ...state,\n        authUser: actions.user,\n      };\n\n    case authActions.SET_CURRENT_STUDENT_PROGRAMME:\n      return {\n        ...state,\n        currentStudentProgramme: actions.currentStudentProgramme,\n      };\n\n    case authActions.REMOVE_AUTH_USER:\n      return {\n        ...state,\n        authUser: {},\n      };\n\n    case authActions.SET_IS_AUTHENTICATED:\n      return {\n        ...state,\n        isAuthenticated: actions.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default auth;\n"]},"metadata":{},"sourceType":"module"}