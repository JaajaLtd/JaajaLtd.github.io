{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/react-projects/hesmis-front/src/containers/PaymentReferences/ReferenceModal.jsx\",\n    _s = $RefreshSig$();\n\nimport { isEmpty } from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, ModalBody, ModalFooter } from 'react-bootstrap';\nimport { FaCheckCircle } from 'react-icons/fa';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AlertMessage, CustomModal } from '../../components/common';\nimport { settingActions } from '../../config/actions';\nimport usePrevious from '../Hooks/usePrevious';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ReferenceModal = ({\n  switchTab\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [generatedReference, setGeneratedReference] = useState({});\n  const {\n    generateSuccess,\n    generateError\n  } = useSelector(state => state.paymentReference);\n  const showModal = useSelector(state => state.setting.showModal);\n  const prevState = usePrevious({\n    generateSuccess,\n    generateError\n  });\n  useEffect(() => {\n    if (!isEmpty(prevState) && !isEmpty(generateSuccess) && generateSuccess !== prevState.generateSuccess) {\n      setGeneratedReference(generateSuccess);\n      dispatch(settingActions.setShowModal(true));\n      if (switchTab) switchTab();\n    }\n\n    if (!isEmpty(prevState) && !isEmpty(generateError) && generateError !== prevState.generateError) {\n      var _generateError$error, _generateError$server;\n\n      setErrorMessage((generateError === null || generateError === void 0 ? void 0 : (_generateError$error = generateError.error) === null || _generateError$error === void 0 ? void 0 : _generateError$error.message) || (generateError === null || generateError === void 0 ? void 0 : (_generateError$server = generateError.server) === null || _generateError$server === void 0 ? void 0 : _generateError$server.message));\n    }\n  }, [generateSuccess, generateError]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [errorMessage && /*#__PURE__*/_jsxDEV(AlertMessage, {\n      message: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 24\n    }, this), !isEmpty(generatedReference) && showModal && /*#__PURE__*/_jsxDEV(CustomModal, {\n      backdrop: \"static\",\n      keyboard: false,\n      title: \"PAYMENT REFERENCE GENERATED SUCCESSFULLY\",\n      children: [/*#__PURE__*/_jsxDEV(ModalBody, {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-md font600er\",\n          children: [/*#__PURE__*/_jsxDEV(FaCheckCircle, {\n            className: \"text-success me-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), \"PAYMENT REFERENCE NO.:\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm font600 text-success mx-1\",\n            children: generatedReference.ura_prn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm font600er\",\n          children: [\"TOTAL AMOUNT TO PAY:\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm font600 text-success mx-1\",\n            children: `${parseInt(generatedReference.amount, 10).toLocaleString()} UGX`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xs font600er mt-2\",\n          children: [\"DATE OF EXPIRY:\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-xs font600 text-danger mx-2\",\n            children: generatedReference.expiry_date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(AlertMessage, {\n          message: \"Copy this reference number and go to your nearest Bank to make your payments.\",\n          variant: \"info\",\n          className: \"text-center font600 p-1 my-2 text-sm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n        className: \"py-2 bg-light border-top\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          size: \"sm\",\n          onClick: () => dispatch(settingActions.setShowModal(false)),\n          className: \"text-uppercase\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ReferenceModal, \"9aGqWoOjaXvdC+GfzuHTWAsND/U=\", false, function () {\n  return [useDispatch, useSelector, useSelector, usePrevious];\n});\n\n_c = ReferenceModal;\nReferenceModal.defaultProps = {\n  switchTab: null\n};\nReferenceModal.propTypes = {\n  switchTab: PropTypes.func\n};\nexport default ReferenceModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReferenceModal\");","map":{"version":3,"sources":["/Users/admin/Documents/react-projects/hesmis-front/src/containers/PaymentReferences/ReferenceModal.jsx"],"names":["isEmpty","React","useEffect","useState","PropTypes","Button","ModalBody","ModalFooter","FaCheckCircle","useDispatch","useSelector","AlertMessage","CustomModal","settingActions","usePrevious","ReferenceModal","switchTab","dispatch","errorMessage","setErrorMessage","generatedReference","setGeneratedReference","generateSuccess","generateError","state","paymentReference","showModal","setting","prevState","setShowModal","error","message","server","ura_prn","parseInt","amount","toLocaleString","expiry_date","defaultProps","propTypes","func"],"mappings":"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","sourcesContent":["import { isEmpty } from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, ModalBody, ModalFooter } from 'react-bootstrap';\nimport { FaCheckCircle } from 'react-icons/fa';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AlertMessage, CustomModal } from '../../components/common';\nimport { settingActions } from '../../config/actions';\nimport usePrevious from '../Hooks/usePrevious';\n\nconst ReferenceModal = ({ switchTab }) => {\n  const dispatch = useDispatch();\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [generatedReference, setGeneratedReference] = useState({});\n  const { generateSuccess, generateError } = useSelector(\n    (state) => state.paymentReference\n  );\n  const showModal = useSelector((state) => state.setting.showModal);\n  const prevState = usePrevious({ generateSuccess, generateError });\n\n  useEffect(() => {\n    if (\n      !isEmpty(prevState) &&\n      !isEmpty(generateSuccess) &&\n      generateSuccess !== prevState.generateSuccess\n    ) {\n      setGeneratedReference(generateSuccess);\n      dispatch(settingActions.setShowModal(true));\n      if (switchTab) switchTab();\n    }\n    if (\n      !isEmpty(prevState) &&\n      !isEmpty(generateError) &&\n      generateError !== prevState.generateError\n    ) {\n      setErrorMessage(\n        generateError?.error?.message || generateError?.server?.message\n      );\n    }\n  }, [generateSuccess, generateError]);\n\n  return (\n    <>\n      {errorMessage && <AlertMessage message={errorMessage} />}\n      {!isEmpty(generatedReference) && showModal && (\n        <CustomModal\n          backdrop=\"static\"\n          keyboard={false}\n          title=\"PAYMENT REFERENCE GENERATED SUCCESSFULLY\"\n        >\n          <ModalBody className=\"text-center\">\n            <div className=\"text-md font600er\">\n              <FaCheckCircle className=\"text-success me-1\" />\n              PAYMENT REFERENCE NO.:\n              <span className=\"text-sm font600 text-success mx-1\">\n                {generatedReference.ura_prn}\n              </span>\n            </div>\n\n            <div className=\"text-sm font600er\">\n              TOTAL AMOUNT TO PAY:\n              <span className=\"text-sm font600 text-success mx-1\">\n                {`${parseInt(\n                  generatedReference.amount,\n                  10\n                ).toLocaleString()} UGX`}\n              </span>\n            </div>\n\n            <div className=\"text-xs font600er mt-2\">\n              DATE OF EXPIRY:\n              <span className=\"text-xs font600 text-danger mx-2\">\n                {generatedReference.expiry_date}\n              </span>\n            </div>\n\n            <AlertMessage\n              message=\"Copy this reference number and go to your nearest Bank to make your payments.\"\n              variant=\"info\"\n              className=\"text-center font600 p-1 my-2 text-sm\"\n            />\n          </ModalBody>\n          <ModalFooter className=\"py-2 bg-light border-top\">\n            <Button\n              variant=\"danger\"\n              size=\"sm\"\n              onClick={() => dispatch(settingActions.setShowModal(false))}\n              className=\"text-uppercase\"\n            >\n              Close\n            </Button>\n          </ModalFooter>\n        </CustomModal>\n      )}\n    </>\n  );\n};\n\nReferenceModal.defaultProps = {\n  switchTab: null,\n};\n\nReferenceModal.propTypes = {\n  switchTab: PropTypes.func,\n};\n\nexport default ReferenceModal;\n"]},"metadata":{},"sourceType":"module"}