{"ast":null,"code":"import { takeLatest, fork, put } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { authActions } from '../../actions';\nimport { clearToken } from '../../services/storageService';\n\nfunction* loginStudent(actions) {\n  try {\n    const response = yield axios({\n      url: '/student-portal/auth/login',\n      method: 'POST',\n      data: actions.data\n    });\n    yield put({\n      type: authActions.LOGIN_STUDENT_SUCCESS,\n      data: response\n    });\n    yield put({\n      type: authActions.GET_AUTH_USER_REQUEST\n    });\n    yield put({\n      type: authActions.GET_AUTH_USER_ACCOUNT_BALANCE_REQUEST\n    });\n  } catch (error) {\n    yield put({\n      type: authActions.LOGIN_STUDENT_ERROR,\n      error: error.data\n    });\n  }\n}\n\nfunction* logoutUser() {\n  try {\n    const response = yield axios({\n      url: '/student-portal/auth/logout',\n      method: 'POST'\n    });\n    clearToken();\n    yield put({\n      type: authActions.LOGOUT_SUCCESS,\n      data: response\n    });\n    yield put({\n      type: authActions.REMOVE_AUTH_USER\n    });\n    yield put({\n      type: authActions.SET_IS_AUTHENTICATED,\n      payload: false\n    });\n  } catch (error) {\n    if (error.status === 403 || error.status === 401) clearToken();\n    yield put({\n      type: authActions.LOGOUT_ERROR,\n      error: error.data\n    });\n  }\n}\n\nfunction* fetchAuthUser() {\n  try {\n    const response = yield axios({\n      url: '/student-portal/auth/profile',\n      method: 'GET'\n    });\n    yield put({\n      type: authActions.GET_AUTH_USER_SUCCESS,\n      data: response.data\n    });\n    yield put({\n      type: authActions.SET_AUTH_USER,\n      user: response.data\n    });\n    yield put({\n      type: authActions.GET_AUTH_USER_ACCOUNT_BALANCE_REQUEST\n    });\n  } catch (error) {\n    yield put({\n      type: authActions.GET_AUTH_USER_ERROR,\n      error: error.data\n    });\n  }\n}\n\nfunction* getAuthUserBalance() {\n  try {\n    const response = yield axios({\n      url: '/student-portal/auth/account-balance',\n      method: 'GET'\n    });\n    yield put({\n      type: authActions.GET_AUTH_USER_ACCOUNT_BALANCE_SUCCESS,\n      data: response.accountBalance\n    });\n  } catch (error) {\n    yield put({\n      type: authActions.GET_AUTH_USER_ACCOUNT_BALANCE_ERROR,\n      error: error.data\n    });\n  }\n}\n\nfunction* getStudentProgrammes() {\n  try {\n    const response = yield axios({\n      url: '/student-portal/auth/academic-records',\n      method: 'GET'\n    });\n    yield put({\n      type: authActions.GET_STUDENT_PROGRAMMES_SUCCESS,\n      data: response.data\n    });\n  } catch (error) {\n    yield put({\n      type: authActions.GET_STUDENT_PROGRAMMES_ERROR,\n      error: error.data\n    });\n  }\n}\n\nfunction* changePassword(action) {\n  try {\n    const response = yield axios({\n      url: `/student-portal/auth/change-password`,\n      method: 'PUT',\n      data: action.data\n    });\n    yield put({\n      type: authActions.CHANGE_PASSWORD_SUCCESS,\n      data: response\n    });\n  } catch (error) {\n    yield put({\n      type: authActions.CHANGE_PASSWORD_ERROR,\n      error: error.data\n    });\n  }\n}\n\nfunction* requestToken(action) {\n  try {\n    const response = yield axios({\n      url: `/student-portal/auth/request-token`,\n      method: 'POST',\n      data: action.data\n    });\n    yield put({\n      type: authActions.REQUEST_TOKEN_SUCCESS,\n      data: response\n    });\n  } catch (error) {\n    yield put({\n      type: authActions.REQUEST_TOKEN_ERROR,\n      error: error.data\n    });\n  }\n}\n\nfunction* resetPassword(action) {\n  try {\n    const response = yield axios({\n      url: `/student-portal/auth/reset-password`,\n      method: 'PUT',\n      data: action.data\n    });\n    yield put({\n      type: authActions.RESET_PASSWORD_SUCCESS,\n      data: response\n    });\n  } catch (error) {\n    yield put({\n      type: authActions.RESET_PASSWORD_ERROR,\n      error: error.data\n    });\n  }\n}\n\nfunction* watchLoginStudent() {\n  yield takeLatest(authActions.LOGIN_STUDENT_REQUEST, loginStudent);\n}\n\nfunction* watchLogout() {\n  yield takeLatest(authActions.LOGOUT_REQUEST, logoutUser);\n}\n\nfunction* watchFetchAuthUser() {\n  yield takeLatest(authActions.GET_AUTH_USER_REQUEST, fetchAuthUser);\n}\n\nfunction* watchGetStudentProgrammes() {\n  yield takeLatest(authActions.GET_STUDENT_PROGRAMMES_REQUEST, getStudentProgrammes);\n}\n\nfunction* watchGetStudentBalance() {\n  yield takeLatest(authActions.GET_AUTH_USER_ACCOUNT_BALANCE_REQUEST, getAuthUserBalance);\n}\n\nfunction* watchChangePassword() {\n  yield takeLatest(authActions.CHANGE_PASSWORD_REQUEST, changePassword);\n}\n\nfunction* watchRequestToken() {\n  yield takeLatest(authActions.REQUEST_TOKEN_REQUEST, requestToken);\n}\n\nfunction* watchResetPassword() {\n  yield takeLatest(authActions.RESET_PASSWORD_REQUEST, resetPassword);\n}\n\nconst forkFunctions = [fork(watchLoginStudent), fork(watchLogout), fork(watchFetchAuthUser), fork(watchGetStudentProgrammes), fork(watchGetStudentBalance), fork(watchChangePassword), fork(watchRequestToken), fork(watchResetPassword)];\nexport default forkFunctions;","map":{"version":3,"sources":["/Users/admin/Documents/react-projects/hesmis/hesmis-front/src/config/saga/auth/index.js"],"names":["takeLatest","fork","put","axios","authActions","clearToken","loginStudent","actions","response","url","method","data","type","LOGIN_STUDENT_SUCCESS","GET_AUTH_USER_REQUEST","GET_AUTH_USER_ACCOUNT_BALANCE_REQUEST","error","LOGIN_STUDENT_ERROR","logoutUser","LOGOUT_SUCCESS","REMOVE_AUTH_USER","SET_IS_AUTHENTICATED","payload","status","LOGOUT_ERROR","fetchAuthUser","GET_AUTH_USER_SUCCESS","SET_AUTH_USER","user","GET_AUTH_USER_ERROR","getAuthUserBalance","GET_AUTH_USER_ACCOUNT_BALANCE_SUCCESS","accountBalance","GET_AUTH_USER_ACCOUNT_BALANCE_ERROR","getStudentProgrammes","GET_STUDENT_PROGRAMMES_SUCCESS","GET_STUDENT_PROGRAMMES_ERROR","changePassword","action","CHANGE_PASSWORD_SUCCESS","CHANGE_PASSWORD_ERROR","requestToken","REQUEST_TOKEN_SUCCESS","REQUEST_TOKEN_ERROR","resetPassword","RESET_PASSWORD_SUCCESS","RESET_PASSWORD_ERROR","watchLoginStudent","LOGIN_STUDENT_REQUEST","watchLogout","LOGOUT_REQUEST","watchFetchAuthUser","watchGetStudentProgrammes","GET_STUDENT_PROGRAMMES_REQUEST","watchGetStudentBalance","watchChangePassword","CHANGE_PASSWORD_REQUEST","watchRequestToken","REQUEST_TOKEN_REQUEST","watchResetPassword","RESET_PASSWORD_REQUEST","forkFunctions"],"mappings":"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","sourcesContent":["import { takeLatest, fork, put } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { authActions } from '../../actions';\nimport { clearToken } from '../../services/storageService';\n\nfunction* loginStudent(actions) {\n  try {\n    const response = yield axios({\n      url: '/student-portal/auth/login',\n      method: 'POST',\n      data: actions.data,\n    });\n    yield put({\n      type: authActions.LOGIN_STUDENT_SUCCESS,\n      data: response,\n    });\n    yield put({\n      type: authActions.GET_AUTH_USER_REQUEST,\n    });\n    yield put({\n      type: authActions.GET_AUTH_USER_ACCOUNT_BALANCE_REQUEST,\n    });\n  } catch (error) {\n    yield put({\n      type: authActions.LOGIN_STUDENT_ERROR,\n      error: error.data,\n    });\n  }\n}\n\nfunction* logoutUser() {\n  try {\n    const response = yield axios({\n      url: '/student-portal/auth/logout',\n      method: 'POST',\n    });\n    clearToken();\n    yield put({\n      type: authActions.LOGOUT_SUCCESS,\n      data: response,\n    });\n    yield put({\n      type: authActions.REMOVE_AUTH_USER,\n    });\n    yield put({\n      type: authActions.SET_IS_AUTHENTICATED,\n      payload: false,\n    });\n  } catch (error) {\n    if (error.status === 403 || error.status === 401) clearToken();\n    yield put({\n      type: authActions.LOGOUT_ERROR,\n      error: error.data,\n    });\n  }\n}\n\nfunction* fetchAuthUser() {\n  try {\n    const response = yield axios({\n      url: '/student-portal/auth/profile',\n      method: 'GET',\n    });\n    yield put({\n      type: authActions.GET_AUTH_USER_SUCCESS,\n      data: response.data,\n    });\n    yield put({\n      type: authActions.SET_AUTH_USER,\n      user: response.data,\n    });\n    yield put({\n      type: authActions.GET_AUTH_USER_ACCOUNT_BALANCE_REQUEST,\n    });\n  } catch (error) {\n    yield put({\n      type: authActions.GET_AUTH_USER_ERROR,\n      error: error.data,\n    });\n  }\n}\n\nfunction* getAuthUserBalance() {\n  try {\n    const response = yield axios({\n      url: '/student-portal/auth/account-balance',\n      method: 'GET',\n    });\n    yield put({\n      type: authActions.GET_AUTH_USER_ACCOUNT_BALANCE_SUCCESS,\n      data: response.accountBalance,\n    });\n  } catch (error) {\n    yield put({\n      type: authActions.GET_AUTH_USER_ACCOUNT_BALANCE_ERROR,\n      error: error.data,\n    });\n  }\n}\n\nfunction* getStudentProgrammes() {\n  try {\n    const response = yield axios({\n      url: '/student-portal/auth/academic-records',\n      method: 'GET',\n    });\n    yield put({\n      type: authActions.GET_STUDENT_PROGRAMMES_SUCCESS,\n      data: response.data,\n    });\n  } catch (error) {\n    yield put({\n      type: authActions.GET_STUDENT_PROGRAMMES_ERROR,\n      error: error.data,\n    });\n  }\n}\n\nfunction* changePassword(action) {\n  try {\n    const response = yield axios({\n      url: `/student-portal/auth/change-password`,\n      method: 'PUT',\n      data: action.data,\n    });\n    yield put({\n      type: authActions.CHANGE_PASSWORD_SUCCESS,\n      data: response,\n    });\n  } catch (error) {\n    yield put({\n      type: authActions.CHANGE_PASSWORD_ERROR,\n      error: error.data,\n    });\n  }\n}\n\nfunction* requestToken(action) {\n  try {\n    const response = yield axios({\n      url: `/student-portal/auth/request-token`,\n      method: 'POST',\n      data: action.data,\n    });\n    yield put({\n      type: authActions.REQUEST_TOKEN_SUCCESS,\n      data: response,\n    });\n  } catch (error) {\n    yield put({\n      type: authActions.REQUEST_TOKEN_ERROR,\n      error: error.data,\n    });\n  }\n}\n\nfunction* resetPassword(action) {\n  try {\n    const response = yield axios({\n      url: `/student-portal/auth/reset-password`,\n      method: 'PUT',\n      data: action.data,\n    });\n    yield put({\n      type: authActions.RESET_PASSWORD_SUCCESS,\n      data: response,\n    });\n  } catch (error) {\n    yield put({\n      type: authActions.RESET_PASSWORD_ERROR,\n      error: error.data,\n    });\n  }\n}\n\nfunction* watchLoginStudent() {\n  yield takeLatest(authActions.LOGIN_STUDENT_REQUEST, loginStudent);\n}\n\nfunction* watchLogout() {\n  yield takeLatest(authActions.LOGOUT_REQUEST, logoutUser);\n}\n\nfunction* watchFetchAuthUser() {\n  yield takeLatest(authActions.GET_AUTH_USER_REQUEST, fetchAuthUser);\n}\n\nfunction* watchGetStudentProgrammes() {\n  yield takeLatest(\n    authActions.GET_STUDENT_PROGRAMMES_REQUEST,\n    getStudentProgrammes\n  );\n}\n\nfunction* watchGetStudentBalance() {\n  yield takeLatest(\n    authActions.GET_AUTH_USER_ACCOUNT_BALANCE_REQUEST,\n    getAuthUserBalance\n  );\n}\n\nfunction* watchChangePassword() {\n  yield takeLatest(authActions.CHANGE_PASSWORD_REQUEST, changePassword);\n}\n\nfunction* watchRequestToken() {\n  yield takeLatest(authActions.REQUEST_TOKEN_REQUEST, requestToken);\n}\n\nfunction* watchResetPassword() {\n  yield takeLatest(authActions.RESET_PASSWORD_REQUEST, resetPassword);\n}\n\nconst forkFunctions = [\n  fork(watchLoginStudent),\n  fork(watchLogout),\n  fork(watchFetchAuthUser),\n  fork(watchGetStudentProgrammes),\n  fork(watchGetStudentBalance),\n  fork(watchChangePassword),\n  fork(watchRequestToken),\n  fork(watchResetPassword),\n];\n\nexport default forkFunctions;\n"]},"metadata":{},"sourceType":"module"}