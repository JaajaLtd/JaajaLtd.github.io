{"ast":null,"code":"import _objectSpread from\"/Users/admin/Documents/react-projects/hesmis/hesmis-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{createStore,applyMiddleware}from'redux';import createSagaMiddleware from'redux-saga';import logger from'redux-logger';import sagaMonitor from'@redux-saga/simple-saga-monitor';import rootReducer from'../reducers';export default function store(){var sagaMiddleware=createSagaMiddleware({sagaMonitor:sagaMonitor});if(process.env.NODE_ENV==='production'){return _objectSpread(_objectSpread({},createStore(rootReducer,applyMiddleware(sagaMiddleware))),{},{runSaga:sagaMiddleware.run,devTools:false});}return _objectSpread(_objectSpread({},createStore(rootReducer,applyMiddleware(sagaMiddleware,logger))),{},{runSaga:sagaMiddleware.run,devTools:true});}","map":{"version":3,"sources":["/Users/admin/Documents/react-projects/hesmis/hesmis-front/src/config/store/index.js"],"names":["createStore","applyMiddleware","createSagaMiddleware","logger","sagaMonitor","rootReducer","store","sagaMiddleware","process","env","NODE_ENV","runSaga","run","devTools"],"mappings":"+KAAA,OAASA,WAAT,CAAsBC,eAAtB,KAA6C,OAA7C,CACA,MAAOC,CAAAA,oBAAP,KAAiC,YAAjC,CACA,MAAOC,CAAAA,MAAP,KAAmB,cAAnB,CACA,MAAOC,CAAAA,WAAP,KAAwB,iCAAxB,CACA,MAAOC,CAAAA,WAAP,KAAwB,aAAxB,CAEA,cAAe,SAASC,CAAAA,KAAT,EAAiB,CAC9B,GAAMC,CAAAA,cAAc,CAAGL,oBAAoB,CAAC,CAAEE,WAAW,CAAXA,WAAF,CAAD,CAA3C,CAEA,GAAII,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAyB,YAA7B,CAA2C,CACzC,sCACKV,WAAW,CAACK,WAAD,CAAcJ,eAAe,CAACM,cAAD,CAA7B,CADhB,MAEEI,OAAO,CAAEJ,cAAc,CAACK,GAF1B,CAGEC,QAAQ,CAAE,KAHZ,GAKD,CACD,sCACKb,WAAW,CAACK,WAAD,CAAcJ,eAAe,CAACM,cAAD,CAAiBJ,MAAjB,CAA7B,CADhB,MAEEQ,OAAO,CAAEJ,cAAc,CAACK,GAF1B,CAGEC,QAAQ,CAAE,IAHZ,GAKD","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\nimport sagaMonitor from '@redux-saga/simple-saga-monitor';\nimport rootReducer from '../reducers';\n\nexport default function store() {\n  const sagaMiddleware = createSagaMiddleware({ sagaMonitor });\n\n  if (process.env.NODE_ENV === 'production') {\n    return {\n      ...createStore(rootReducer, applyMiddleware(sagaMiddleware)),\n      runSaga: sagaMiddleware.run,\n      devTools: false,\n    };\n  }\n  return {\n    ...createStore(rootReducer, applyMiddleware(sagaMiddleware, logger)),\n    runSaga: sagaMiddleware.run,\n    devTools: true,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}