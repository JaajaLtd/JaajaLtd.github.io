{"ast":null,"code":"import _slicedToArray from\"/Users/admin/Documents/react-projects/hesmis/hesmis-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{isEmpty}from'lodash';import React,{useEffect,useState}from'react';import{Card}from'react-bootstrap';import{useDispatch,useSelector}from'react-redux';import{SelectInput}from'../../components/common';import{authActions}from'../../config/actions';import{formatProgrammes}from'../../helpers/dataFormatter';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ProgrammeTab=function ProgrammeTab(){var dispatch=useDispatch();var _useSelector=useSelector(function(state){return state.auth;}),authUser=_useSelector.authUser,currentStudentProgramme=_useSelector.currentStudentProgramme;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),programmeOptions=_useState2[0],setProgrammeOption=_useState2[1];var _useState3=useState(currentStudentProgramme.id),_useState4=_slicedToArray(_useState3,2),selectedProgramme=_useState4[0],setSelectedProgramme=_useState4[1];useEffect(function(){dispatch(authActions.getStudentProgrammes());},[]);var setCurrentStudentProgramme=function setCurrentStudentProgramme(programme){dispatch(authActions.setCurrentStudentProgramme(programme,'programme_id'));};useEffect(function(){if(authUser){setProgrammeOption(formatProgrammes(authUser.academic_records||[]));if(!isEmpty(authUser.academic_records)){var findCurrentProgramme=authUser.academic_records.find(function(programme){return programme.is_current_programme===true;});var programme=findCurrentProgramme||authUser.academic_records[0];setCurrentStudentProgramme(programme);setSelectedProgramme(programme.programme_id);}}},[authUser]);var handleChangeProgramme=function handleChangeProgramme(e){var value=e.target.value;if(value&&!isEmpty(authUser.academic_records)){setSelectedProgramme(value);var findProgramme=authUser.academic_records.find(function(programme){return parseInt(programme.programme_id,10)===parseInt(value,10);});if(findProgramme)setCurrentStudentProgramme(findProgramme);}};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Card.Header,{className:\"py-2 px-3 border-0 bg-light\",children:programmeOptions.length>1?/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(SelectInput,{type:\"select\",selectOptions:programmeOptions,onChange:handleChangeProgramme,value:selectedProgramme,name:\"current_programme\",label:\"PROGRAMME:\",inline:true})}):/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm font500 my-auto\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-primary me-1\",children:\"PROGRAMME:\"}),\"(\".concat(currentStudentProgramme.programme_code,\") - \").concat(currentStudentProgramme.programme_title)]})})});};export default ProgrammeTab;","map":{"version":3,"sources":["/Users/admin/Documents/react-projects/hesmis/hesmis-front/src/containers/Dashboard/ProgrammeTab.jsx"],"names":["isEmpty","React","useEffect","useState","Card","useDispatch","useSelector","SelectInput","authActions","formatProgrammes","ProgrammeTab","dispatch","state","auth","authUser","currentStudentProgramme","programmeOptions","setProgrammeOption","id","selectedProgramme","setSelectedProgramme","getStudentProgrammes","setCurrentStudentProgramme","programme","academic_records","findCurrentProgramme","find","is_current_programme","programme_id","handleChangeProgramme","e","value","target","findProgramme","parseInt","length","programme_code","programme_title"],"mappings":"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","sourcesContent":["import { isEmpty } from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport { Card } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { SelectInput } from '../../components/common';\nimport { authActions } from '../../config/actions';\nimport { formatProgrammes } from '../../helpers/dataFormatter';\n\nconst ProgrammeTab = () => {\n  const dispatch = useDispatch();\n  const { authUser, currentStudentProgramme } = useSelector(\n    (state) => state.auth\n  );\n  const [programmeOptions, setProgrammeOption] = useState([]);\n  const [selectedProgramme, setSelectedProgramme] = useState(\n    currentStudentProgramme.id\n  );\n\n  useEffect(() => {\n    dispatch(authActions.getStudentProgrammes());\n  }, []);\n\n  const setCurrentStudentProgramme = (programme) => {\n    dispatch(authActions.setCurrentStudentProgramme(programme, 'programme_id'));\n  };\n\n  useEffect(() => {\n    if (authUser) {\n      setProgrammeOption(formatProgrammes(authUser.academic_records || []));\n      if (!isEmpty(authUser.academic_records)) {\n        const findCurrentProgramme = authUser.academic_records.find(\n          (programme) => programme.is_current_programme === true\n        );\n        const programme = findCurrentProgramme || authUser.academic_records[0];\n        setCurrentStudentProgramme(programme);\n        setSelectedProgramme(programme.programme_id);\n      }\n    }\n  }, [authUser]);\n\n  const handleChangeProgramme = (e) => {\n    const { value } = e.target;\n    if (value && !isEmpty(authUser.academic_records)) {\n      setSelectedProgramme(value);\n      const findProgramme = authUser.academic_records.find(\n        (programme) =>\n          parseInt(programme.programme_id, 10) === parseInt(value, 10)\n      );\n      if (findProgramme) setCurrentStudentProgramme(findProgramme);\n    }\n  };\n\n  return (\n    <>\n      <Card.Header className=\"py-2 px-3 border-0 bg-light\">\n        {programmeOptions.length > 1 ? (\n          <>\n            <SelectInput\n              type=\"select\"\n              selectOptions={programmeOptions}\n              onChange={handleChangeProgramme}\n              value={selectedProgramme}\n              name=\"current_programme\"\n              label=\"PROGRAMME:\"\n              inline\n            />\n          </>\n        ) : (\n          <div className=\"text-sm font500 my-auto\">\n            <span className=\"text-primary me-1\">PROGRAMME:</span>\n            {`(${currentStudentProgramme.programme_code}) - ${currentStudentProgramme.programme_title}`}\n          </div>\n        )}\n      </Card.Header>\n    </>\n  );\n};\n\nexport default ProgrammeTab;\n"]},"metadata":{},"sourceType":"module"}