{"ast":null,"code":"import _slicedToArray from\"/Users/admin/Documents/react-projects/hesmis/hesmis-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{isEmpty}from'lodash';import React,{useState}from'react';import{Card,Col,Row}from'react-bootstrap';import{useDispatch,useSelector}from'react-redux';import{SubmitButton}from'../../components/common';import{settingActions}from'../../config/actions';import RegistrationStatusPopUp from'./RegistrationStatusPopUp';import SelectedCourseUnits from'./SelectedCourseUnits';import StudyYearCourseUnits from'./StudyYearCourseUnits';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var RegistrationForm=function RegistrationForm(_ref){var registrationStatusOptions=_ref.registrationStatusOptions,courseUnitsByStudyYear=_ref.courseUnitsByStudyYear,selectedCourseUnits=_ref.selectedCourseUnits,setSelectedCourseUnits=_ref.setSelectedCourseUnits,registeringStudent=_ref.registeringStudent,onClickRegisterButton=_ref.onClickRegisterButton;var dispatch=useDispatch();var _useState=useState(null),_useState2=_slicedToArray(_useState,2),rowData=_useState2[0],setRowData=_useState2[1];var showModal=useSelector(function(state){return state.setting.showModal;});var findCourseUnit=function findCourseUnit(row){return selectedCourseUnits.find(function(courseUnit){return courseUnit.course_unit_id===row.course_unit_id;});};var setDataAndOpenPopUp=function setDataAndOpenPopUp(data){setRowData(data);dispatch(settingActions.setShowModal(true));};var setSelectedRowData=function setSelectedRowData(data){var courseExists=findCourseUnit(data);if(courseExists){setSelectedCourseUnits(selectedCourseUnits.filter(function(courseUnit){return courseUnit.course_unit_id!==courseExists.course_unit_id;}));}else{setDataAndOpenPopUp(data);}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{md:6,children:/*#__PURE__*/_jsx(Card,{className:\"rounded-0 border-bottom border-right-0 border-left-0 border-top-0\",children:/*#__PURE__*/_jsx(Card.Body,{className:\"p-0\",children:courseUnitsByStudyYear.map(function(studyYearCourse){return/*#__PURE__*/_jsxs(Card,{className:\"border-left border-right border-top-0 border-bottom-0\",children:[/*#__PURE__*/_jsx(Card.Header,{className:\"py-1 text-xs border-top bg-white font600 text-info\",children:\"\".concat(studyYearCourse.study_year,\" - \").concat(studyYearCourse.semester)}),/*#__PURE__*/_jsx(Card.Body,{className:\"p-0\",children:/*#__PURE__*/_jsx(StudyYearCourseUnits,{studyYearCourse:studyYearCourse,findCourseUnit:findCourseUnit,setDataAndOpenPopUp:setDataAndOpenPopUp,setSelectedRowData:setSelectedRowData,selectedCourseUnits:selectedCourseUnits})})]},studyYearCourse.study_year);})})})}),/*#__PURE__*/_jsxs(Col,{md:6,children:[/*#__PURE__*/_jsx(SelectedCourseUnits,{setSelectedCourseUnits:setSelectedCourseUnits,selectedCourseUnits:selectedCourseUnits,setDataAndOpenPopUp:setDataAndOpenPopUp}),!isEmpty(selectedCourseUnits)&&/*#__PURE__*/_jsx(\"div\",{className:\"my-4 text-right\",children:/*#__PURE__*/_jsx(SubmitButton,{text:\"Register Now\",loading:registeringStudent,onClick:onClickRegisterButton,loadingText:\"Registering...\"})})]})]}),showModal&&!isEmpty(rowData)&&/*#__PURE__*/_jsx(RegistrationStatusPopUp,{setSelectedRow:setSelectedCourseUnits,selectedCourseUnits:selectedCourseUnits,rowData:rowData,registrationStatusOptions:registrationStatusOptions})]});};RegistrationForm.defaultProps={registrationStatusOptions:[],courseUnitsByStudyYear:[],selectedCourseUnits:[],registeringStudent:[]};export default RegistrationForm;","map":{"version":3,"sources":["/Users/admin/Documents/react-projects/hesmis/hesmis-front/src/containers/RegistrationHistory/RegistrationForm.jsx"],"names":["isEmpty","React","useState","Card","Col","Row","useDispatch","useSelector","SubmitButton","settingActions","RegistrationStatusPopUp","SelectedCourseUnits","StudyYearCourseUnits","RegistrationForm","registrationStatusOptions","courseUnitsByStudyYear","selectedCourseUnits","setSelectedCourseUnits","registeringStudent","onClickRegisterButton","dispatch","rowData","setRowData","showModal","state","setting","findCourseUnit","row","find","courseUnit","course_unit_id","setDataAndOpenPopUp","data","setShowModal","setSelectedRowData","courseExists","filter","map","studyYearCourse","study_year","semester","defaultProps"],"mappings":"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","sourcesContent":["import { isEmpty } from 'lodash';\nimport PropTypes, { array } from 'prop-types';\nimport React, { useState } from 'react';\nimport { Card, Col, Row } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { SubmitButton } from '../../components/common';\nimport { settingActions } from '../../config/actions';\nimport RegistrationStatusPopUp from './RegistrationStatusPopUp';\nimport SelectedCourseUnits from './SelectedCourseUnits';\nimport StudyYearCourseUnits from './StudyYearCourseUnits';\n\nconst RegistrationForm = ({\n  registrationStatusOptions,\n  courseUnitsByStudyYear,\n  selectedCourseUnits,\n  setSelectedCourseUnits,\n  registeringStudent,\n  onClickRegisterButton,\n}) => {\n  const dispatch = useDispatch();\n  const [rowData, setRowData] = useState(null);\n  const showModal = useSelector((state) => state.setting.showModal);\n\n  const findCourseUnit = (row) =>\n    selectedCourseUnits.find(\n      (courseUnit) => courseUnit.course_unit_id === row.course_unit_id\n    );\n\n  const setDataAndOpenPopUp = (data) => {\n    setRowData(data);\n    dispatch(settingActions.setShowModal(true));\n  };\n\n  const setSelectedRowData = (data) => {\n    const courseExists = findCourseUnit(data);\n    if (courseExists) {\n      setSelectedCourseUnits(\n        selectedCourseUnits.filter(\n          (courseUnit) =>\n            courseUnit.course_unit_id !== courseExists.course_unit_id\n        )\n      );\n    } else {\n      setDataAndOpenPopUp(data);\n    }\n  };\n\n  return (\n    <>\n      <Row>\n        <Col md={6}>\n          <Card className=\"rounded-0 border-bottom border-right-0 border-left-0 border-top-0\">\n            <Card.Body className=\"p-0\">\n              {courseUnitsByStudyYear.map((studyYearCourse) => (\n                <Card\n                  className=\"border-left border-right border-top-0 border-bottom-0\"\n                  key={studyYearCourse.study_year}\n                >\n                  <Card.Header className=\"py-1 text-xs border-top bg-white font600 text-info\">\n                    {`${studyYearCourse.study_year} - ${studyYearCourse.semester}`}\n                  </Card.Header>\n                  <Card.Body className=\"p-0\">\n                    <StudyYearCourseUnits\n                      studyYearCourse={studyYearCourse}\n                      findCourseUnit={findCourseUnit}\n                      setDataAndOpenPopUp={setDataAndOpenPopUp}\n                      setSelectedRowData={setSelectedRowData}\n                      selectedCourseUnits={selectedCourseUnits}\n                    />\n                  </Card.Body>\n                </Card>\n              ))}\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col md={6}>\n          <SelectedCourseUnits\n            setSelectedCourseUnits={setSelectedCourseUnits}\n            selectedCourseUnits={selectedCourseUnits}\n            setDataAndOpenPopUp={setDataAndOpenPopUp}\n          />\n          {!isEmpty(selectedCourseUnits) && (\n            <div className=\"my-4 text-right\">\n              <SubmitButton\n                text=\"Register Now\"\n                loading={registeringStudent}\n                onClick={onClickRegisterButton}\n                loadingText=\"Registering...\"\n              />\n            </div>\n          )}\n        </Col>\n      </Row>\n      {showModal && !isEmpty(rowData) && (\n        <RegistrationStatusPopUp\n          setSelectedRow={setSelectedCourseUnits}\n          selectedCourseUnits={selectedCourseUnits}\n          rowData={rowData}\n          registrationStatusOptions={registrationStatusOptions}\n        />\n      )}\n    </>\n  );\n};\n\nRegistrationForm.defaultProps = {\n  registrationStatusOptions: [],\n  courseUnitsByStudyYear: [],\n  selectedCourseUnits: [],\n  registeringStudent: [],\n};\n\nRegistrationForm.propTypes = {\n  registrationStatusOptions: PropTypes.oneOfType([array]),\n  courseUnitsByStudyYear: PropTypes.oneOfType([array]),\n  selectedCourseUnits: PropTypes.oneOfType([array]),\n  setSelectedCourseUnits: PropTypes.func.isRequired,\n  registeringStudent: PropTypes.oneOfType([array]),\n  onClickRegisterButton: PropTypes.func.isRequired,\n};\n\nexport default RegistrationForm;\n"]},"metadata":{},"sourceType":"module"}