{"ast":null,"code":"import _objectSpread from\"/Users/admin/Documents/react-projects/hesmis/hesmis-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/Users/admin/Documents/react-projects/hesmis/hesmis-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/admin/Documents/react-projects/hesmis/hesmis-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{get,isEmpty,sum,sumBy}from'lodash';import React,{Fragment,useEffect,useState}from'react';import{Card,Col,Form,Row}from'react-bootstrap';import{useForm}from'react-hook-form';import{FaExclamationCircle}from'react-icons/fa';import{useDispatch,useSelector}from'react-redux';import{AlertMessage,InputText,ReloadButton,SubmitButton}from'../../components/common';import{paymentActions,paymentReferenceActions}from'../../config/actions';import{getInvoiceAmount}from'./helper';import UnPaidInvoices from'./UnPaidInvoices';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var GeneratePaymentReference=function GeneratePaymentReference(){var dispatch=useDispatch();var _useForm=useForm(),register=_useForm.register,errors=_useForm.errors,handleSubmit=_useForm.handleSubmit;var _useState=useState('future-payments'),_useState2=_slicedToArray(_useState,2),invoiceType=_useState2[0],setInvoiceType=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),totalInvoiceDue=_useState4[0],setTotalInvoiceDue=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),allUnPaidInvoices=_useState6[0],setAllUnPaidInvoices=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),selectedRows=_useState8[0],setSelectedRows=_useState8[1];var _useSelector=useSelector(function(state){return state.myInvoice;}),invoices=_useSelector.invoices,loading=_useSelector.loading;var _useSelector2=useSelector(function(state){return state.paymentReference;}),generatingPaymentReference=_useSelector2.generatingPaymentReference;// const paymentMode = watch('payment_mode', null);\nvar getInvoices=function getInvoices(){return dispatch(paymentActions.getMyInvoices());};useEffect(function(){if(isEmpty(invoices))getInvoices();},[]);useEffect(function(){if(!isEmpty(invoices)){var invoiceAmountsDue=0;var unPaidInvoices=[];invoices.forEach(function(invoice){var _invoice$tuition_invo,_invoice$functional_f,_invoice$manual_invoi,_invoice$other_fees_i;var tuitionDue=sumBy(invoice.tuition_invoices,'amount_due');var functionalDue=sumBy(invoice.functional_fees_invoices,'amount_due');var otherFeesDue=sumBy(invoice.other_fees_invoices,'amount_due');var manualsDue=sumBy(invoice.manual_invoices,'amount_due');invoiceAmountsDue+=sum([tuitionDue,functionalDue,otherFeesDue,manualsDue]);var unPaidTuition=invoice===null||invoice===void 0?void 0:(_invoice$tuition_invo=invoice.tuition_invoices)===null||_invoice$tuition_invo===void 0?void 0:_invoice$tuition_invo.filter(function(unpaidInvoice){return unpaidInvoice.amount_due>0;});var unPaidFunctional=invoice===null||invoice===void 0?void 0:(_invoice$functional_f=invoice.functional_fees_invoices)===null||_invoice$functional_f===void 0?void 0:_invoice$functional_f.filter(function(unpaidInvoice){return unpaidInvoice.amount_due>0;});var unPaidManual=invoice===null||invoice===void 0?void 0:(_invoice$manual_invoi=invoice.manual_invoices)===null||_invoice$manual_invoi===void 0?void 0:_invoice$manual_invoi.filter(function(unpaidInvoice){return unpaidInvoice.amount_due>0;});var unPaidOther=invoice===null||invoice===void 0?void 0:(_invoice$other_fees_i=invoice.other_fees_invoices)===null||_invoice$other_fees_i===void 0?void 0:_invoice$other_fees_i.filter(function(unpaidInvoice){return unpaidInvoice.amount_due>0;});unPaidInvoices=[].concat(_toConsumableArray(unPaidInvoices),_toConsumableArray(unPaidTuition),_toConsumableArray(unPaidFunctional),_toConsumableArray(unPaidManual),_toConsumableArray(unPaidOther));});setTotalInvoiceDue(invoiceAmountsDue);setAllUnPaidInvoices(unPaidInvoices);setSelectedRows(unPaidInvoices.map(function(unpaidInvoice){return{id:unpaidInvoice===null||unpaidInvoice===void 0?void 0:unpaidInvoice.id,invoice_number:unpaidInvoice.invoice_number,amount:unpaidInvoice.amount_due};}));}},[invoices]);var handleFormSubmit=function handleFormSubmit(data){if(!isEmpty(data)){var payload=data;var url='future';if(invoiceType==='all-unpaid-invoices')url='all';else if(invoiceType==='select-unpaid-invoices'){url='bulk';payload=_objectSpread(_objectSpread({},payload),{},{tuition_invoices:getInvoiceAmount(selectedRows,'T','tuition_invoice_id'),functional_fees_invoices:getInvoiceAmount(selectedRows,'F','functional_fees_invoice_id'),other_fees_invoices:getInvoiceAmount(selectedRows,'O','functional_fees_invoice_id'),manual_invoices:getInvoiceAmount(selectedRows,'M','manual_invoice_id')});}dispatch(paymentReferenceActions.generatePaymentReference(payload,url));}};var invoiceTypes=[{title:'1. FOR FEES DEPOSIT TO MY ACCOUNT',url:'future-payments',hidden:false},{title:'2. FOR ALL PENDING INVOICES',url:'all-unpaid-invoices',hidden:isEmpty(allUnPaidInvoices)},{title:'3. FOR SPECIFIC INVOICES',url:'select-unpaid-invoices',hidden:isEmpty(allUnPaidInvoices)}];return/*#__PURE__*/_jsxs(_Fragment,{children:[isEmpty(allUnPaidInvoices)&&/*#__PURE__*/_jsx(AlertMessage,{message:\"You Have No Unpaid Invoices\",icon:/*#__PURE__*/_jsx(FaExclamationCircle,{className:\"me-1\"}),className:\"font600 text-sm p-2\",type:\"info\",extras:/*#__PURE__*/_jsx(ReloadButton,{loading:loading,onClick:getInvoices,variant:\"link\",text:\"Reload\",size:\"sm\"})}),/*#__PURE__*/_jsx(Form,{onSubmit:handleSubmit(handleFormSubmit),children:/*#__PURE__*/_jsxs(Row,{className:\"row-deck mb-4 g-0\",children:[/*#__PURE__*/_jsx(Col,{md:5,children:/*#__PURE__*/_jsxs(Card,{body:true,children:[/*#__PURE__*/_jsx(Card.Subtitle,{className:\"mb-4 font600 text-center text-sm\",children:\"SELECT PAYMENT REFERENCE TYPE\"}),invoiceTypes.map(function(invoice){return/*#__PURE__*/_jsx(Fragment,{children:invoice.hidden===false&&/*#__PURE__*/_jsx(Card,{body:true,onClick:function onClick(){return setInvoiceType(invoice.url);},className:\"mb-2 p-2 text-center rounded font600 \".concat(invoiceType===invoice.url?'bg-primary text-white':'bg-light text-primary'),style:{cursor:'pointer'},children:invoice.title})},invoice.url);})]})}),/*#__PURE__*/_jsx(Col,{md:7,children:/*#__PURE__*/_jsxs(Card,{body:true,className:\"bg-light\",children:[/*#__PURE__*/_jsxs(Card.Subtitle,{className:\"mb-4 font600 text-primary text-center text-sm\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"me-1\",children:\"GENERATE REFERENCE FOR\"}),invoiceType==='future-payments'&&'FEES DEPOSIT TO YOUR ACCOUNT'||invoiceType==='all-unpaid-invoices'&&'ALL UNPAID INVOICES']}),invoiceType==='all-unpaid-invoices'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(UnPaidInvoices,{selectedRows:selectedRows,setSelectedRows:setSelectedRows,invoices:allUnPaidInvoices}),/*#__PURE__*/_jsxs(Card.Header,{className:\"rounded-0 border-0 text-sm py-1 my-3 bg-dark text-white\",children:[\"TOTAL AMOUNT TO PAY\",/*#__PURE__*/_jsx(\"div\",{className:\"card-options text-white\",children:\"\".concat(totalInvoiceDue.toLocaleString(),\" UGX\")})]})]}),invoiceType==='select-unpaid-invoices'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(UnPaidInvoices,{selectedRows:selectedRows,setSelectedRows:setSelectedRows,invoices:allUnPaidInvoices,editAmount:true}),/*#__PURE__*/_jsxs(Card.Header,{className:\"rounded-0 border-0 text-sm py-1 my-3 bg-dark text-white\",children:[\"TOTAL AMOUNT TO PAY\",/*#__PURE__*/_jsx(\"div\",{className:\"card-options text-white\",children:\"\".concat(sumBy(selectedRows,'amount').toLocaleString(),\" UGX\")})]})]}),invoiceType==='future-payments'&&/*#__PURE__*/_jsx(InputText,{name:\"amount\",label:\"AMOUNT TO DEPOSIT\",register:register({required:'Enter the amount to Deposit E.g 1,000,000',min:{value:500,message:'Minimum amount should be 500 UGX'},max:{value:100000000,message:'Minimum amount should be 100,000,000 UGX'}}),type:\"number\",min:\"500\",max:\"100000000\",error:get(errors,'amount.message'),requiredField:true}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-3 text-end\",children:/*#__PURE__*/_jsx(SubmitButton,{text:\"GENERATE REFERENCE\",size:\"md\",loading:generatingPaymentReference,loadingText:\"Generating...\"})})]})})]})})]});};export default GeneratePaymentReference;","map":{"version":3,"sources":["/Users/admin/Documents/react-projects/hesmis/hesmis-front/src/containers/PaymentReferences/GeneratePaymentReference.jsx"],"names":["get","isEmpty","sum","sumBy","React","Fragment","useEffect","useState","Card","Col","Form","Row","useForm","FaExclamationCircle","useDispatch","useSelector","AlertMessage","InputText","ReloadButton","SubmitButton","paymentActions","paymentReferenceActions","getInvoiceAmount","UnPaidInvoices","GeneratePaymentReference","dispatch","register","errors","handleSubmit","invoiceType","setInvoiceType","totalInvoiceDue","setTotalInvoiceDue","allUnPaidInvoices","setAllUnPaidInvoices","selectedRows","setSelectedRows","state","myInvoice","invoices","loading","paymentReference","generatingPaymentReference","getInvoices","getMyInvoices","invoiceAmountsDue","unPaidInvoices","forEach","invoice","tuitionDue","tuition_invoices","functionalDue","functional_fees_invoices","otherFeesDue","other_fees_invoices","manualsDue","manual_invoices","unPaidTuition","filter","unpaidInvoice","amount_due","unPaidFunctional","unPaidManual","unPaidOther","map","id","invoice_number","amount","handleFormSubmit","data","payload","url","generatePaymentReference","invoiceTypes","title","hidden","cursor","toLocaleString","required","min","value","message","max"],"mappings":"uhBAAA,OAASA,GAAT,CAAcC,OAAd,CAAuBC,GAAvB,CAA4BC,KAA5B,KAAyC,QAAzC,CACA,MAAOC,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,CAAqCC,QAArC,KAAqD,OAArD,CACA,OAASC,IAAT,CAAeC,GAAf,CAAoBC,IAApB,CAA0BC,GAA1B,KAAqC,iBAArC,CACA,OAASC,OAAT,KAAwB,iBAAxB,CACA,OAASC,mBAAT,KAAoC,gBAApC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OACEC,YADF,CAEEC,SAFF,CAGEC,YAHF,CAIEC,YAJF,KAKO,yBALP,CAMA,OAASC,cAAT,CAAyBC,uBAAzB,KAAwD,sBAAxD,CACA,OAASC,gBAAT,KAAiC,UAAjC,CACA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,C,6IAEA,GAAMC,CAAAA,wBAAwB,CAAG,QAA3BA,CAAAA,wBAA2B,EAAM,CACrC,GAAMC,CAAAA,QAAQ,CAAGX,WAAW,EAA5B,CACA,aAA2CF,OAAO,EAAlD,CAAQc,QAAR,UAAQA,QAAR,CAAkBC,MAAlB,UAAkBA,MAAlB,CAA0BC,YAA1B,UAA0BA,YAA1B,CACA,cAAsCrB,QAAQ,CAAC,iBAAD,CAA9C,wCAAOsB,WAAP,eAAoBC,cAApB,eACA,eAA8CvB,QAAQ,CAAC,CAAD,CAAtD,yCAAOwB,eAAP,eAAwBC,kBAAxB,eACA,eAAkDzB,QAAQ,CAAC,EAAD,CAA1D,yCAAO0B,iBAAP,eAA0BC,oBAA1B,eACA,eAAwC3B,QAAQ,CAAC,EAAD,CAAhD,yCAAO4B,YAAP,eAAqBC,eAArB,eACA,iBAA8BrB,WAAW,CAAC,SAACsB,KAAD,QAAWA,CAAAA,KAAK,CAACC,SAAjB,EAAD,CAAzC,CAAQC,QAAR,cAAQA,QAAR,CAAkBC,OAAlB,cAAkBA,OAAlB,CACA,kBAAuCzB,WAAW,CAChD,SAACsB,KAAD,QAAWA,CAAAA,KAAK,CAACI,gBAAjB,EADgD,CAAlD,CAAQC,0BAAR,eAAQA,0BAAR,CAIA;AAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,SAAMlB,CAAAA,QAAQ,CAACL,cAAc,CAACwB,aAAf,EAAD,CAAd,EAApB,CAEAtC,SAAS,CAAC,UAAM,CACd,GAAIL,OAAO,CAACsC,QAAD,CAAX,CAAuBI,WAAW,GACnC,CAFQ,CAEN,EAFM,CAAT,CAIArC,SAAS,CAAC,UAAM,CACd,GAAI,CAACL,OAAO,CAACsC,QAAD,CAAZ,CAAwB,CACtB,GAAIM,CAAAA,iBAAiB,CAAG,CAAxB,CACA,GAAIC,CAAAA,cAAc,CAAG,EAArB,CAEAP,QAAQ,CAACQ,OAAT,CAAiB,SAACC,OAAD,CAAa,6FAC5B,GAAMC,CAAAA,UAAU,CAAG9C,KAAK,CAAC6C,OAAO,CAACE,gBAAT,CAA2B,YAA3B,CAAxB,CACA,GAAMC,CAAAA,aAAa,CAAGhD,KAAK,CACzB6C,OAAO,CAACI,wBADiB,CAEzB,YAFyB,CAA3B,CAIA,GAAMC,CAAAA,YAAY,CAAGlD,KAAK,CAAC6C,OAAO,CAACM,mBAAT,CAA8B,YAA9B,CAA1B,CACA,GAAMC,CAAAA,UAAU,CAAGpD,KAAK,CAAC6C,OAAO,CAACQ,eAAT,CAA0B,YAA1B,CAAxB,CACAX,iBAAiB,EAAI3C,GAAG,CAAC,CACvB+C,UADuB,CAEvBE,aAFuB,CAGvBE,YAHuB,CAIvBE,UAJuB,CAAD,CAAxB,CAOA,GAAME,CAAAA,aAAa,CAAGT,OAAH,SAAGA,OAAH,wCAAGA,OAAO,CAAEE,gBAAZ,gDAAG,sBAA2BQ,MAA3B,CACpB,SAACC,aAAD,QAAmBA,CAAAA,aAAa,CAACC,UAAd,CAA2B,CAA9C,EADoB,CAAtB,CAGA,GAAMC,CAAAA,gBAAgB,CAAGb,OAAH,SAAGA,OAAH,wCAAGA,OAAO,CAAEI,wBAAZ,gDAAG,sBAAmCM,MAAnC,CACvB,SAACC,aAAD,QAAmBA,CAAAA,aAAa,CAACC,UAAd,CAA2B,CAA9C,EADuB,CAAzB,CAGA,GAAME,CAAAA,YAAY,CAAGd,OAAH,SAAGA,OAAH,wCAAGA,OAAO,CAAEQ,eAAZ,gDAAG,sBAA0BE,MAA1B,CACnB,SAACC,aAAD,QAAmBA,CAAAA,aAAa,CAACC,UAAd,CAA2B,CAA9C,EADmB,CAArB,CAGA,GAAMG,CAAAA,WAAW,CAAGf,OAAH,SAAGA,OAAH,wCAAGA,OAAO,CAAEM,mBAAZ,gDAAG,sBAA8BI,MAA9B,CAClB,SAACC,aAAD,QAAmBA,CAAAA,aAAa,CAACC,UAAd,CAA2B,CAA9C,EADkB,CAApB,CAGAd,cAAc,8BACTA,cADS,qBAETW,aAFS,qBAGTI,gBAHS,qBAITC,YAJS,qBAKTC,WALS,EAAd,CAOD,CAlCD,EAmCA/B,kBAAkB,CAACa,iBAAD,CAAlB,CACAX,oBAAoB,CAACY,cAAD,CAApB,CACAV,eAAe,CACbU,cAAc,CAACkB,GAAf,CAAmB,SAACL,aAAD,CAAmB,CACpC,MAAO,CACLM,EAAE,CAAEN,aAAF,SAAEA,aAAF,iBAAEA,aAAa,CAAEM,EADd,CAELC,cAAc,CAAEP,aAAa,CAACO,cAFzB,CAGLC,MAAM,CAAER,aAAa,CAACC,UAHjB,CAAP,CAKD,CAND,CADa,CAAf,CASD,CACF,CApDQ,CAoDN,CAACrB,QAAD,CApDM,CAAT,CAsDA,GAAM6B,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,IAAD,CAAU,CACjC,GAAI,CAACpE,OAAO,CAACoE,IAAD,CAAZ,CAAoB,CAClB,GAAIC,CAAAA,OAAO,CAAGD,IAAd,CACA,GAAIE,CAAAA,GAAG,CAAG,QAAV,CACA,GAAI1C,WAAW,GAAK,qBAApB,CAA2C0C,GAAG,CAAG,KAAN,CAA3C,IACK,IAAI1C,WAAW,GAAK,wBAApB,CAA8C,CACjD0C,GAAG,CAAG,MAAN,CACAD,OAAO,gCACFA,OADE,MAELpB,gBAAgB,CAAE5B,gBAAgB,CAChCa,YADgC,CAEhC,GAFgC,CAGhC,oBAHgC,CAF7B,CAOLiB,wBAAwB,CAAE9B,gBAAgB,CACxCa,YADwC,CAExC,GAFwC,CAGxC,4BAHwC,CAPrC,CAYLmB,mBAAmB,CAAEhC,gBAAgB,CACnCa,YADmC,CAEnC,GAFmC,CAGnC,4BAHmC,CAZhC,CAiBLqB,eAAe,CAAElC,gBAAgB,CAC/Ba,YAD+B,CAE/B,GAF+B,CAG/B,mBAH+B,CAjB5B,EAAP,CAuBD,CACDV,QAAQ,CAACJ,uBAAuB,CAACmD,wBAAxB,CAAiDF,OAAjD,CAA0DC,GAA1D,CAAD,CAAR,CACD,CACF,CAjCD,CAmCA,GAAME,CAAAA,YAAY,CAAG,CACnB,CACEC,KAAK,CAAE,mCADT,CAEEH,GAAG,CAAE,iBAFP,CAGEI,MAAM,CAAE,KAHV,CADmB,CAMnB,CACED,KAAK,CAAE,6BADT,CAEEH,GAAG,CAAE,qBAFP,CAGEI,MAAM,CAAE1E,OAAO,CAACgC,iBAAD,CAHjB,CANmB,CAWnB,CACEyC,KAAK,CAAE,0BADT,CAEEH,GAAG,CAAE,wBAFP,CAGEI,MAAM,CAAE1E,OAAO,CAACgC,iBAAD,CAHjB,CAXmB,CAArB,CAkBA,mBACE,2BACGhC,OAAO,CAACgC,iBAAD,CAAP,eACC,KAAC,YAAD,EACE,OAAO,CAAC,6BADV,CAEE,IAAI,cAAE,KAAC,mBAAD,EAAqB,SAAS,CAAC,MAA/B,EAFR,CAGE,SAAS,CAAC,qBAHZ,CAIE,IAAI,CAAC,MAJP,CAKE,MAAM,cACJ,KAAC,YAAD,EACE,OAAO,CAAEO,OADX,CAEE,OAAO,CAAEG,WAFX,CAGE,OAAO,CAAC,MAHV,CAIE,IAAI,CAAC,QAJP,CAKE,IAAI,CAAC,IALP,EANJ,EAFJ,cAkBE,KAAC,IAAD,EAAM,QAAQ,CAAEf,YAAY,CAACwC,gBAAD,CAA5B,uBACE,MAAC,GAAD,EAAK,SAAS,CAAC,mBAAf,wBACE,KAAC,GAAD,EAAK,EAAE,CAAE,CAAT,uBACE,MAAC,IAAD,EAAM,IAAI,KAAV,wBACE,KAAC,IAAD,CAAM,QAAN,EAAe,SAAS,CAAC,kCAAzB,2CADF,CAKGK,YAAY,CAACT,GAAb,CAAiB,SAAChB,OAAD,qBAChB,KAAC,QAAD,WACGA,OAAO,CAAC2B,MAAR,GAAmB,KAAnB,eACC,KAAC,IAAD,EACE,IAAI,KADN,CAEE,OAAO,CAAE,yBAAM7C,CAAAA,cAAc,CAACkB,OAAO,CAACuB,GAAT,CAApB,EAFX,CAGE,SAAS,gDACP1C,WAAW,GAAKmB,OAAO,CAACuB,GAAxB,CACI,uBADJ,CAEI,uBAHG,CAHX,CAQE,KAAK,CAAE,CAAEK,MAAM,CAAE,SAAV,CART,UAUG5B,OAAO,CAAC0B,KAVX,EAFJ,EAAe1B,OAAO,CAACuB,GAAvB,CADgB,EAAjB,CALH,GADF,EADF,cA2BE,KAAC,GAAD,EAAK,EAAE,CAAE,CAAT,uBACE,MAAC,IAAD,EAAM,IAAI,KAAV,CAAW,SAAS,CAAC,UAArB,wBACE,MAAC,IAAD,CAAM,QAAN,EAAe,SAAS,CAAC,+CAAzB,wBACE,aAAM,SAAS,CAAC,MAAhB,oCADF,CAEI1C,WAAW,GAAK,iBAAhB,EACA,8BADD,EAEEA,WAAW,GAAK,qBAAhB,EACC,qBALN,GADF,CAQGA,WAAW,GAAK,qBAAhB,eACC,wCACE,KAAC,cAAD,EACE,YAAY,CAAEM,YADhB,CAEE,eAAe,CAAEC,eAFnB,CAGE,QAAQ,CAAEH,iBAHZ,EADF,cAME,MAAC,IAAD,CAAM,MAAN,EAAa,SAAS,CAAC,yDAAvB,8CAEE,YAAK,SAAS,CAAC,yBAAf,oBACMF,eAAe,CAAC8C,cAAhB,EADN,UAFF,GANF,GATJ,CAwBGhD,WAAW,GAAK,wBAAhB,eACC,wCACE,KAAC,cAAD,EACE,YAAY,CAAEM,YADhB,CAEE,eAAe,CAAEC,eAFnB,CAGE,QAAQ,CAAEH,iBAHZ,CAIE,UAAU,KAJZ,EADF,cAOE,MAAC,IAAD,CAAM,MAAN,EAAa,SAAS,CAAC,yDAAvB,8CAEE,YAAK,SAAS,CAAC,yBAAf,oBACM9B,KAAK,CAACgC,YAAD,CAAe,QAAf,CAAL,CAA8B0C,cAA9B,EADN,UAFF,GAPF,GAzBJ,CAyCGhD,WAAW,GAAK,iBAAhB,eACC,KAAC,SAAD,EACE,IAAI,CAAC,QADP,CAEE,KAAK,CAAC,mBAFR,CAGE,QAAQ,CAAEH,QAAQ,CAAC,CACjBoD,QAAQ,CAAE,2CADO,CAEjBC,GAAG,CAAE,CACHC,KAAK,CAAE,GADJ,CAEHC,OAAO,CAAE,kCAFN,CAFY,CAMjBC,GAAG,CAAE,CACHF,KAAK,CAAE,SADJ,CAEHC,OAAO,CAAE,0CAFN,CANY,CAAD,CAHpB,CAcE,IAAI,CAAC,QAdP,CAeE,GAAG,CAAC,KAfN,CAgBE,GAAG,CAAC,WAhBN,CAiBE,KAAK,CAAEjF,GAAG,CAAC2B,MAAD,CAAS,gBAAT,CAjBZ,CAkBE,aAAa,KAlBf,EA1CJ,cAgEE,YAAK,SAAS,CAAC,eAAf,uBACE,KAAC,YAAD,EACE,IAAI,CAAC,oBADP,CAEE,IAAI,CAAC,IAFP,CAGE,OAAO,CAAEe,0BAHX,CAIE,WAAW,CAAC,eAJd,EADF,EAhEF,GADF,EA3BF,GADF,EAlBF,GADF,CA8HD,CA7PD,CA+PA,cAAelB,CAAAA,wBAAf","sourcesContent":["import { get, isEmpty, sum, sumBy } from 'lodash';\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { Card, Col, Form, Row } from 'react-bootstrap';\nimport { useForm } from 'react-hook-form';\nimport { FaExclamationCircle } from 'react-icons/fa';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  AlertMessage,\n  InputText,\n  ReloadButton,\n  SubmitButton,\n} from '../../components/common';\nimport { paymentActions, paymentReferenceActions } from '../../config/actions';\nimport { getInvoiceAmount } from './helper';\nimport UnPaidInvoices from './UnPaidInvoices';\n\nconst GeneratePaymentReference = () => {\n  const dispatch = useDispatch();\n  const { register, errors, handleSubmit } = useForm();\n  const [invoiceType, setInvoiceType] = useState('future-payments');\n  const [totalInvoiceDue, setTotalInvoiceDue] = useState(0);\n  const [allUnPaidInvoices, setAllUnPaidInvoices] = useState([]);\n  const [selectedRows, setSelectedRows] = useState([]);\n  const { invoices, loading } = useSelector((state) => state.myInvoice);\n  const { generatingPaymentReference } = useSelector(\n    (state) => state.paymentReference\n  );\n\n  // const paymentMode = watch('payment_mode', null);\n\n  const getInvoices = () => dispatch(paymentActions.getMyInvoices());\n\n  useEffect(() => {\n    if (isEmpty(invoices)) getInvoices();\n  }, []);\n\n  useEffect(() => {\n    if (!isEmpty(invoices)) {\n      let invoiceAmountsDue = 0;\n      let unPaidInvoices = [];\n\n      invoices.forEach((invoice) => {\n        const tuitionDue = sumBy(invoice.tuition_invoices, 'amount_due');\n        const functionalDue = sumBy(\n          invoice.functional_fees_invoices,\n          'amount_due'\n        );\n        const otherFeesDue = sumBy(invoice.other_fees_invoices, 'amount_due');\n        const manualsDue = sumBy(invoice.manual_invoices, 'amount_due');\n        invoiceAmountsDue += sum([\n          tuitionDue,\n          functionalDue,\n          otherFeesDue,\n          manualsDue,\n        ]);\n\n        const unPaidTuition = invoice?.tuition_invoices?.filter(\n          (unpaidInvoice) => unpaidInvoice.amount_due > 0\n        );\n        const unPaidFunctional = invoice?.functional_fees_invoices?.filter(\n          (unpaidInvoice) => unpaidInvoice.amount_due > 0\n        );\n        const unPaidManual = invoice?.manual_invoices?.filter(\n          (unpaidInvoice) => unpaidInvoice.amount_due > 0\n        );\n        const unPaidOther = invoice?.other_fees_invoices?.filter(\n          (unpaidInvoice) => unpaidInvoice.amount_due > 0\n        );\n        unPaidInvoices = [\n          ...unPaidInvoices,\n          ...unPaidTuition,\n          ...unPaidFunctional,\n          ...unPaidManual,\n          ...unPaidOther,\n        ];\n      });\n      setTotalInvoiceDue(invoiceAmountsDue);\n      setAllUnPaidInvoices(unPaidInvoices);\n      setSelectedRows(\n        unPaidInvoices.map((unpaidInvoice) => {\n          return {\n            id: unpaidInvoice?.id,\n            invoice_number: unpaidInvoice.invoice_number,\n            amount: unpaidInvoice.amount_due,\n          };\n        })\n      );\n    }\n  }, [invoices]);\n\n  const handleFormSubmit = (data) => {\n    if (!isEmpty(data)) {\n      let payload = data;\n      let url = 'future';\n      if (invoiceType === 'all-unpaid-invoices') url = 'all';\n      else if (invoiceType === 'select-unpaid-invoices') {\n        url = 'bulk';\n        payload = {\n          ...payload,\n          tuition_invoices: getInvoiceAmount(\n            selectedRows,\n            'T',\n            'tuition_invoice_id'\n          ),\n          functional_fees_invoices: getInvoiceAmount(\n            selectedRows,\n            'F',\n            'functional_fees_invoice_id'\n          ),\n          other_fees_invoices: getInvoiceAmount(\n            selectedRows,\n            'O',\n            'functional_fees_invoice_id'\n          ),\n          manual_invoices: getInvoiceAmount(\n            selectedRows,\n            'M',\n            'manual_invoice_id'\n          ),\n        };\n      }\n      dispatch(paymentReferenceActions.generatePaymentReference(payload, url));\n    }\n  };\n\n  const invoiceTypes = [\n    {\n      title: '1. FOR FEES DEPOSIT TO MY ACCOUNT',\n      url: 'future-payments',\n      hidden: false,\n    },\n    {\n      title: '2. FOR ALL PENDING INVOICES',\n      url: 'all-unpaid-invoices',\n      hidden: isEmpty(allUnPaidInvoices),\n    },\n    {\n      title: '3. FOR SPECIFIC INVOICES',\n      url: 'select-unpaid-invoices',\n      hidden: isEmpty(allUnPaidInvoices),\n    },\n  ];\n\n  return (\n    <>\n      {isEmpty(allUnPaidInvoices) && (\n        <AlertMessage\n          message=\"You Have No Unpaid Invoices\"\n          icon={<FaExclamationCircle className=\"me-1\" />}\n          className=\"font600 text-sm p-2\"\n          type=\"info\"\n          extras={\n            <ReloadButton\n              loading={loading}\n              onClick={getInvoices}\n              variant=\"link\"\n              text=\"Reload\"\n              size=\"sm\"\n            />\n          }\n        />\n      )}\n      <Form onSubmit={handleSubmit(handleFormSubmit)}>\n        <Row className=\"row-deck mb-4 g-0\">\n          <Col md={5}>\n            <Card body>\n              <Card.Subtitle className=\"mb-4 font600 text-center text-sm\">\n                SELECT PAYMENT REFERENCE TYPE\n              </Card.Subtitle>\n\n              {invoiceTypes.map((invoice) => (\n                <Fragment key={invoice.url}>\n                  {invoice.hidden === false && (\n                    <Card\n                      body\n                      onClick={() => setInvoiceType(invoice.url)}\n                      className={`mb-2 p-2 text-center rounded font600 ${\n                        invoiceType === invoice.url\n                          ? 'bg-primary text-white'\n                          : 'bg-light text-primary'\n                      }`}\n                      style={{ cursor: 'pointer' }}\n                    >\n                      {invoice.title}\n                    </Card>\n                  )}\n                </Fragment>\n              ))}\n            </Card>\n          </Col>\n          <Col md={7}>\n            <Card body className=\"bg-light\">\n              <Card.Subtitle className=\"mb-4 font600 text-primary text-center text-sm\">\n                <span className=\"me-1\">GENERATE REFERENCE FOR</span>\n                {(invoiceType === 'future-payments' &&\n                  'FEES DEPOSIT TO YOUR ACCOUNT') ||\n                  (invoiceType === 'all-unpaid-invoices' &&\n                    'ALL UNPAID INVOICES')}\n              </Card.Subtitle>\n              {invoiceType === 'all-unpaid-invoices' && (\n                <>\n                  <UnPaidInvoices\n                    selectedRows={selectedRows}\n                    setSelectedRows={setSelectedRows}\n                    invoices={allUnPaidInvoices}\n                  />\n                  <Card.Header className=\"rounded-0 border-0 text-sm py-1 my-3 bg-dark text-white\">\n                    TOTAL AMOUNT TO PAY\n                    <div className=\"card-options text-white\">\n                      {`${totalInvoiceDue.toLocaleString()} UGX`}\n                    </div>\n                  </Card.Header>\n                </>\n              )}\n\n              {invoiceType === 'select-unpaid-invoices' && (\n                <>\n                  <UnPaidInvoices\n                    selectedRows={selectedRows}\n                    setSelectedRows={setSelectedRows}\n                    invoices={allUnPaidInvoices}\n                    editAmount\n                  />\n                  <Card.Header className=\"rounded-0 border-0 text-sm py-1 my-3 bg-dark text-white\">\n                    TOTAL AMOUNT TO PAY\n                    <div className=\"card-options text-white\">\n                      {`${sumBy(selectedRows, 'amount').toLocaleString()} UGX`}\n                    </div>\n                  </Card.Header>\n                </>\n              )}\n\n              {invoiceType === 'future-payments' && (\n                <InputText\n                  name=\"amount\"\n                  label=\"AMOUNT TO DEPOSIT\"\n                  register={register({\n                    required: 'Enter the amount to Deposit E.g 1,000,000',\n                    min: {\n                      value: 500,\n                      message: 'Minimum amount should be 500 UGX',\n                    },\n                    max: {\n                      value: 100000000,\n                      message: 'Minimum amount should be 100,000,000 UGX',\n                    },\n                  })}\n                  type=\"number\"\n                  min=\"500\"\n                  max=\"100000000\"\n                  error={get(errors, 'amount.message')}\n                  requiredField\n                />\n              )}\n\n              <div className=\"mt-3 text-end\">\n                <SubmitButton\n                  text=\"GENERATE REFERENCE\"\n                  size=\"md\"\n                  loading={generatingPaymentReference}\n                  loadingText=\"Generating...\"\n                />\n              </div>\n            </Card>\n          </Col>\n        </Row>\n      </Form>\n    </>\n  );\n};\n\nexport default GeneratePaymentReference;\n"]},"metadata":{},"sourceType":"module"}