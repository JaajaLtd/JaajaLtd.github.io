{"ast":null,"code":"import { uniqBy } from 'lodash';\nimport { enrollmentActions } from '../../actions';\nimport initialState from '../../initialState';\n\nfunction enrollment(state = initialState.enrollment, actions) {\n  switch (actions.type) {\n    case enrollmentActions.GET_CURRENT_EVENTS_REQUEST:\n      return { ...state,\n        currentEventsError: {},\n        gettingCurrentEvents: true\n      };\n\n    case enrollmentActions.GET_CURRENT_EVENTS_SUCCESS:\n      {\n        const currentEvent = {\n          event: actions.data,\n          programme_id: actions.programmeId\n        };\n        return { ...state,\n          currentEvents: uniqBy([currentEvent, ...state.currentEvents], 'programme_id'),\n          gettingCurrentEvents: false\n        };\n      }\n\n    case enrollmentActions.GET_CURRENT_EVENTS_ERROR:\n      return { ...state,\n        currentEventsError: actions.error,\n        gettingCurrentEvents: false\n      };\n\n    case enrollmentActions.GET_ENROLLMENT_HISTORY_REQUEST:\n      return { ...state,\n        enrollmentHistoryError: {},\n        gettingEnrollmentHistory: true\n      };\n\n    case enrollmentActions.GET_ENROLLMENT_HISTORY_SUCCESS:\n      return { ...state,\n        enrollmentHistories: actions.data,\n        gettingEnrollmentHistory: false\n      };\n\n    case enrollmentActions.GET_ENROLLMENT_HISTORY_ERROR:\n      return { ...state,\n        enrollmentHistoryError: actions.error,\n        gettingEnrollmentHistory: false\n      };\n\n    case enrollmentActions.ENROLL_STUDENT_REQUEST:\n      return { ...state,\n        enrollError: {},\n        enrolling: true\n      };\n\n    case enrollmentActions.ENROLL_STUDENT_SUCCESS:\n      return { ...state,\n        enrollSuccess: actions.data,\n        enrolling: false\n      };\n\n    case enrollmentActions.ENROLL_STUDENT_ERROR:\n      return { ...state,\n        enrollError: actions.error,\n        enrolling: false\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default enrollment;","map":{"version":3,"sources":["/Users/admin/Documents/react-projects/hesmis/hesmis-front/src/config/reducers/enrollment/index.js"],"names":["uniqBy","enrollmentActions","initialState","enrollment","state","actions","type","GET_CURRENT_EVENTS_REQUEST","currentEventsError","gettingCurrentEvents","GET_CURRENT_EVENTS_SUCCESS","currentEvent","event","data","programme_id","programmeId","currentEvents","GET_CURRENT_EVENTS_ERROR","error","GET_ENROLLMENT_HISTORY_REQUEST","enrollmentHistoryError","gettingEnrollmentHistory","GET_ENROLLMENT_HISTORY_SUCCESS","enrollmentHistories","GET_ENROLLMENT_HISTORY_ERROR","ENROLL_STUDENT_REQUEST","enrollError","enrolling","ENROLL_STUDENT_SUCCESS","enrollSuccess","ENROLL_STUDENT_ERROR"],"mappings":"AAAA,SAASA,MAAT,QAAuB,QAAvB;AACA,SAASC,iBAAT,QAAkC,eAAlC;AACA,OAAOC,YAAP,MAAyB,oBAAzB;;AAEA,SAASC,UAAT,CAAoBC,KAAK,GAAGF,YAAY,CAACC,UAAzC,EAAqDE,OAArD,EAA8D;AAC5D,UAAQA,OAAO,CAACC,IAAhB;AACE,SAAKL,iBAAiB,CAACM,0BAAvB;AACE,aAAO,EACL,GAAGH,KADE;AAELI,QAAAA,kBAAkB,EAAE,EAFf;AAGLC,QAAAA,oBAAoB,EAAE;AAHjB,OAAP;;AAKF,SAAKR,iBAAiB,CAACS,0BAAvB;AAAmD;AACjD,cAAMC,YAAY,GAAG;AACnBC,UAAAA,KAAK,EAAEP,OAAO,CAACQ,IADI;AAEnBC,UAAAA,YAAY,EAAET,OAAO,CAACU;AAFH,SAArB;AAKA,eAAO,EACL,GAAGX,KADE;AAELY,UAAAA,aAAa,EAAEhB,MAAM,CACnB,CAACW,YAAD,EAAe,GAAGP,KAAK,CAACY,aAAxB,CADmB,EAEnB,cAFmB,CAFhB;AAMLP,UAAAA,oBAAoB,EAAE;AANjB,SAAP;AAQD;;AACD,SAAKR,iBAAiB,CAACgB,wBAAvB;AACE,aAAO,EACL,GAAGb,KADE;AAELI,QAAAA,kBAAkB,EAAEH,OAAO,CAACa,KAFvB;AAGLT,QAAAA,oBAAoB,EAAE;AAHjB,OAAP;;AAMF,SAAKR,iBAAiB,CAACkB,8BAAvB;AACE,aAAO,EACL,GAAGf,KADE;AAELgB,QAAAA,sBAAsB,EAAE,EAFnB;AAGLC,QAAAA,wBAAwB,EAAE;AAHrB,OAAP;;AAKF,SAAKpB,iBAAiB,CAACqB,8BAAvB;AACE,aAAO,EACL,GAAGlB,KADE;AAELmB,QAAAA,mBAAmB,EAAElB,OAAO,CAACQ,IAFxB;AAGLQ,QAAAA,wBAAwB,EAAE;AAHrB,OAAP;;AAKF,SAAKpB,iBAAiB,CAACuB,4BAAvB;AACE,aAAO,EACL,GAAGpB,KADE;AAELgB,QAAAA,sBAAsB,EAAEf,OAAO,CAACa,KAF3B;AAGLG,QAAAA,wBAAwB,EAAE;AAHrB,OAAP;;AAMF,SAAKpB,iBAAiB,CAACwB,sBAAvB;AACE,aAAO,EACL,GAAGrB,KADE;AAELsB,QAAAA,WAAW,EAAE,EAFR;AAGLC,QAAAA,SAAS,EAAE;AAHN,OAAP;;AAKF,SAAK1B,iBAAiB,CAAC2B,sBAAvB;AACE,aAAO,EACL,GAAGxB,KADE;AAELyB,QAAAA,aAAa,EAAExB,OAAO,CAACQ,IAFlB;AAGLc,QAAAA,SAAS,EAAE;AAHN,OAAP;;AAKF,SAAK1B,iBAAiB,CAAC6B,oBAAvB;AACE,aAAO,EACL,GAAG1B,KADE;AAELsB,QAAAA,WAAW,EAAErB,OAAO,CAACa,KAFhB;AAGLS,QAAAA,SAAS,EAAE;AAHN,OAAP;;AAMF;AACE,aAAOvB,KAAP;AApEJ;AAsED;;AAED,eAAeD,UAAf","sourcesContent":["import { uniqBy } from 'lodash';\nimport { enrollmentActions } from '../../actions';\nimport initialState from '../../initialState';\n\nfunction enrollment(state = initialState.enrollment, actions) {\n  switch (actions.type) {\n    case enrollmentActions.GET_CURRENT_EVENTS_REQUEST:\n      return {\n        ...state,\n        currentEventsError: {},\n        gettingCurrentEvents: true,\n      };\n    case enrollmentActions.GET_CURRENT_EVENTS_SUCCESS: {\n      const currentEvent = {\n        event: actions.data,\n        programme_id: actions.programmeId,\n      };\n\n      return {\n        ...state,\n        currentEvents: uniqBy(\n          [currentEvent, ...state.currentEvents],\n          'programme_id'\n        ),\n        gettingCurrentEvents: false,\n      };\n    }\n    case enrollmentActions.GET_CURRENT_EVENTS_ERROR:\n      return {\n        ...state,\n        currentEventsError: actions.error,\n        gettingCurrentEvents: false,\n      };\n\n    case enrollmentActions.GET_ENROLLMENT_HISTORY_REQUEST:\n      return {\n        ...state,\n        enrollmentHistoryError: {},\n        gettingEnrollmentHistory: true,\n      };\n    case enrollmentActions.GET_ENROLLMENT_HISTORY_SUCCESS:\n      return {\n        ...state,\n        enrollmentHistories: actions.data,\n        gettingEnrollmentHistory: false,\n      };\n    case enrollmentActions.GET_ENROLLMENT_HISTORY_ERROR:\n      return {\n        ...state,\n        enrollmentHistoryError: actions.error,\n        gettingEnrollmentHistory: false,\n      };\n\n    case enrollmentActions.ENROLL_STUDENT_REQUEST:\n      return {\n        ...state,\n        enrollError: {},\n        enrolling: true,\n      };\n    case enrollmentActions.ENROLL_STUDENT_SUCCESS:\n      return {\n        ...state,\n        enrollSuccess: actions.data,\n        enrolling: false,\n      };\n    case enrollmentActions.ENROLL_STUDENT_ERROR:\n      return {\n        ...state,\n        enrollError: actions.error,\n        enrolling: false,\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default enrollment;\n"]},"metadata":{},"sourceType":"module"}