{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/react-projects/hesmis/hesmis-front/src/containers/PaymentReferences/SinglePaymentReference.jsx\";\nimport React from 'react';\nimport PropTypes, { object } from 'prop-types';\nimport { Table } from 'react-bootstrap';\nimport { isEmpty, merge, sumBy } from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SinglePaymentReference = ({\n  paymentReference\n}) => {\n  var _paymentReference$amo;\n\n  const allInvoices = merge(paymentReference.functionalFeesInvoice, paymentReference.tuitionInvoice, paymentReference.otherFeesInvoices);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      size: \"sm\",\n      striped: true,\n      bordered: true,\n      responsive: true,\n      className: \"mb-0 text-uppercase text-xs\",\n      children: [!isEmpty(allInvoices) && /*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"bg-light text-white\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"INVOICE CATEGORY\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Amount TO PAY\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        className: \"text-muted\",\n        children: [!isEmpty(paymentReference.functionalFeesInvoice) && /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Functional Fees\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: `${sumBy(paymentReference.functionalFeesInvoice, 'amount').toLocaleString()} UGX`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this)]\n        }, `functionalFeesInvoice-${paymentReference === null || paymentReference === void 0 ? void 0 : paymentReference.ura_prn}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), !isEmpty(paymentReference.tuitionInvoice) && /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Tuition Fees\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: `${sumBy(paymentReference.tuitionInvoice, 'amount').toLocaleString()} UGX`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this)]\n        }, `tuitionInvoice-${paymentReference === null || paymentReference === void 0 ? void 0 : paymentReference.ura_prn}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), !isEmpty(paymentReference.otherFeesInvoices) && /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Other Fees\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: `${sumBy(paymentReference.otherFeesInvoices, 'amount').toLocaleString()} UGX`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)]\n        }, `otherFeesInvoices-${paymentReference === null || paymentReference === void 0 ? void 0 : paymentReference.ura_prn}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"text-success font600\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"\",\n            children: \"Total Amount to Pay\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: `${paymentReference === null || paymentReference === void 0 ? void 0 : (_paymentReference$amo = paymentReference.amount) === null || _paymentReference$amo === void 0 ? void 0 : _paymentReference$amo.toLocaleString()} UGX`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_c = SinglePaymentReference;\nSinglePaymentReference.defaultProps = {\n  paymentReference: {}\n};\nSinglePaymentReference.propTypes = {\n  paymentReference: PropTypes.oneOfType([object])\n};\nexport default SinglePaymentReference;\n\nvar _c;\n\n$RefreshReg$(_c, \"SinglePaymentReference\");","map":{"version":3,"sources":["/Users/admin/Documents/react-projects/hesmis/hesmis-front/src/containers/PaymentReferences/SinglePaymentReference.jsx"],"names":["React","PropTypes","object","Table","isEmpty","merge","sumBy","SinglePaymentReference","paymentReference","allInvoices","functionalFeesInvoice","tuitionInvoice","otherFeesInvoices","toLocaleString","ura_prn","amount","defaultProps","propTypes","oneOfType"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes, { object } from 'prop-types';\nimport { Table } from 'react-bootstrap';\nimport { isEmpty, merge, sumBy } from 'lodash';\n\nconst SinglePaymentReference = ({ paymentReference }) => {\n  const allInvoices = merge(\n    paymentReference.functionalFeesInvoice,\n    paymentReference.tuitionInvoice,\n    paymentReference.otherFeesInvoices\n  );\n  return (\n    <div>\n      <Table\n        size=\"sm\"\n        striped\n        bordered\n        responsive\n        className=\"mb-0 text-uppercase text-xs\"\n      >\n        {!isEmpty(allInvoices) && (\n          <thead className=\"bg-light text-white\">\n            <tr>\n              <th>INVOICE CATEGORY</th>\n              <th>Amount TO PAY</th>\n            </tr>\n          </thead>\n        )}\n        <tbody className=\"text-muted\">\n          {!isEmpty(paymentReference.functionalFeesInvoice) && (\n            <tr key={`functionalFeesInvoice-${paymentReference?.ura_prn}`}>\n              <td>Functional Fees</td>\n              <td>\n                {`${sumBy(\n                  paymentReference.functionalFeesInvoice,\n                  'amount'\n                ).toLocaleString()} UGX`}\n              </td>\n            </tr>\n          )}\n          {!isEmpty(paymentReference.tuitionInvoice) && (\n            <tr key={`tuitionInvoice-${paymentReference?.ura_prn}`}>\n              <td>Tuition Fees</td>\n              <td>\n                {`${sumBy(\n                  paymentReference.tuitionInvoice,\n                  'amount'\n                ).toLocaleString()} UGX`}\n              </td>\n            </tr>\n          )}\n          {!isEmpty(paymentReference.otherFeesInvoices) && (\n            <tr key={`otherFeesInvoices-${paymentReference?.ura_prn}`}>\n              <td>Other Fees</td>\n              <td>\n                {`${sumBy(\n                  paymentReference.otherFeesInvoices,\n                  'amount'\n                ).toLocaleString()} UGX`}\n              </td>\n            </tr>\n          )}\n          <tr className=\"text-success font600\">\n            <td className=\"\">Total Amount to Pay</td>\n            <td>{`${paymentReference?.amount?.toLocaleString()} UGX`}</td>\n          </tr>\n        </tbody>\n      </Table>\n    </div>\n  );\n};\n\nSinglePaymentReference.defaultProps = {\n  paymentReference: {},\n};\n\nSinglePaymentReference.propTypes = {\n  paymentReference: PropTypes.oneOfType([object]),\n};\n\nexport default SinglePaymentReference;\n"]},"metadata":{},"sourceType":"module"}