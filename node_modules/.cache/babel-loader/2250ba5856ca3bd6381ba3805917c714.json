{"ast":null,"code":"import{isEmpty}from'lodash';import React,{Suspense,useEffect}from'react';import{useDispatch,useSelector}from'react-redux';import{BrowserRouter as Router,Route,Switch}from'react-router-dom';import{useToasts}from'react-toast-notifications';import{PageLoader}from'./components/common';import{appActions}from'./config/actions';import RoutePaths from'./config/routes/RoutePaths';import Dashboard from'./containers/Dashboard';import PageNotFound from'./containers/Errors/PageNotFound';import usePrevious from'./containers/Hooks/usePrevious';import'./custom.scss';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var dispatch=useDispatch();var _useToasts=useToasts(),addToast=_useToasts.addToast,removeAllToasts=_useToasts.removeAllToasts;var _useSelector=useSelector(function(state){return state.server;}),serverSuccess=_useSelector.serverSuccess,serverError=_useSelector.serverError;var _useSelector2=useSelector(function(state){return state.app;}),metadata=_useSelector2.metadata,institutionStructure=_useSelector2.institutionStructure;var prevState=usePrevious({serverSuccess:serverSuccess,serverError:serverError});useEffect(function(){if(isEmpty(institutionStructure)){dispatch(appActions.getInstitutionStructure());}if(isEmpty(metadata)){dispatch(appActions.getMetadata());}},[]);useEffect(function(){if(!isEmpty(prevState)){if(!isEmpty(serverError)&&serverError!==prevState.serverError){var _serverError$server;removeAllToasts();addToast(serverError===null||serverError===void 0?void 0:(_serverError$server=serverError.server)===null||_serverError$server===void 0?void 0:_serverError$server.message,{autoDismiss:true,appearance:'error',autoDismissTimeout:6000});}if(!isEmpty(serverSuccess)&&serverSuccess!==prevState.serverSuccess){var _serverSuccess$server;addToast(serverSuccess===null||serverSuccess===void 0?void 0:(_serverSuccess$server=serverSuccess.server)===null||_serverSuccess$server===void 0?void 0:_serverSuccess$server.message,{autoDismiss:true,appearance:'success'});}}},[serverError,serverSuccess]);return/*#__PURE__*/_jsx(Suspense,{fallback:/*#__PURE__*/_jsx(PageLoader,{}),children:/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:RoutePaths.dashboard.path,component:Dashboard}),/*#__PURE__*/_jsx(Route,{path:\"*\",component:PageNotFound})]})})});}export default App;","map":{"version":3,"sources":["/Users/admin/Documents/react-projects/hesmis/hesmis-front/src/App.js"],"names":["isEmpty","React","Suspense","useEffect","useDispatch","useSelector","BrowserRouter","Router","Route","Switch","useToasts","PageLoader","appActions","RoutePaths","Dashboard","PageNotFound","usePrevious","App","dispatch","addToast","removeAllToasts","state","server","serverSuccess","serverError","app","metadata","institutionStructure","prevState","getInstitutionStructure","getMetadata","message","autoDismiss","appearance","autoDismissTimeout","dashboard","path"],"mappings":"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","sourcesContent":["import { isEmpty } from 'lodash';\nimport React, { Suspense, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { useToasts } from 'react-toast-notifications';\nimport { PageLoader } from './components/common';\nimport { appActions } from './config/actions';\nimport RoutePaths from './config/routes/RoutePaths';\nimport Dashboard from './containers/Dashboard';\nimport PageNotFound from './containers/Errors/PageNotFound';\nimport usePrevious from './containers/Hooks/usePrevious';\nimport './custom.scss';\n\nfunction App() {\n  const dispatch = useDispatch();\n  const { addToast, removeAllToasts } = useToasts();\n  const { serverSuccess, serverError } = useSelector((state) => state.server);\n  const { metadata, institutionStructure } = useSelector((state) => state.app);\n  const prevState = usePrevious({ serverSuccess, serverError });\n\n  useEffect(() => {\n    if (isEmpty(institutionStructure)) {\n      dispatch(appActions.getInstitutionStructure());\n    }\n    if (isEmpty(metadata)) {\n      dispatch(appActions.getMetadata());\n    }\n  }, []); \n\n  useEffect(() => {\n    if (!isEmpty(prevState)) {\n      if (!isEmpty(serverError) && serverError !== prevState.serverError) {\n        removeAllToasts();\n        addToast(serverError?.server?.message, {\n          autoDismiss: true,\n          appearance: 'error',\n          autoDismissTimeout: 6000,\n        });\n      }\n      if (\n        !isEmpty(serverSuccess) &&\n        serverSuccess !== prevState.serverSuccess\n      ) {\n        addToast(serverSuccess?.server?.message, {\n          autoDismiss: true,\n          appearance: 'success',\n        });\n      }\n    }\n  }, [serverError, serverSuccess]);\n\n  return (\n    <Suspense fallback={<PageLoader />}>\n      <Router>\n        <Switch>\n          <Route exact path={RoutePaths.dashboard.path} component={Dashboard} />\n          <Route path=\"*\" component={PageNotFound} />\n        </Switch>\n      </Router>\n    </Suspense>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}