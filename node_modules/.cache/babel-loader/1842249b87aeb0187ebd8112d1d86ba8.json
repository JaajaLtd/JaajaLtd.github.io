{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/react-projects/hesmis/hesmis-front/src/containers/RegistrationHistory/RegistrationStatusPopUp.jsx\",\n    _s = $RefreshSig$();\n\nimport { get, isEmpty } from 'lodash';\nimport PropTypes, { object, array } from 'prop-types';\nimport React from 'react';\nimport { Form, ModalBody, ModalFooter, Table } from 'react-bootstrap';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { CustomModal, SelectInput, SubmitButton } from '../../components/common';\nimport { settingActions } from '../../config/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegistrationStatusPopUp = ({\n  rowData,\n  setSelectedRow,\n  registrationStatusOptions,\n  selectedCourseUnits\n}) => {\n  _s();\n\n  const {\n    register,\n    errors,\n    handleSubmit\n  } = useForm();\n  const dispatch = useDispatch();\n\n  const handleSubmitForm = data => {\n    if (!isEmpty(data)) {\n      const newObjectKey = { ...rowData,\n        registrationStatus: registrationStatusOptions.find(status => status.value === data.registration_status)\n      };\n      const findCourseUnit = selectedCourseUnits.find(courseUnit => courseUnit.course_unit_id === rowData.course_unit_id);\n\n      if (!findCourseUnit) {\n        setSelectedRow([...selectedCourseUnits, newObjectKey]);\n      } else {\n        const changeValue = selectedCourseUnits.map(courseUnit => {\n          if (courseUnit.course_unit_id === findCourseUnit.course_unit_id) {\n            return { ...courseUnit,\n              registrationStatus: registrationStatusOptions.find(status => status.value === data.registration_status)\n            };\n          }\n\n          return courseUnit;\n        });\n        setSelectedRow(changeValue);\n      }\n\n      dispatch(dispatch(settingActions.setShowModal(false)));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(CustomModal, {\n      backdrop: \"static\",\n      keyboard: false,\n      title: \"SELECT REGISTRATION STATUS\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit(handleSubmitForm),\n        children: [/*#__PURE__*/_jsxDEV(ModalBody, {\n          children: [/*#__PURE__*/_jsxDEV(Table, {\n            size: \"sm\",\n            bordered: true,\n            responsive: true,\n            className: \"text-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              className: \"text-xs bg-light\",\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"CODE\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"COURSE TITLE\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"CU\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: rowData.course_unit_code\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: rowData.course_unit_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: rowData.credit_unit\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SelectInput, {\n            register: register({\n              required: 'Select Registration Status'\n            }),\n            name: \"registration_status\",\n            selectOptions: registrationStatusOptions,\n            label: \"Registration Status\",\n            error: get(errors, 'registration_status.message')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n          className: \"py-2 bg-light\",\n          children: /*#__PURE__*/_jsxDEV(SubmitButton, {\n            text: \"ADD COURSE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegistrationStatusPopUp, \"LYEeK5+8WC18oGsuci6THfVFzO8=\", false, function () {\n  return [useForm, useDispatch];\n});\n\n_c = RegistrationStatusPopUp;\nRegistrationStatusPopUp.defaultProps = {\n  registrationStatusOptions: [],\n  selectedCourseUnits: []\n};\nRegistrationStatusPopUp.propTypes = {\n  rowData: PropTypes.oneOfType([object]).isRequired,\n  setSelectedRow: PropTypes.func.isRequired,\n  registrationStatusOptions: PropTypes.oneOfType([array]),\n  selectedCourseUnits: PropTypes.oneOfType([array])\n};\nexport default RegistrationStatusPopUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegistrationStatusPopUp\");","map":{"version":3,"sources":["/Users/admin/Documents/react-projects/hesmis/hesmis-front/src/containers/RegistrationHistory/RegistrationStatusPopUp.jsx"],"names":["get","isEmpty","PropTypes","object","array","React","Form","ModalBody","ModalFooter","Table","useForm","useDispatch","CustomModal","SelectInput","SubmitButton","settingActions","RegistrationStatusPopUp","rowData","setSelectedRow","registrationStatusOptions","selectedCourseUnits","register","errors","handleSubmit","dispatch","handleSubmitForm","data","newObjectKey","registrationStatus","find","status","value","registration_status","findCourseUnit","courseUnit","course_unit_id","changeValue","map","setShowModal","course_unit_code","course_unit_name","credit_unit","required","defaultProps","propTypes","oneOfType","isRequired","func"],"mappings":"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","sourcesContent":["import { get, isEmpty } from 'lodash';\nimport PropTypes, { object, array } from 'prop-types';\nimport React from 'react';\nimport { Form, ModalBody, ModalFooter, Table } from 'react-bootstrap';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport {\n  CustomModal,\n  SelectInput,\n  SubmitButton,\n} from '../../components/common';\nimport { settingActions } from '../../config/actions';\n\nconst RegistrationStatusPopUp = ({\n  rowData,\n  setSelectedRow,\n  registrationStatusOptions,\n  selectedCourseUnits,\n}) => {\n  const { register, errors, handleSubmit } = useForm();\n  const dispatch = useDispatch();\n\n  const handleSubmitForm = (data) => {\n    if (!isEmpty(data)) {\n      const newObjectKey = {\n        ...rowData,\n        registrationStatus: registrationStatusOptions.find(\n          (status) => status.value === data.registration_status\n        ),\n      };\n      const findCourseUnit = selectedCourseUnits.find(\n        (courseUnit) => courseUnit.course_unit_id === rowData.course_unit_id\n      );\n      if (!findCourseUnit) {\n        setSelectedRow([...selectedCourseUnits, newObjectKey]);\n      } else {\n        const changeValue = selectedCourseUnits.map((courseUnit) => {\n          if (courseUnit.course_unit_id === findCourseUnit.course_unit_id) {\n            return {\n              ...courseUnit,\n              registrationStatus: registrationStatusOptions.find(\n                (status) => status.value === data.registration_status\n              ),\n            };\n          }\n          return courseUnit;\n        });\n        setSelectedRow(changeValue);\n      }\n      dispatch(dispatch(settingActions.setShowModal(false)));\n    }\n  };\n  return (\n    <div>\n      <CustomModal\n        backdrop=\"static\"\n        keyboard={false}\n        title=\"SELECT REGISTRATION STATUS\"\n      >\n        <Form onSubmit={handleSubmit(handleSubmitForm)}>\n          <ModalBody>\n            <Table size=\"sm\" bordered responsive className=\"text-sm\">\n              <thead className=\"text-xs bg-light\">\n                <tr>\n                  <th>CODE</th>\n                  <th>COURSE TITLE</th>\n                  <th>CU</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td>{rowData.course_unit_code}</td>\n                  <td>{rowData.course_unit_name}</td>\n                  <td>{rowData.credit_unit}</td>\n                </tr>\n              </tbody>\n            </Table>\n\n            <SelectInput\n              register={register({\n                required: 'Select Registration Status',\n              })}\n              name=\"registration_status\"\n              selectOptions={registrationStatusOptions}\n              label=\"Registration Status\"\n              error={get(errors, 'registration_status.message')}\n            />\n          </ModalBody>\n          <ModalFooter className=\"py-2 bg-light\">\n            <SubmitButton text=\"ADD COURSE\" />\n          </ModalFooter>\n        </Form>\n      </CustomModal>\n    </div>\n  );\n};\n\nRegistrationStatusPopUp.defaultProps = {\n  registrationStatusOptions: [],\n  selectedCourseUnits: [],\n};\n\nRegistrationStatusPopUp.propTypes = {\n  rowData: PropTypes.oneOfType([object]).isRequired,\n  setSelectedRow: PropTypes.func.isRequired,\n  registrationStatusOptions: PropTypes.oneOfType([array]),\n  selectedCourseUnits: PropTypes.oneOfType([array]),\n};\n\nexport default RegistrationStatusPopUp;\n"]},"metadata":{},"sourceType":"module"}