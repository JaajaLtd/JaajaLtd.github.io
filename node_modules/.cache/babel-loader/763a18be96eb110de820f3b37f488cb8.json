{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/react-projects/hesmis-front/src/components/common/InputText.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { isEmpty } from 'lodash';\nimport PropTypes, { any, array } from 'prop-types';\nimport Select from 'react-select';\nimport CreatableSelect from 'react-select/creatable';\nimport { FormLabel, Form } from 'react-bootstrap';\nimport ReactDatePicker from 'react-datepicker';\nimport PhoneInput from 'react-phone-input-2';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport 'react-phone-input-2/lib/style.css';\nimport { Controller } from 'react-hook-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InputText = ({\n  label,\n  error,\n  register,\n  name,\n  type,\n  rows,\n  handleChange,\n  placeholder,\n  className,\n  selectOptions,\n  selectType,\n  selectHandler,\n  isMulti,\n  isSearchable,\n  inline,\n  autoComplete,\n  defaultValue,\n  requiredField,\n  ...props\n}) => {\n  _s();\n\n  const [startDate, setStartDate] = useState(null);\n\n  const renderSelect = selector => {\n    return selector === 'creatable' ? /*#__PURE__*/_jsxDEV(CreatableSelect, {\n      options: selectOptions,\n      ref: register,\n      name: name,\n      placeholder: placeholder,\n      isInvalid: !!error,\n      isClearable: true,\n      isMulti: isMulti,\n      isSearchable: isSearchable,\n      onChange: selectHandler,\n      defaultValue: defaultValue,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(Select, {\n      options: selectOptions,\n      ref: register,\n      name: name,\n      placeholder: placeholder,\n      isInvalid: !!error,\n      theme: theme => ({ ...theme,\n        borderRadius: 0\n      }),\n      isClearable: true,\n      isSearchable: isSearchable,\n      isMulti: isMulti,\n      onChange: selectHandler,\n      defaultValue: defaultValue,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  };\n\n  const setClassName = () => {\n    let newClassName = `form-control form-control-sm text-sm font500 w-100 rounded-0 ${className}`;\n    if (error) newClassName = `form-control form-control-sm text-sm font500 w-100 rounded-0 ${className} is-invalid`;\n    return newClassName;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form.Group, {\n    className: `${inline ? 'row my-2' : 'form-group mb-2'}`,\n    children: [label && /*#__PURE__*/_jsxDEV(FormLabel, {\n      htmlFor: name,\n      className: `font500 text-muted text-sm ${inline ? 'col-md-4 my-auto' : 'mb-1'}`,\n      style: {\n        textAlign: 'left !important'\n      },\n      children: [label, requiredField && /*#__PURE__*/_jsxDEV(\"strong\", {\n        className: \"text-danger ml-1\",\n        children: \"*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: inline ? 'col-md-8' : '',\n      children: [type === 'select' && renderSelect(selectType), type !== 'textarea' && type !== 'select' && type !== 'date' && type !== 'tel' && /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: type,\n        name: name,\n        id: name,\n        ref: register,\n        onChange: handleChange,\n        className: setClassName(),\n        autoComplete: autoComplete,\n        defaultValue: defaultValue,\n        placeholder: placeholder,\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this), type === 'textarea' && /*#__PURE__*/_jsxDEV(Form.Control, {\n        as: \"textarea\",\n        name: name,\n        rows: 3,\n        ref: register,\n        onChange: handleChange,\n        defaultValue: defaultValue,\n        className: setClassName(),\n        placeholder: placeholder,\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), type === 'date' && /*#__PURE__*/_jsxDEV(ReactDatePicker, {\n        selected: startDate,\n        onChange: date => setStartDate(date),\n        peekNextMonth: true,\n        showMonthDropdown: true,\n        showYearDropdown: true,\n        dropdownMode: \"select\",\n        defaultValue: defaultValue,\n        placeholder: placeholder,\n        className: setClassName(),\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this), type === 'tel' && /*#__PURE__*/_jsxDEV(Controller, {\n        as: PhoneInput,\n        country: \"ug\",\n        inputProps: {\n          className: setClassName(),\n          name\n        },\n        name: name,\n        defaultValue: defaultValue,\n        enableSearch: true,\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this), !isEmpty(error) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `font500 ${type === 'select' || type === 'tel' ? 'mt-1' : 'invalid-feedback'}`,\n        style: type === 'select' || type === 'tel' ? {\n          color: '#ff3838',\n          fontSize: '12px'\n        } : {},\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InputText, \"BPrYhHKUZQYajP2ECsRfGVAmWSA=\");\n\n_c = InputText;\nInputText.defaultProps = {\n  type: 'text',\n  label: null,\n  error: null,\n  handleChange: null,\n  autoComplete: 'off',\n  defaultValue: null,\n  placeholder: null,\n  className: null,\n  isSearchable: true,\n  isMulti: false,\n  selectHandler: null,\n  selectType: null,\n  selectOptions: [],\n  inline: false,\n  register: null,\n  name: null,\n  rows: 5,\n  requiredField: false\n};\nInputText.propTypes = {\n  type: PropTypes.string,\n  register: PropTypes.func,\n  name: PropTypes.string,\n  label: PropTypes.string,\n  error: PropTypes.string,\n  handleChange: PropTypes.func,\n  defaultValue: PropTypes.oneOfType([any]),\n  placeholder: PropTypes.string,\n  className: PropTypes.string,\n  selectOptions: PropTypes.oneOfType([array]),\n  selectType: PropTypes.string,\n  selectHandler: PropTypes.func,\n  isMulti: PropTypes.bool,\n  isSearchable: PropTypes.bool,\n  inline: PropTypes.bool,\n  autoComplete: PropTypes.string,\n  rows: PropTypes.number,\n  requiredField: PropTypes.bool\n};\nexport default InputText;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputText\");","map":{"version":3,"sources":["/Users/admin/Documents/react-projects/hesmis-front/src/components/common/InputText.jsx"],"names":["React","useState","isEmpty","PropTypes","any","array","Select","CreatableSelect","FormLabel","Form","ReactDatePicker","PhoneInput","Controller","InputText","label","error","register","name","type","rows","handleChange","placeholder","className","selectOptions","selectType","selectHandler","isMulti","isSearchable","inline","autoComplete","defaultValue","requiredField","props","startDate","setStartDate","renderSelect","selector","theme","borderRadius","setClassName","newClassName","textAlign","date","color","fontSize","defaultProps","propTypes","string","func","oneOfType","bool","number"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { isEmpty } from 'lodash';\nimport PropTypes, { any, array } from 'prop-types';\nimport Select from 'react-select';\nimport CreatableSelect from 'react-select/creatable';\nimport { FormLabel, Form } from 'react-bootstrap';\nimport ReactDatePicker from 'react-datepicker';\nimport PhoneInput from 'react-phone-input-2';\n\nimport 'react-datepicker/dist/react-datepicker.css';\nimport 'react-phone-input-2/lib/style.css';\nimport { Controller } from 'react-hook-form';\n\nconst InputText = ({\n  label,\n  error,\n  register,\n  name,\n  type,\n  rows,\n  handleChange,\n  placeholder,\n  className,\n  selectOptions,\n  selectType,\n  selectHandler,\n  isMulti,\n  isSearchable,\n  inline,\n  autoComplete,\n  defaultValue,\n  requiredField,\n  ...props\n}) => {\n  const [startDate, setStartDate] = useState(null);\n\n  const renderSelect = (selector) => {\n    return selector === 'creatable' ? (\n      <CreatableSelect\n        options={selectOptions}\n        ref={register}\n        name={name}\n        placeholder={placeholder}\n        isInvalid={!!error}\n        isClearable\n        isMulti={isMulti}\n        isSearchable={isSearchable}\n        onChange={selectHandler}\n        defaultValue={defaultValue}\n        {...props}\n      />\n    ) : (\n      <Select\n        options={selectOptions}\n        ref={register}\n        name={name}\n        placeholder={placeholder}\n        isInvalid={!!error}\n        theme={(theme) => ({\n          ...theme,\n          borderRadius: 0,\n        })}\n        isClearable\n        isSearchable={isSearchable}\n        isMulti={isMulti}\n        onChange={selectHandler}\n        defaultValue={defaultValue}\n        {...props}\n      />\n    );\n  };\n\n  const setClassName = () => {\n    let newClassName = `form-control form-control-sm text-sm font500 w-100 rounded-0 ${className}`;\n    if (error)\n      newClassName = `form-control form-control-sm text-sm font500 w-100 rounded-0 ${className} is-invalid`;\n    return newClassName;\n  };\n\n  return (\n    <Form.Group className={`${inline ? 'row my-2' : 'form-group mb-2'}`}>\n      {label && (\n        <FormLabel\n          htmlFor={name}\n          className={`font500 text-muted text-sm ${\n            inline ? 'col-md-4 my-auto' : 'mb-1'\n          }`}\n          style={{ textAlign: 'left !important' }}\n        >\n          {label}\n          {requiredField && <strong className=\"text-danger ml-1\">*</strong>}\n        </FormLabel>\n      )}\n      <div className={inline ? 'col-md-8' : ''}>\n        {type === 'select' && renderSelect(selectType)}\n        {type !== 'textarea' &&\n          type !== 'select' &&\n          type !== 'date' &&\n          type !== 'tel' && (\n            <Form.Control\n              type={type}\n              name={name}\n              id={name}\n              ref={register}\n              onChange={handleChange}\n              className={setClassName()}\n              autoComplete={autoComplete}\n              defaultValue={defaultValue}\n              placeholder={placeholder}\n              {...props}\n            />\n          )}\n        {type === 'textarea' && (\n          <Form.Control\n            as=\"textarea\"\n            name={name}\n            rows={3}\n            ref={register}\n            onChange={handleChange}\n            defaultValue={defaultValue}\n            className={setClassName()}\n            placeholder={placeholder}\n            {...props}\n          />\n        )}\n        {type === 'date' && (\n          <ReactDatePicker\n            selected={startDate}\n            onChange={(date) => setStartDate(date)}\n            peekNextMonth\n            showMonthDropdown\n            showYearDropdown\n            dropdownMode=\"select\"\n            defaultValue={defaultValue}\n            placeholder={placeholder}\n            className={setClassName()}\n            {...props}\n          />\n        )}\n        {type === 'tel' && (\n          <Controller\n            as={PhoneInput}\n            country=\"ug\"\n            inputProps={{\n              className: setClassName(),\n              name,\n            }}\n            name={name}\n            defaultValue={defaultValue}\n            enableSearch\n            {...props}\n          />\n        )}\n        {!isEmpty(error) && (\n          <div\n            className={`font500 ${\n              type === 'select' || type === 'tel' ? 'mt-1' : 'invalid-feedback'\n            }`}\n            style={\n              type === 'select' || type === 'tel'\n                ? { color: '#ff3838', fontSize: '12px' }\n                : {}\n            }\n          >\n            {error}\n          </div>\n        )}\n      </div>\n    </Form.Group>\n  );\n};\n\nInputText.defaultProps = {\n  type: 'text',\n  label: null,\n  error: null,\n  handleChange: null,\n  autoComplete: 'off',\n  defaultValue: null,\n  placeholder: null,\n  className: null,\n  isSearchable: true,\n  isMulti: false,\n  selectHandler: null,\n  selectType: null,\n  selectOptions: [],\n  inline: false,\n  register: null,\n  name: null,\n  rows: 5,\n  requiredField: false,\n};\n\nInputText.propTypes = {\n  type: PropTypes.string,\n  register: PropTypes.func,\n  name: PropTypes.string,\n  label: PropTypes.string,\n  error: PropTypes.string,\n  handleChange: PropTypes.func,\n  defaultValue: PropTypes.oneOfType([any]),\n  placeholder: PropTypes.string,\n  className: PropTypes.string,\n  selectOptions: PropTypes.oneOfType([array]),\n  selectType: PropTypes.string,\n  selectHandler: PropTypes.func,\n  isMulti: PropTypes.bool,\n  isSearchable: PropTypes.bool,\n  inline: PropTypes.bool,\n  autoComplete: PropTypes.string,\n  rows: PropTypes.number,\n  requiredField: PropTypes.bool,\n};\n\nexport default InputText;\n"]},"metadata":{},"sourceType":"module"}