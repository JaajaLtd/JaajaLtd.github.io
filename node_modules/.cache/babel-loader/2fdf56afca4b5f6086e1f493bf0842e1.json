{"ast":null,"code":"import _slicedToArray from\"/Users/admin/Documents/react-projects/hesmis/hesmis-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{isEmpty}from'lodash';import React,{useEffect,useState}from'react';import{Card}from'react-bootstrap';import DataTable from'react-data-table-component';import{FaMinus,FaPlus,FaPaperclip}from'react-icons/fa';import{useDispatch,useSelector}from'react-redux';import{DataNotFound,DataSpinner,ReloadButton,TabMenu}from'../../components/common';import{paymentActions}from'../../config/actions';import TransactionTables from'./TransactionTables';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var MyTransactions=function MyTransactions(){var dispatch=useDispatch();var _useSelector=useSelector(function(state){return state.myTransaction;}),transactions=_useSelector.transactions,loading=_useSelector.loading;var _useState=useState('data'),_useState2=_slicedToArray(_useState,2),currentMenu=_useState2[0],setCurrentMenu=_useState2[1];var getTransactions=function getTransactions(){return dispatch(paymentActions.getMyTransactions());};useEffect(function(){if(isEmpty(transactions))getTransactions();},[]);var columns=[{name:'ACADEMIC YEAR',cell:function cell(transaction){var semester=transaction.semester,academicYear=transaction.academic_year,studyYear=transaction.programme_study_years;return/*#__PURE__*/_jsxs(\"span\",{className:\"font600 text-info\",children:[/*#__PURE__*/_jsx(FaPaperclip,{className:\"me-1\"}),\"\".concat(studyYear,\" - \").concat(semester,\" - \").concat(academicYear)]});}}];if(currentMenu==='deposits'){columns=[{name:'Invoice No',sortable:true,cell:function cell(row){var txnDate=row.transaction_date;return/*#__PURE__*/_jsx(\"span\",{className:\"font500 text-uppercase text-info\",children:\"\".concat(txnDate,\" Fees Deposits\")});}}];}return/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(TabMenu,{currentMenu:currentMenu,setCurrentMenu:setCurrentMenu,menus:[{title:'Invoice Payments',action:'data'},{title:'Fees Deposits',action:'deposits'}],children:/*#__PURE__*/_jsx(\"div\",{className:\"card-options\",children:/*#__PURE__*/_jsx(ReloadButton,{loading:loading,onClick:function onClick(){return getTransactions();}})})}),/*#__PURE__*/_jsx(Card.Body,{className:\"p-0\",children:/*#__PURE__*/_jsx(DataTable,{data:transactions[currentMenu],noHeader:true,noTableHead:true,progressPending:loading&&isEmpty(transactions[currentMenu]),progressComponent:/*#__PURE__*/_jsx(DataSpinner,{}),expandableRows:true,columns:columns,noDataComponent:/*#__PURE__*/_jsx(DataNotFound,{message:\"YOU HAVE NO TRANSACTION HISTORY\"}),expandableRowsComponent:/*#__PURE__*/_jsx(TransactionTables,{}),expandableRowExpanded:function expandableRowExpanded(){return true;},expandOnRowClicked:true,striped:true,expandableIcon:{expanded:/*#__PURE__*/_jsx(FaMinus,{className:\"text-info\"}),collapsed:/*#__PURE__*/_jsx(FaPlus,{className:\"text-info\"})}})})]});};export default MyTransactions;","map":{"version":3,"sources":["/Users/admin/Documents/react-projects/hesmis/hesmis-front/src/containers/Payments/MyTransactions.jsx"],"names":["isEmpty","React","useEffect","useState","Card","DataTable","FaMinus","FaPlus","FaPaperclip","useDispatch","useSelector","DataNotFound","DataSpinner","ReloadButton","TabMenu","paymentActions","TransactionTables","MyTransactions","dispatch","state","myTransaction","transactions","loading","currentMenu","setCurrentMenu","getTransactions","getMyTransactions","columns","name","cell","transaction","semester","academicYear","academic_year","studyYear","programme_study_years","sortable","row","txnDate","transaction_date","title","action","expanded","collapsed"],"mappings":"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","sourcesContent":["import { isEmpty } from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport { Card } from 'react-bootstrap';\nimport DataTable from 'react-data-table-component';\nimport { FaMinus, FaPlus, FaPaperclip } from 'react-icons/fa';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  DataNotFound,\n  DataSpinner,\n  ReloadButton,\n  TabMenu,\n} from '../../components/common';\nimport { paymentActions } from '../../config/actions';\nimport TransactionTables from './TransactionTables';\n\nconst MyTransactions = () => {\n  const dispatch = useDispatch();\n  const { transactions, loading } = useSelector((state) => state.myTransaction);\n  const [currentMenu, setCurrentMenu] = useState('data');\n\n  const getTransactions = () => dispatch(paymentActions.getMyTransactions());\n\n  useEffect(() => {\n    if (isEmpty(transactions)) getTransactions();\n  }, []);\n\n  let columns = [\n    {\n      name: 'ACADEMIC YEAR',\n      cell(transaction) {\n        const {\n          semester,\n          academic_year: academicYear,\n          programme_study_years: studyYear,\n        } = transaction;\n        return (\n          <span className=\"font600 text-info\">\n            <FaPaperclip className=\"me-1\" />\n            {`${studyYear} - ${semester} - ${academicYear}`}\n          </span>\n        );\n      },\n    },\n  ];\n\n  if (currentMenu === 'deposits') {\n    columns = [\n      {\n        name: 'Invoice No',\n        sortable: true,\n        cell(row) {\n          const { transaction_date: txnDate } = row;\n          return (\n            <span className=\"font500 text-uppercase text-info\">\n              {`${txnDate} Fees Deposits`}\n            </span>\n          );\n        },\n      },\n    ];\n  }\n\n  return (\n    <Card>\n      <TabMenu\n        currentMenu={currentMenu}\n        setCurrentMenu={setCurrentMenu}\n        menus={[\n          {\n            title: 'Invoice Payments',\n            action: 'data',\n          },\n          {\n            title: 'Fees Deposits',\n            action: 'deposits',\n          },\n        ]}\n      >\n        <div className=\"card-options\">\n          <ReloadButton loading={loading} onClick={() => getTransactions()} />\n        </div>\n      </TabMenu>\n\n      <Card.Body className=\"p-0\">\n        <DataTable\n          data={transactions[currentMenu]}\n          noHeader\n          noTableHead\n          progressPending={loading && isEmpty(transactions[currentMenu])}\n          progressComponent={<DataSpinner />}\n          expandableRows\n          columns={columns}\n          noDataComponent={\n            <DataNotFound message=\"YOU HAVE NO TRANSACTION HISTORY\" />\n          }\n          expandableRowsComponent={<TransactionTables />}\n          expandableRowExpanded={() => true}\n          expandOnRowClicked\n          striped\n          expandableIcon={{\n            expanded: <FaMinus className=\"text-info\" />,\n            collapsed: <FaPlus className=\"text-info\" />,\n          }}\n        />\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default MyTransactions;\n"]},"metadata":{},"sourceType":"module"}