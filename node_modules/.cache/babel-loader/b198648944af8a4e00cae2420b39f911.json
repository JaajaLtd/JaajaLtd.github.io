{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/react-projects/hesmis-front/src/containers/Auth/LoginForm.jsx\",\n    _s = $RefreshSig$();\n\nimport { get } from 'lodash';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Card, Form } from 'react-bootstrap';\nimport { useForm } from 'react-hook-form';\nimport { FaSignInAlt } from 'react-icons/fa';\nimport { useSelector } from 'react-redux';\nimport { InputText, SubmitButton } from '../../components/common';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginForm = ({\n  onSubmit\n}) => {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  const loginIn = useSelector(state => state.auth.loginIn);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"bg-white rounded \",\n    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n      className: \"py-3 border-0 rounded-top\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-100 text-center text-md text-info font600\",\n        children: \"LOGIN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      className: \"pt-2\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(InputText, {\n          name: \"username\",\n          label: \"Username\",\n          requiredField: true,\n          register: register({\n            required: 'Username field is required'\n          }),\n          error: get(errors, 'username.message')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputText, {\n          type: \"password\",\n          name: \"password\",\n          label: \"Password\",\n          requiredField: true,\n          register: register({\n            required: 'Password is required'\n          }),\n          error: get(errors, 'password.message')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n          className: \"text-uppercase text-white text-sm mt-3 w-100 mb-2 font600\",\n          text: \"Login\",\n          loading: loginIn,\n          iconBefore: /*#__PURE__*/_jsxDEV(FaSignInAlt, {\n            className: \"me-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this),\n          loadingText: \"Signing in...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginForm, \"6wrGxInGi+80mDW0nnqb7oz+ffQ=\", false, function () {\n  return [useForm, useSelector];\n});\n\n_c = LoginForm;\nLoginForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired\n};\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/admin/Documents/react-projects/hesmis-front/src/containers/Auth/LoginForm.jsx"],"names":["get","PropTypes","React","Card","Form","useForm","FaSignInAlt","useSelector","InputText","SubmitButton","LoginForm","onSubmit","register","handleSubmit","errors","loginIn","state","auth","required","propTypes","func","isRequired"],"mappings":";;;AAAA,SAASA,GAAT,QAAoB,QAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,iBAA3B;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,yBAAxC;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAClC,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA;AAA1B,MAAqCT,OAAO,EAAlD;AACA,QAAMU,OAAO,GAAGR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWF,OAAvB,CAA3B;AAEA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,mBAAhB;AAAA,4BACE,QAAC,IAAD,CAAM,MAAN;AAAa,MAAA,SAAS,EAAC,2BAAvB;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,6CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,IAAD,CAAM,IAAN;AAAW,MAAA,SAAS,EAAC,MAArB;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAEF,YAAY,CAACF,QAAD,CAA5B;AAAA,gCACE,QAAC,SAAD;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,KAAK,EAAC,UAFR;AAGE,UAAA,aAAa,MAHf;AAIE,UAAA,QAAQ,EAAEC,QAAQ,CAAC;AACjBM,YAAAA,QAAQ,EAAE;AADO,WAAD,CAJpB;AAOE,UAAA,KAAK,EAAElB,GAAG,CAACc,MAAD,EAAS,kBAAT;AAPZ;AAAA;AAAA;AAAA;AAAA,gBADF,eAWE,QAAC,SAAD;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,IAAI,EAAC,UAFP;AAGE,UAAA,KAAK,EAAC,UAHR;AAIE,UAAA,aAAa,MAJf;AAKE,UAAA,QAAQ,EAAEF,QAAQ,CAAC;AACjBM,YAAAA,QAAQ,EAAE;AADO,WAAD,CALpB;AAQE,UAAA,KAAK,EAAElB,GAAG,CAACc,MAAD,EAAS,kBAAT;AARZ;AAAA;AAAA;AAAA;AAAA,gBAXF,eAsBE,QAAC,YAAD;AACE,UAAA,SAAS,EAAC,2DADZ;AAEE,UAAA,IAAI,EAAC,OAFP;AAGE,UAAA,OAAO,EAAEC,OAHX;AAIE,UAAA,UAAU,eAAE,QAAC,WAAD;AAAa,YAAA,SAAS,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,kBAJd;AAKE,UAAA,WAAW,EAAC;AALd;AAAA;AAAA;AAAA;AAAA,gBAtBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuCD,CA3CD;;GAAML,S;UACuCL,O,EAC3BE,W;;;KAFZG,S;AA6CNA,SAAS,CAACS,SAAV,GAAsB;AACpBR,EAAAA,QAAQ,EAAEV,SAAS,CAACmB,IAAV,CAAeC;AADL,CAAtB;AAIA,eAAeX,SAAf","sourcesContent":["import { get } from 'lodash';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Card, Form } from 'react-bootstrap';\nimport { useForm } from 'react-hook-form';\nimport { FaSignInAlt } from 'react-icons/fa';\nimport { useSelector } from 'react-redux';\nimport { InputText, SubmitButton } from '../../components/common';\n\nconst LoginForm = ({ onSubmit }) => {\n  const { register, handleSubmit, errors } = useForm();\n  const loginIn = useSelector((state) => state.auth.loginIn);\n\n  return (\n    <Card className=\"bg-white rounded \">\n      <Card.Header className=\"py-3 border-0 rounded-top\">\n        <div className=\"w-100 text-center text-md text-info font600\">LOGIN</div>\n      </Card.Header>\n      <Card.Body className=\"pt-2\">\n        <Form onSubmit={handleSubmit(onSubmit)}>\n          <InputText\n            name=\"username\"\n            label=\"Username\"\n            requiredField\n            register={register({\n              required: 'Username field is required',\n            })}\n            error={get(errors, 'username.message')}\n          />\n\n          <InputText\n            type=\"password\"\n            name=\"password\"\n            label=\"Password\"\n            requiredField\n            register={register({\n              required: 'Password is required',\n            })}\n            error={get(errors, 'password.message')}\n          />\n\n          <SubmitButton\n            className=\"text-uppercase text-white text-sm mt-3 w-100 mb-2 font600\"\n            text=\"Login\"\n            loading={loginIn}\n            iconBefore={<FaSignInAlt className=\"me-1\" />}\n            loadingText=\"Signing in...\"\n          />\n        </Form>\n      </Card.Body>\n    </Card>\n  );\n};\n\nLoginForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}