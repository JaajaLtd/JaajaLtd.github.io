{"ast":null,"code":"import _slicedToArray from\"/Users/admin/Documents/react-projects/hesmis/hesmis-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{LoadingOutlined,UserOutlined}from'@ant-design/icons';import{isEmpty}from'lodash';import React,{useEffect,useState}from'react';import{Button,Container}from'react-bootstrap';import{FaSignInAlt}from'react-icons/fa';import{useDispatch,useSelector}from'react-redux';import AlertMessage from'../../components/common/AlertMessage';import ReloadButton from'../../components/common/ReloadButton';import{appActions,authActions}from'../../config/actions';import{clearToken,getAccessToken}from'../../config/services/storageService';import usePrevious from'../Hooks/usePrevious';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var AuthUserLoader=function AuthUserLoader(){var dispatch=useDispatch();var _useSelector=useSelector(function(state){return state.auth;}),authUser=_useSelector.authUser,authUserError=_useSelector.authUserError,isAuthenticated=_useSelector.isAuthenticated,gettingAuthUser=_useSelector.gettingAuthUser;var _useSelector2=useSelector(function(state){return state.app;}),institutionStructure=_useSelector2.institutionStructure,gettingInstitutionStructure=_useSelector2.gettingInstitutionStructure;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),errorMessage=_useState2[0],setErrorMessage=_useState2[1];var prevState=usePrevious({authUserError:authUserError});var accessToken=getAccessToken();useEffect(function(){if(isEmpty(institutionStructure)){dispatch(appActions.getInstitutionStructure());}if(isEmpty(authUser)&&!isEmpty(accessToken)&&isAuthenticated===true){dispatch(authActions.getAuthUser());}},[]);var logoutCurrentUser=function logoutCurrentUser(){clearToken();dispatch(authActions.setIsAuthenticated(false));};useEffect(function(){setErrorMessage(null);if(isEmpty(accessToken)){logoutCurrentUser();}else if(!isEmpty(prevState)&&!isEmpty(authUserError)&&prevState.authUserError!==authUserError){var _authUserError$error,_authUserError$server;setErrorMessage((authUserError===null||authUserError===void 0?void 0:(_authUserError$error=authUserError.error)===null||_authUserError$error===void 0?void 0:_authUserError$error.message)||(authUserError===null||authUserError===void 0?void 0:(_authUserError$server=authUserError.server)===null||_authUserError$server===void 0?void 0:_authUserError$server.message));}},[authUserError,accessToken]);return/*#__PURE__*/_jsx(\"div\",{className:\"vh-100 text-center bg-light d-flex m-0 p-4\",children:/*#__PURE__*/_jsxs(Container,{className:\"align-middle my-auto mx-auto\",children:[/*#__PURE__*/_jsx(UserOutlined,{className:\"display-2 text-primary\"}),(gettingAuthUser||gettingInstitutionStructure)&&/*#__PURE__*/_jsxs(\"div\",{className:\"text-center text-sm my-1 text-uppercase text-primary font500\",children:[/*#__PURE__*/_jsx(LoadingOutlined,{}),/*#__PURE__*/_jsx(\"div\",{className:\"font600 d-inline ms-2\",children:\"Loading Your Profile...\"})]}),errorMessage&&/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"font600 text-uppercase text-sm text-info my-3\",children:\"Oops... We are Unable to Load your Profile\"}),/*#__PURE__*/_jsx(AlertMessage,{message:errorMessage,className:\"text-sm font500 py-1\"}),/*#__PURE__*/_jsx(ReloadButton,{loading:gettingAuthUser,text:\"Reload Profile\",size:\"sm\",className:\"d-inline me-2 py-1 text-sm font600 text-capitalize\",onClick:function onClick(){return dispatch(authActions.getAuthUser());}}),/*#__PURE__*/_jsxs(Button,{className:\"d-inline py-1 text-sm font600 text-capitalize\",variant:\"danger\",size:\"sm\",onClick:logoutCurrentUser,children:[/*#__PURE__*/_jsx(FaSignInAlt,{className:\"me-1\"}),\"Log Out\"]})]})]})});};export default AuthUserLoader;","map":{"version":3,"sources":["/Users/admin/Documents/react-projects/hesmis/hesmis-front/src/containers/Dashboard/AuthUserLoader.jsx"],"names":["LoadingOutlined","UserOutlined","isEmpty","React","useEffect","useState","Button","Container","FaSignInAlt","useDispatch","useSelector","AlertMessage","ReloadButton","appActions","authActions","clearToken","getAccessToken","usePrevious","AuthUserLoader","dispatch","state","auth","authUser","authUserError","isAuthenticated","gettingAuthUser","app","institutionStructure","gettingInstitutionStructure","errorMessage","setErrorMessage","prevState","accessToken","getInstitutionStructure","getAuthUser","logoutCurrentUser","setIsAuthenticated","error","message","server"],"mappings":"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","sourcesContent":["import { LoadingOutlined, UserOutlined } from '@ant-design/icons';\nimport { isEmpty } from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport { Button, Container } from 'react-bootstrap';\nimport { FaSignInAlt } from 'react-icons/fa';\nimport { useDispatch, useSelector } from 'react-redux';\nimport  AlertMessage from '../../components/common/AlertMessage';\nimport ReloadButton  from '../../components/common/ReloadButton';\nimport { appActions, authActions } from '../../config/actions';\nimport {\n  clearToken,\n  getAccessToken,\n} from '../../config/services/storageService';\nimport usePrevious from '../Hooks/usePrevious';\n\nconst AuthUserLoader = () => {\n  const dispatch = useDispatch();\n  const { authUser, authUserError, isAuthenticated, gettingAuthUser } =\n    useSelector((state) => state.auth);\n  const { institutionStructure, gettingInstitutionStructure } = useSelector(\n    (state) => state.app\n  );\n  const [errorMessage, setErrorMessage] = useState(null);\n  const prevState = usePrevious({ authUserError });\n  const accessToken = getAccessToken();\n\n  useEffect(() => {\n    if (isEmpty(institutionStructure)) {\n      dispatch(appActions.getInstitutionStructure());\n    }\n    if (\n      isEmpty(authUser) &&\n      !isEmpty(accessToken) &&\n      isAuthenticated === true\n    ) {\n      dispatch(authActions.getAuthUser());\n    }\n  }, []);\n\n  const logoutCurrentUser = () => {\n    clearToken();\n    dispatch(authActions.setIsAuthenticated(false));\n  };\n\n  useEffect(() => {\n    setErrorMessage(null);\n    if (isEmpty(accessToken)) {\n      logoutCurrentUser();\n    } else if (\n      !isEmpty(prevState) &&\n      !isEmpty(authUserError) &&\n      prevState.authUserError !== authUserError\n    ) {\n      setErrorMessage(\n        authUserError?.error?.message || authUserError?.server?.message\n      );\n    }\n  }, [authUserError, accessToken]);\n\n  return (\n    <div className=\"vh-100 text-center bg-light d-flex m-0 p-4\">\n      <Container className=\"align-middle my-auto mx-auto\">\n        <UserOutlined className=\"display-2 text-primary\" />\n\n        {(gettingAuthUser || gettingInstitutionStructure) && (\n          <div className=\"text-center text-sm my-1 text-uppercase text-primary font500\">\n            <LoadingOutlined />\n            <div className=\"font600 d-inline ms-2\">Loading Your Profile...</div>\n          </div>\n        )}\n\n        {errorMessage && (\n          <div className=\"text-center\">\n            <div className=\"font600 text-uppercase text-sm text-info my-3\">\n              Oops... We are Unable to Load your Profile\n            </div>\n            <AlertMessage\n              message={errorMessage}\n              className=\"text-sm font500 py-1\"\n            />\n\n            <ReloadButton\n              loading={gettingAuthUser}\n              text=\"Reload Profile\"\n              size=\"sm\"\n              className=\"d-inline me-2 py-1 text-sm font600 text-capitalize\"\n              onClick={() => dispatch(authActions.getAuthUser())}\n            />\n\n            <Button\n              className=\"d-inline py-1 text-sm font600 text-capitalize\"\n              variant=\"danger\"\n              size=\"sm\"\n              onClick={logoutCurrentUser}\n            >\n              <FaSignInAlt className=\"me-1\" />\n              Log Out\n            </Button>\n          </div>\n        )}\n      </Container>\n    </div>\n  );\n};\n\nexport default AuthUserLoader;\n"]},"metadata":{},"sourceType":"module"}