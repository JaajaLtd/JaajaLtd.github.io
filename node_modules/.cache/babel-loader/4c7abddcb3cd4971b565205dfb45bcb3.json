{"ast":null,"code":"import _regeneratorRuntime from\"/Users/admin/Documents/react-projects/hesmis/hesmis-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(getPaymentReferences),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(generatePaymentReference),_marked3=/*#__PURE__*/_regeneratorRuntime.mark(watchGetPaymentReferences),_marked4=/*#__PURE__*/_regeneratorRuntime.mark(watchGeneratePaymentReference);import{takeLatest,fork,put}from'redux-saga/effects';import axios from'axios';import{authActions,paymentActions,paymentReferenceActions}from'../../actions';function getPaymentReferences(actions){var response;return _regeneratorRuntime.wrap(function getPaymentReferences$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return axios({url:'/student-portal/payment-references/history',method:'GET',params:actions.data});case 3:response=_context.sent;_context.next=6;return put({type:paymentReferenceActions.GETTING_PAYMENT_REFERENCES_SUCCESS,data:response.paymentReferences});case 6:_context.next=8;return put({type:authActions.GET_AUTH_USER_ACCOUNT_BALANCE_REQUEST});case 8:_context.next=10;return put({type:paymentActions.GET_MY_TRANSACTIONS_REQUEST});case 10:_context.next=16;break;case 12:_context.prev=12;_context.t0=_context[\"catch\"](0);_context.next=16;return put({type:paymentReferenceActions.GETTING_PAYMENT_REFERENCES_ERROR,error:_context.t0.data});case 16:case\"end\":return _context.stop();}}},_marked,null,[[0,12]]);}function generatePaymentReference(actions){var url,response;return _regeneratorRuntime.wrap(function generatePaymentReference$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:url='/student-portal/payment-references';if(actions.referenceType==='bulk')url='/student-portal/payment-references/select-unpaid-invoices';else if(actions.referenceType==='future')url='/student-portal/payment-references/future-payments';else if(actions.referenceType==='all')url='/student-portal/payment-references/all-unpaid-invoices';_context2.prev=2;_context2.next=5;return axios({url:url,method:'POST',data:actions.data});case 5:response=_context2.sent;_context2.next=8;return put({type:paymentReferenceActions.GENERATE_PAYMENT_REFERENCE_SUCCESS,data:response.data});case 8:_context2.next=10;return put({type:paymentReferenceActions.GETTING_PAYMENT_REFERENCES_REQUEST});case 10:_context2.next=16;break;case 12:_context2.prev=12;_context2.t0=_context2[\"catch\"](2);_context2.next=16;return put({type:paymentReferenceActions.GENERATE_PAYMENT_REFERENCE_ERROR,error:_context2.t0.data});case 16:case\"end\":return _context2.stop();}}},_marked2,null,[[2,12]]);}function watchGetPaymentReferences(){return _regeneratorRuntime.wrap(function watchGetPaymentReferences$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return takeLatest(paymentReferenceActions.GETTING_PAYMENT_REFERENCES_REQUEST,getPaymentReferences);case 2:case\"end\":return _context3.stop();}}},_marked3);}function watchGeneratePaymentReference(){return _regeneratorRuntime.wrap(function watchGeneratePaymentReference$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return takeLatest(paymentReferenceActions.GENERATE_PAYMENT_REFERENCE_REQUEST,generatePaymentReference);case 2:case\"end\":return _context4.stop();}}},_marked4);}var forkFunctions=[fork(watchGetPaymentReferences),fork(watchGeneratePaymentReference)];export default forkFunctions;","map":{"version":3,"sources":["/Users/admin/Documents/react-projects/hesmis/hesmis-front/src/config/saga/payment/paymentReference.js"],"names":["getPaymentReferences","generatePaymentReference","watchGetPaymentReferences","watchGeneratePaymentReference","takeLatest","fork","put","axios","authActions","paymentActions","paymentReferenceActions","actions","url","method","params","data","response","type","GETTING_PAYMENT_REFERENCES_SUCCESS","paymentReferences","GET_AUTH_USER_ACCOUNT_BALANCE_REQUEST","GET_MY_TRANSACTIONS_REQUEST","GETTING_PAYMENT_REFERENCES_ERROR","error","referenceType","GENERATE_PAYMENT_REFERENCE_SUCCESS","GETTING_PAYMENT_REFERENCES_REQUEST","GENERATE_PAYMENT_REFERENCE_ERROR","GENERATE_PAYMENT_REFERENCE_REQUEST","forkFunctions"],"mappings":"yNAQUA,oB,iDAyBAC,wB,iDA8BAC,yB,iDAOAC,6B,EAtEV,OAASC,UAAT,CAAqBC,IAArB,CAA2BC,GAA3B,KAAsC,oBAAtC,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OACEC,WADF,CAEEC,cAFF,CAGEC,uBAHF,KAIO,eAJP,CAMA,QAAUV,CAAAA,oBAAV,CAA+BW,OAA/B,4KAEqB,MAAMJ,CAAAA,KAAK,CAAC,CAC3BK,GAAG,CAAE,4CADsB,CAE3BC,MAAM,CAAE,KAFmB,CAG3BC,MAAM,CAAEH,OAAO,CAACI,IAHW,CAAD,CAAX,CAFrB,OAEUC,QAFV,+BAOI,MAAMV,CAAAA,GAAG,CAAC,CACRW,IAAI,CAAEP,uBAAuB,CAACQ,kCADtB,CAERH,IAAI,CAAEC,QAAQ,CAACG,iBAFP,CAAD,CAAT,CAPJ,uBAWI,MAAMb,CAAAA,GAAG,CAAC,CACRW,IAAI,CAAET,WAAW,CAACY,qCADV,CAAD,CAAT,CAXJ,wBAcI,MAAMd,CAAAA,GAAG,CAAC,CACRW,IAAI,CAAER,cAAc,CAACY,2BADb,CAAD,CAAT,CAdJ,0GAkBI,MAAMf,CAAAA,GAAG,CAAC,CACRW,IAAI,CAAEP,uBAAuB,CAACY,gCADtB,CAERC,KAAK,CAAE,YAAMR,IAFL,CAAD,CAAT,CAlBJ,qEAyBA,QAAUd,CAAAA,wBAAV,CAAmCU,OAAnC,uJACMC,GADN,CACY,oCADZ,CAEE,GAAID,OAAO,CAACa,aAAR,GAA0B,MAA9B,CACEZ,GAAG,CAAG,2DAAN,CADF,IAEK,IAAID,OAAO,CAACa,aAAR,GAA0B,QAA9B,CACHZ,GAAG,CAAG,oDAAN,CADG,IAEA,IAAID,OAAO,CAACa,aAAR,GAA0B,KAA9B,CACHZ,GAAG,CAAG,wDAAN,CAPJ,kCAUqB,MAAML,CAAAA,KAAK,CAAC,CAC3BK,GAAG,CAAHA,GAD2B,CAE3BC,MAAM,CAAE,MAFmB,CAG3BE,IAAI,CAAEJ,OAAO,CAACI,IAHa,CAAD,CAAX,CAVrB,OAUUC,QAVV,iCAeI,MAAMV,CAAAA,GAAG,CAAC,CACRW,IAAI,CAAEP,uBAAuB,CAACe,kCADtB,CAERV,IAAI,CAAEC,QAAQ,CAACD,IAFP,CAAD,CAAT,CAfJ,yBAmBI,MAAMT,CAAAA,GAAG,CAAC,CACRW,IAAI,CAAEP,uBAAuB,CAACgB,kCADtB,CAAD,CAAT,CAnBJ,+GAuBI,MAAMpB,CAAAA,GAAG,CAAC,CACRW,IAAI,CAAEP,uBAAuB,CAACiB,gCADtB,CAERJ,KAAK,CAAE,aAAMR,IAFL,CAAD,CAAT,CAvBJ,uEA8BA,QAAUb,CAAAA,yBAAV,yJACE,MAAME,CAAAA,UAAU,CACdM,uBAAuB,CAACgB,kCADV,CAEd1B,oBAFc,CAAhB,CADF,wDAOA,QAAUG,CAAAA,6BAAV,6JACE,MAAMC,CAAAA,UAAU,CACdM,uBAAuB,CAACkB,kCADV,CAEd3B,wBAFc,CAAhB,CADF,wDAOA,GAAM4B,CAAAA,aAAa,CAAG,CACpBxB,IAAI,CAACH,yBAAD,CADgB,CAEpBG,IAAI,CAACF,6BAAD,CAFgB,CAAtB,CAKA,cAAe0B,CAAAA,aAAf","sourcesContent":["import { takeLatest, fork, put } from 'redux-saga/effects';\nimport axios from 'axios';\nimport {\n  authActions,\n  paymentActions,\n  paymentReferenceActions,\n} from '../../actions';\n\nfunction* getPaymentReferences(actions) {\n  try {\n    const response = yield axios({\n      url: '/student-portal/payment-references/history',\n      method: 'GET',\n      params: actions.data,\n    });\n    yield put({\n      type: paymentReferenceActions.GETTING_PAYMENT_REFERENCES_SUCCESS,\n      data: response.paymentReferences,\n    });\n    yield put({\n      type: authActions.GET_AUTH_USER_ACCOUNT_BALANCE_REQUEST,\n    });\n    yield put({\n      type: paymentActions.GET_MY_TRANSACTIONS_REQUEST,\n    });\n  } catch (error) {\n    yield put({\n      type: paymentReferenceActions.GETTING_PAYMENT_REFERENCES_ERROR,\n      error: error.data,\n    });\n  }\n}\n\nfunction* generatePaymentReference(actions) {\n  let url = '/student-portal/payment-references';\n  if (actions.referenceType === 'bulk')\n    url = '/student-portal/payment-references/select-unpaid-invoices';\n  else if (actions.referenceType === 'future')\n    url = '/student-portal/payment-references/future-payments';\n  else if (actions.referenceType === 'all')\n    url = '/student-portal/payment-references/all-unpaid-invoices';\n\n  try {\n    const response = yield axios({\n      url,\n      method: 'POST',\n      data: actions.data,\n    });\n    yield put({\n      type: paymentReferenceActions.GENERATE_PAYMENT_REFERENCE_SUCCESS,\n      data: response.data,\n    });\n    yield put({\n      type: paymentReferenceActions.GETTING_PAYMENT_REFERENCES_REQUEST,\n    });\n  } catch (error) {\n    yield put({\n      type: paymentReferenceActions.GENERATE_PAYMENT_REFERENCE_ERROR,\n      error: error.data,\n    });\n  }\n}\n\nfunction* watchGetPaymentReferences() {\n  yield takeLatest(\n    paymentReferenceActions.GETTING_PAYMENT_REFERENCES_REQUEST,\n    getPaymentReferences\n  );\n}\n\nfunction* watchGeneratePaymentReference() {\n  yield takeLatest(\n    paymentReferenceActions.GENERATE_PAYMENT_REFERENCE_REQUEST,\n    generatePaymentReference\n  );\n}\n\nconst forkFunctions = [\n  fork(watchGetPaymentReferences),\n  fork(watchGeneratePaymentReference),\n];\n\nexport default forkFunctions;\n"]},"metadata":{},"sourceType":"module"}