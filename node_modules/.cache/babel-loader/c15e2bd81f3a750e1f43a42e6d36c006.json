{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/react-projects/hesmis/hesmis-front/src/components/common/SelectInput.jsx\";\nimport React from 'react';\nimport { Form } from 'react-bootstrap';\nimport PropTypes, { any, array, object } from 'prop-types';\nimport { isEmpty } from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SelectInput({\n  label,\n  name,\n  register,\n  selectOptions,\n  className,\n  defaultValue,\n  error,\n  placeholder,\n  inline,\n  requiredField,\n  ...props\n}) {\n  const getClassName = () => {\n    let newClassName = `form-control form-control-sm text-sm w-100 ${className}`;\n    if (error) newClassName = `form-control form-control-sm text-sm w-100 ${className} is-invalid`;\n    return newClassName;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form.Group, {\n    className: `my-2 ${inline ? 'row' : 'form-group'}`,\n    children: [label && /*#__PURE__*/_jsxDEV(Form.Label, {\n      htmlFor: name,\n      className: `font500 text-muted text-uppercase text-xs ${inline ? 'col-md-4' : ''}`,\n      style: {\n        textAlign: 'left !important'\n      },\n      children: [label, requiredField && /*#__PURE__*/_jsxDEV(\"strong\", {\n        className: \"text-danger ml-1\",\n        children: \"*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: inline ? 'col-md-8' : '',\n      children: [/*#__PURE__*/_jsxDEV(Form.Select, {\n        name: name,\n        className: getClassName(),\n        ref: register,\n        defaultValue: defaultValue,\n        ...props,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: placeholder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), selectOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option.value,\n          children: option.label\n        }, option.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), !isEmpty(error) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"font500 invalid-feedback\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_c = SelectInput;\nSelectInput.defaultProps = {\n  selectOptions: [],\n  placeholder: '----',\n  defaultValue: null,\n  label: null,\n  register: null,\n  className: null,\n  name: null,\n  error: null,\n  inline: false,\n  requiredField: null\n};\nSelectInput.propTypes = {\n  defaultValue: PropTypes.oneOfType([object, any]),\n  selectOptions: PropTypes.oneOfType([array]),\n  label: PropTypes.string,\n  register: PropTypes.func,\n  name: PropTypes.string,\n  className: PropTypes.string,\n  error: PropTypes.string,\n  placeholder: PropTypes.string,\n  inline: PropTypes.bool,\n  requiredField: PropTypes.bool\n};\nexport default SelectInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectInput\");","map":{"version":3,"sources":["/Users/admin/Documents/react-projects/hesmis/hesmis-front/src/components/common/SelectInput.jsx"],"names":["React","Form","PropTypes","any","array","object","isEmpty","SelectInput","label","name","register","selectOptions","className","defaultValue","error","placeholder","inline","requiredField","props","getClassName","newClassName","textAlign","map","option","value","defaultProps","propTypes","oneOfType","string","func","bool"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,SAAP,IAAoBC,GAApB,EAAyBC,KAAzB,EAAgCC,MAAhC,QAA8C,YAA9C;AACA,SAASC,OAAT,QAAwB,QAAxB;;;AAEA,SAASC,WAAT,CAAqB;AACnBC,EAAAA,KADmB;AAEnBC,EAAAA,IAFmB;AAGnBC,EAAAA,QAHmB;AAInBC,EAAAA,aAJmB;AAKnBC,EAAAA,SALmB;AAMnBC,EAAAA,YANmB;AAOnBC,EAAAA,KAPmB;AAQnBC,EAAAA,WARmB;AASnBC,EAAAA,MATmB;AAUnBC,EAAAA,aAVmB;AAWnB,KAAGC;AAXgB,CAArB,EAYG;AACD,QAAMC,YAAY,GAAG,MAAM;AACzB,QAAIC,YAAY,GAAI,8CAA6CR,SAAU,EAA3E;AACA,QAAIE,KAAJ,EACEM,YAAY,GAAI,8CAA6CR,SAAU,aAAvE;AACF,WAAOQ,YAAP;AACD,GALD;;AAOA,sBACE,QAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAG,QAAOJ,MAAM,GAAG,KAAH,GAAW,YAAa,EAA7D;AAAA,eACGR,KAAK,iBACJ,QAAC,IAAD,CAAM,KAAN;AACE,MAAA,OAAO,EAAEC,IADX;AAEE,MAAA,SAAS,EAAG,6CACVO,MAAM,GAAG,UAAH,GAAgB,EACvB,EAJH;AAKE,MAAA,KAAK,EAAE;AAAEK,QAAAA,SAAS,EAAE;AAAb,OALT;AAAA,iBAOGb,KAPH,EAQGS,aAAa,iBAAI;AAAQ,QAAA,SAAS,EAAC,kBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARpB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAcE;AAAK,MAAA,SAAS,EAAED,MAAM,GAAG,UAAH,GAAgB,EAAtC;AAAA,8BACE,QAAC,IAAD,CAAM,MAAN;AACE,QAAA,IAAI,EAAEP,IADR;AAEE,QAAA,SAAS,EAAEU,YAAY,EAFzB;AAGE,QAAA,GAAG,EAAET,QAHP;AAIE,QAAA,YAAY,EAAEG,YAJhB;AAAA,WAKMK,KALN;AAAA,gCAOE;AAAQ,UAAA,KAAK,EAAC,EAAd;AAAA,oBAAkBH;AAAlB;AAAA;AAAA;AAAA;AAAA,gBAPF,EAQGJ,aAAa,CAACW,GAAd,CAAmBC,MAAD,iBACjB;AAAQ,UAAA,KAAK,EAAEA,MAAM,CAACC,KAAtB;AAAA,oBACGD,MAAM,CAACf;AADV,WAAkCe,MAAM,CAACC,KAAzC;AAAA;AAAA;AAAA;AAAA,gBADD,CARH;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAeG,CAAClB,OAAO,CAACQ,KAAD,CAAR,iBACC;AAAK,QAAA,SAAS,EAAC,0BAAf;AAAA,kBAA2CA;AAA3C;AAAA;AAAA;AAAA;AAAA,cAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD;;KAxDQP,W;AA0DTA,WAAW,CAACkB,YAAZ,GAA2B;AACzBd,EAAAA,aAAa,EAAE,EADU;AAEzBI,EAAAA,WAAW,EAAE,MAFY;AAGzBF,EAAAA,YAAY,EAAE,IAHW;AAIzBL,EAAAA,KAAK,EAAE,IAJkB;AAKzBE,EAAAA,QAAQ,EAAE,IALe;AAMzBE,EAAAA,SAAS,EAAE,IANc;AAOzBH,EAAAA,IAAI,EAAE,IAPmB;AAQzBK,EAAAA,KAAK,EAAE,IARkB;AASzBE,EAAAA,MAAM,EAAE,KATiB;AAUzBC,EAAAA,aAAa,EAAE;AAVU,CAA3B;AAaAV,WAAW,CAACmB,SAAZ,GAAwB;AACtBb,EAAAA,YAAY,EAAEX,SAAS,CAACyB,SAAV,CAAoB,CAACtB,MAAD,EAASF,GAAT,CAApB,CADQ;AAEtBQ,EAAAA,aAAa,EAAET,SAAS,CAACyB,SAAV,CAAoB,CAACvB,KAAD,CAApB,CAFO;AAGtBI,EAAAA,KAAK,EAAEN,SAAS,CAAC0B,MAHK;AAItBlB,EAAAA,QAAQ,EAAER,SAAS,CAAC2B,IAJE;AAKtBpB,EAAAA,IAAI,EAAEP,SAAS,CAAC0B,MALM;AAMtBhB,EAAAA,SAAS,EAAEV,SAAS,CAAC0B,MANC;AAOtBd,EAAAA,KAAK,EAAEZ,SAAS,CAAC0B,MAPK;AAQtBb,EAAAA,WAAW,EAAEb,SAAS,CAAC0B,MARD;AAStBZ,EAAAA,MAAM,EAAEd,SAAS,CAAC4B,IATI;AAUtBb,EAAAA,aAAa,EAAEf,SAAS,CAAC4B;AAVH,CAAxB;AAaA,eAAevB,WAAf","sourcesContent":["import React from 'react';\nimport { Form } from 'react-bootstrap';\nimport PropTypes, { any, array, object } from 'prop-types';\nimport { isEmpty } from 'lodash';\n\nfunction SelectInput({\n  label,\n  name,\n  register,\n  selectOptions,\n  className,\n  defaultValue,\n  error,\n  placeholder,\n  inline,\n  requiredField,\n  ...props\n}) {\n  const getClassName = () => {\n    let newClassName = `form-control form-control-sm text-sm w-100 ${className}`;\n    if (error)\n      newClassName = `form-control form-control-sm text-sm w-100 ${className} is-invalid`;\n    return newClassName;\n  };\n\n  return (\n    <Form.Group className={`my-2 ${inline ? 'row' : 'form-group'}`}>\n      {label && (\n        <Form.Label\n          htmlFor={name}\n          className={`font500 text-muted text-uppercase text-xs ${\n            inline ? 'col-md-4' : ''\n          }`}\n          style={{ textAlign: 'left !important' }}\n        >\n          {label}\n          {requiredField && <strong className=\"text-danger ml-1\">*</strong>}\n        </Form.Label>\n      )}\n\n      <div className={inline ? 'col-md-8' : ''}>\n        <Form.Select\n          name={name}\n          className={getClassName()}\n          ref={register}\n          defaultValue={defaultValue}\n          {...props}\n        >\n          <option value=\"\">{placeholder}</option>\n          {selectOptions.map((option) => (\n            <option value={option.value} key={option.value}>\n              {option.label}\n            </option>\n          ))}\n        </Form.Select>\n        {!isEmpty(error) && (\n          <div className=\"font500 invalid-feedback\">{error}</div>\n        )}\n      </div>\n    </Form.Group>\n  );\n}\n\nSelectInput.defaultProps = {\n  selectOptions: [],\n  placeholder: '----',\n  defaultValue: null,\n  label: null,\n  register: null,\n  className: null,\n  name: null,\n  error: null,\n  inline: false,\n  requiredField: null,\n};\n\nSelectInput.propTypes = {\n  defaultValue: PropTypes.oneOfType([object, any]),\n  selectOptions: PropTypes.oneOfType([array]),\n  label: PropTypes.string,\n  register: PropTypes.func,\n  name: PropTypes.string,\n  className: PropTypes.string,\n  error: PropTypes.string,\n  placeholder: PropTypes.string,\n  inline: PropTypes.bool,\n  requiredField: PropTypes.bool,\n};\n\nexport default SelectInput;\n"]},"metadata":{},"sourceType":"module"}