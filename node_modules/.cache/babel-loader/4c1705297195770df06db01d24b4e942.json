{"ast":null,"code":"var auth={LOGIN_STUDENT_REQUEST:'LOGIN_STUDENT_REQUEST',LOGIN_STUDENT_SUCCESS:'LOGIN_STUDENT_SUCCESS',LOGIN_STUDENT_ERROR:'LOGIN_STUDENT_ERROR',LOGOUT_SUCCESS:'LOGOUT_SUCCESS',LOGOUT_REQUEST:'LOGOUT_REQUEST',LOGOUT_ERROR:'LOGOUT_ERROR',CHANGE_PASSWORD_SUCCESS:'CHANGE_PASSWORD_SUCCESS',CHANGE_PASSWORD_REQUEST:'CHANGE_PASSWORD_REQUEST',CHANGE_PASSWORD_ERROR:'CHANGE_PASSWORD_ERROR',REQUEST_TOKEN_SUCCESS:'REQUEST_TOKEN_SUCCESS',REQUEST_TOKEN_REQUEST:'REQUEST_TOKEN_REQUEST',REQUEST_TOKEN_ERROR:'REQUEST_TOKEN_ERROR',RESET_PASSWORD_SUCCESS:'RESET_PASSWORD_SUCCESS',RESET_PASSWORD_REQUEST:'RESET_PASSWORD_REQUEST',RESET_PASSWORD_ERROR:'RESET_PASSWORD_ERROR',GET_AUTH_USER_SUCCESS:'GET_AUTH_USER_SUCCESS',GET_AUTH_USER_REQUEST:'GET_AUTH_USER_REQUEST',GET_AUTH_USER_ERROR:'GET_AUTH_USER_ERROR',GET_AUTH_USER_ACCOUNT_BALANCE_SUCCESS:'GET_AUTH_USER_ACCOUNT_BALANCE_SUCCESS',GET_AUTH_USER_ACCOUNT_BALANCE_REQUEST:'GET_AUTH_USER_ACCOUNT_BALANCE_REQUEST',GET_AUTH_USER_ACCOUNT_BALANCE_ERROR:'GET_AUTH_USER_ACCOUNT_BALANCE_ERROR',GET_STUDENT_PROGRAMMES_SUCCESS:'GET_STUDENT_PROGRAMMES_SUCCESS',GET_STUDENT_PROGRAMMES_REQUEST:'GET_STUDENT_PROGRAMMES_REQUEST',GET_STUDENT_PROGRAMMES_ERROR:'GET_STUDENT_PROGRAMMES_ERROR',SET_CURRENT_STUDENT_PROGRAMME:'SET_CURRENT_STUDENT_PROGRAMME',SET_AUTH_USER:'SET_AUTH_USER',REMOVE_AUTH_USER:'REMOVE_AUTH_USER',SET_IS_AUTHENTICATED:'SET_IS_AUTHENTICATED',loginStudent:function loginStudent(data){return{type:auth.LOGIN_STUDENT_REQUEST,data:data};},getAuthUser:function getAuthUser(){return{type:auth.GET_AUTH_USER_REQUEST};},logoutUser:function logoutUser(){return{type:auth.LOGOUT_REQUEST};},changePassword:function changePassword(data){return{type:auth.CHANGE_PASSWORD_REQUEST,data:data};},requestToken:function requestToken(data){return{type:auth.REQUEST_TOKEN_REQUEST,data:data};},resetPassword:function resetPassword(data){return{type:auth.RESET_PASSWORD_REQUEST,data:data};},setCurrentStudentProgramme:function setCurrentStudentProgramme(currentStudentProgramme){return{type:auth.SET_CURRENT_STUDENT_PROGRAMME,currentStudentProgramme:currentStudentProgramme};},getStudentProgrammes:function getStudentProgrammes(){return{type:auth.GET_STUDENT_PROGRAMMES_REQUEST};},getStudentBalance:function getStudentBalance(){return{type:auth.GET_AUTH_USER_ACCOUNT_BALANCE_REQUEST};},setAuthUser:function setAuthUser(user){return{type:auth.SET_AUTH_USER,user:user};},setIsAuthenticated:function setIsAuthenticated(payload){return{type:auth.SET_IS_AUTHENTICATED,payload:payload};},removeAuthUser:function removeAuthUser(){return{type:auth.REMOVE_AUTH_USER};}};export default auth;","map":{"version":3,"sources":["/Users/admin/Documents/react-projects/hesmis/hesmis-front/src/config/actions/auth/index.js"],"names":["auth","LOGIN_STUDENT_REQUEST","LOGIN_STUDENT_SUCCESS","LOGIN_STUDENT_ERROR","LOGOUT_SUCCESS","LOGOUT_REQUEST","LOGOUT_ERROR","CHANGE_PASSWORD_SUCCESS","CHANGE_PASSWORD_REQUEST","CHANGE_PASSWORD_ERROR","REQUEST_TOKEN_SUCCESS","REQUEST_TOKEN_REQUEST","REQUEST_TOKEN_ERROR","RESET_PASSWORD_SUCCESS","RESET_PASSWORD_REQUEST","RESET_PASSWORD_ERROR","GET_AUTH_USER_SUCCESS","GET_AUTH_USER_REQUEST","GET_AUTH_USER_ERROR","GET_AUTH_USER_ACCOUNT_BALANCE_SUCCESS","GET_AUTH_USER_ACCOUNT_BALANCE_REQUEST","GET_AUTH_USER_ACCOUNT_BALANCE_ERROR","GET_STUDENT_PROGRAMMES_SUCCESS","GET_STUDENT_PROGRAMMES_REQUEST","GET_STUDENT_PROGRAMMES_ERROR","SET_CURRENT_STUDENT_PROGRAMME","SET_AUTH_USER","REMOVE_AUTH_USER","SET_IS_AUTHENTICATED","loginStudent","data","type","getAuthUser","logoutUser","changePassword","requestToken","resetPassword","setCurrentStudentProgramme","currentStudentProgramme","getStudentProgrammes","getStudentBalance","setAuthUser","user","setIsAuthenticated","payload","removeAuthUser"],"mappings":"AAAA,GAAMA,CAAAA,IAAI,CAAG,CACXC,qBAAqB,CAAE,uBADZ,CAEXC,qBAAqB,CAAE,uBAFZ,CAGXC,mBAAmB,CAAE,qBAHV,CAKXC,cAAc,CAAE,gBALL,CAMXC,cAAc,CAAE,gBANL,CAOXC,YAAY,CAAE,cAPH,CASXC,uBAAuB,CAAE,yBATd,CAUXC,uBAAuB,CAAE,yBAVd,CAWXC,qBAAqB,CAAE,uBAXZ,CAaXC,qBAAqB,CAAE,uBAbZ,CAcXC,qBAAqB,CAAE,uBAdZ,CAeXC,mBAAmB,CAAE,qBAfV,CAiBXC,sBAAsB,CAAE,wBAjBb,CAkBXC,sBAAsB,CAAE,wBAlBb,CAmBXC,oBAAoB,CAAE,sBAnBX,CAqBXC,qBAAqB,CAAE,uBArBZ,CAsBXC,qBAAqB,CAAE,uBAtBZ,CAuBXC,mBAAmB,CAAE,qBAvBV,CAyBXC,qCAAqC,CACnC,uCA1BS,CA2BXC,qCAAqC,CACnC,uCA5BS,CA6BXC,mCAAmC,CAAE,qCA7B1B,CA+BXC,8BAA8B,CAAE,gCA/BrB,CAgCXC,8BAA8B,CAAE,gCAhCrB,CAiCXC,4BAA4B,CAAE,8BAjCnB,CAmCXC,6BAA6B,CAAE,+BAnCpB,CAqCXC,aAAa,CAAE,eArCJ,CAsCXC,gBAAgB,CAAE,kBAtCP,CAuCXC,oBAAoB,CAAE,sBAvCX,CAyCXC,YAAY,CAAE,sBAACC,IAAD,QAAW,CACvBC,IAAI,CAAE/B,IAAI,CAACC,qBADY,CAEvB6B,IAAI,CAAJA,IAFuB,CAAX,EAzCH,CA8CXE,WAAW,CAAE,6BAAO,CAClBD,IAAI,CAAE/B,IAAI,CAACiB,qBADO,CAAP,EA9CF,CAkDXgB,UAAU,CAAE,4BAAO,CACjBF,IAAI,CAAE/B,IAAI,CAACK,cADM,CAAP,EAlDD,CAsDX6B,cAAc,CAAE,wBAACJ,IAAD,QAAW,CACzBC,IAAI,CAAE/B,IAAI,CAACQ,uBADc,CAEzBsB,IAAI,CAAJA,IAFyB,CAAX,EAtDL,CA2DXK,YAAY,CAAE,sBAACL,IAAD,QAAW,CACvBC,IAAI,CAAE/B,IAAI,CAACW,qBADY,CAEvBmB,IAAI,CAAJA,IAFuB,CAAX,EA3DH,CAgEXM,aAAa,CAAE,uBAACN,IAAD,QAAW,CACxBC,IAAI,CAAE/B,IAAI,CAACc,sBADa,CAExBgB,IAAI,CAAJA,IAFwB,CAAX,EAhEJ,CAqEXO,0BAA0B,CAAE,oCAACC,uBAAD,QAA8B,CACxDP,IAAI,CAAE/B,IAAI,CAACyB,6BAD6C,CAExDa,uBAAuB,CAAvBA,uBAFwD,CAA9B,EArEjB,CA0EXC,oBAAoB,CAAE,sCAAO,CAC3BR,IAAI,CAAE/B,IAAI,CAACuB,8BADgB,CAAP,EA1EX,CA8EXiB,iBAAiB,CAAE,mCAAO,CACxBT,IAAI,CAAE/B,IAAI,CAACoB,qCADa,CAAP,EA9ER,CAkFXqB,WAAW,CAAE,qBAACC,IAAD,QAAW,CACtBX,IAAI,CAAE/B,IAAI,CAAC0B,aADW,CAEtBgB,IAAI,CAAJA,IAFsB,CAAX,EAlFF,CAuFXC,kBAAkB,CAAE,4BAACC,OAAD,QAAc,CAChCb,IAAI,CAAE/B,IAAI,CAAC4B,oBADqB,CAEhCgB,OAAO,CAAPA,OAFgC,CAAd,EAvFT,CA4FXC,cAAc,CAAE,gCAAO,CACrBd,IAAI,CAAE/B,IAAI,CAAC2B,gBADU,CAAP,EA5FL,CAAb,CAiGA,cAAe3B,CAAAA,IAAf","sourcesContent":["const auth = {\n  LOGIN_STUDENT_REQUEST: 'LOGIN_STUDENT_REQUEST',\n  LOGIN_STUDENT_SUCCESS: 'LOGIN_STUDENT_SUCCESS',\n  LOGIN_STUDENT_ERROR: 'LOGIN_STUDENT_ERROR',\n\n  LOGOUT_SUCCESS: 'LOGOUT_SUCCESS',\n  LOGOUT_REQUEST: 'LOGOUT_REQUEST',\n  LOGOUT_ERROR: 'LOGOUT_ERROR',\n\n  CHANGE_PASSWORD_SUCCESS: 'CHANGE_PASSWORD_SUCCESS',\n  CHANGE_PASSWORD_REQUEST: 'CHANGE_PASSWORD_REQUEST',\n  CHANGE_PASSWORD_ERROR: 'CHANGE_PASSWORD_ERROR',\n\n  REQUEST_TOKEN_SUCCESS: 'REQUEST_TOKEN_SUCCESS',\n  REQUEST_TOKEN_REQUEST: 'REQUEST_TOKEN_REQUEST',\n  REQUEST_TOKEN_ERROR: 'REQUEST_TOKEN_ERROR',\n\n  RESET_PASSWORD_SUCCESS: 'RESET_PASSWORD_SUCCESS',\n  RESET_PASSWORD_REQUEST: 'RESET_PASSWORD_REQUEST',\n  RESET_PASSWORD_ERROR: 'RESET_PASSWORD_ERROR',\n\n  GET_AUTH_USER_SUCCESS: 'GET_AUTH_USER_SUCCESS',\n  GET_AUTH_USER_REQUEST: 'GET_AUTH_USER_REQUEST',\n  GET_AUTH_USER_ERROR: 'GET_AUTH_USER_ERROR',\n\n  GET_AUTH_USER_ACCOUNT_BALANCE_SUCCESS:\n    'GET_AUTH_USER_ACCOUNT_BALANCE_SUCCESS',\n  GET_AUTH_USER_ACCOUNT_BALANCE_REQUEST:\n    'GET_AUTH_USER_ACCOUNT_BALANCE_REQUEST',\n  GET_AUTH_USER_ACCOUNT_BALANCE_ERROR: 'GET_AUTH_USER_ACCOUNT_BALANCE_ERROR',\n\n  GET_STUDENT_PROGRAMMES_SUCCESS: 'GET_STUDENT_PROGRAMMES_SUCCESS',\n  GET_STUDENT_PROGRAMMES_REQUEST: 'GET_STUDENT_PROGRAMMES_REQUEST',\n  GET_STUDENT_PROGRAMMES_ERROR: 'GET_STUDENT_PROGRAMMES_ERROR',\n\n  SET_CURRENT_STUDENT_PROGRAMME: 'SET_CURRENT_STUDENT_PROGRAMME',\n\n  SET_AUTH_USER: 'SET_AUTH_USER',\n  REMOVE_AUTH_USER: 'REMOVE_AUTH_USER',\n  SET_IS_AUTHENTICATED: 'SET_IS_AUTHENTICATED',\n\n  loginStudent: (data) => ({\n    type: auth.LOGIN_STUDENT_REQUEST,\n    data,\n  }),\n\n  getAuthUser: () => ({\n    type: auth.GET_AUTH_USER_REQUEST,\n  }),\n\n  logoutUser: () => ({\n    type: auth.LOGOUT_REQUEST,\n  }),\n\n  changePassword: (data) => ({\n    type: auth.CHANGE_PASSWORD_REQUEST,\n    data,\n  }),\n\n  requestToken: (data) => ({\n    type: auth.REQUEST_TOKEN_REQUEST,\n    data,\n  }),\n\n  resetPassword: (data) => ({\n    type: auth.RESET_PASSWORD_REQUEST,\n    data,\n  }),\n\n  setCurrentStudentProgramme: (currentStudentProgramme) => ({\n    type: auth.SET_CURRENT_STUDENT_PROGRAMME,\n    currentStudentProgramme,\n  }),\n\n  getStudentProgrammes: () => ({\n    type: auth.GET_STUDENT_PROGRAMMES_REQUEST,\n  }),\n\n  getStudentBalance: () => ({\n    type: auth.GET_AUTH_USER_ACCOUNT_BALANCE_REQUEST,\n  }),\n\n  setAuthUser: (user) => ({\n    type: auth.SET_AUTH_USER,\n    user,\n  }),\n\n  setIsAuthenticated: (payload) => ({\n    type: auth.SET_IS_AUTHENTICATED,\n    payload,\n  }),\n\n  removeAuthUser: () => ({\n    type: auth.REMOVE_AUTH_USER,\n  }),\n};\n\nexport default auth;\n"]},"metadata":{},"sourceType":"module"}