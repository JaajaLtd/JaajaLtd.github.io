{"ast":null,"code":"import { takeLatest, fork, put } from 'redux-saga/effects';\nimport axios from 'axios';\nimport appActions from '../../actions';\n\nfunction* getCurrentSemester() {\n  try {\n    const response = yield axios({\n      url: '/student-portal/enrollment/current-semester',\n      method: 'GET'\n    });\n    yield put({\n      type: appActions.GET_CURRENT_SEMESTER_SUCCESS,\n      data: response.data\n    });\n  } catch (error) {\n    yield put({\n      type: appActions.GET_CURRENT_SEMESTER_ERROR,\n      error: error.data\n    });\n  }\n}\n\nfunction* getInstitutionStructure(actions) {\n  try {\n    const response = yield axios({\n      url: '/app/institution-structure/student-portal',\n      method: 'GET',\n      params: actions.params\n    });\n    yield put({\n      type: appActions.GET_INSTITUTION_STRUCTURE_SUCCESS,\n      data: response.data\n    });\n  } catch (error) {\n    yield put({\n      type: appActions.GET_INSTITUTION_STRUCTURE_ERROR,\n      error: error.data\n    });\n  }\n}\n\nfunction* getAllMetadata(actions) {\n  try {\n    const response = yield axios({\n      url: '/student-portal/metadata',\n      method: 'GET',\n      data: actions.data\n    });\n    yield put({\n      type: appActions.GET_META_DATA_SUCCESS,\n      data: response.metadata\n    });\n  } catch (error) {\n    yield put({\n      type: appActions.GET_META_DATA_ERROR,\n      error: error.data\n    });\n  }\n}\n\nfunction* watchGetCurrentSemester() {\n  yield takeLatest(appActions.GET_CURRENT_SEMESTER_REQUEST, getCurrentSemester);\n}\n\nfunction* watchGetMetadata() {\n  yield takeLatest(appActions.GET_META_DATA_REQUEST, getAllMetadata);\n}\n\nfunction* watchGetInstitutionStructures() {\n  yield takeLatest(appActions.GET_INSTITUTION_STRUCTURE_REQUEST, getInstitutionStructure);\n}\n\nconst forkFunctions = [fork(watchGetCurrentSemester), fork(watchGetMetadata), fork(watchGetInstitutionStructures)];\nexport default forkFunctions;","map":{"version":3,"sources":["/Users/admin/Documents/react-projects/hesmis-front/src/config/saga/app/index.js"],"names":["takeLatest","fork","put","axios","appActions","getCurrentSemester","response","url","method","type","GET_CURRENT_SEMESTER_SUCCESS","data","error","GET_CURRENT_SEMESTER_ERROR","getInstitutionStructure","actions","params","GET_INSTITUTION_STRUCTURE_SUCCESS","GET_INSTITUTION_STRUCTURE_ERROR","getAllMetadata","GET_META_DATA_SUCCESS","metadata","GET_META_DATA_ERROR","watchGetCurrentSemester","GET_CURRENT_SEMESTER_REQUEST","watchGetMetadata","GET_META_DATA_REQUEST","watchGetInstitutionStructures","GET_INSTITUTION_STRUCTURE_REQUEST","forkFunctions"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,QAAsC,oBAAtC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAQC,UAAR,MAAyB,eAAzB;;AAEA,UAAUC,kBAAV,GAA+B;AAC7B,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMH,KAAK,CAAC;AAC3BI,MAAAA,GAAG,EAAE,6CADsB;AAE3BC,MAAAA,MAAM,EAAE;AAFmB,KAAD,CAA5B;AAIA,UAAMN,GAAG,CAAC;AACRO,MAAAA,IAAI,EAAEL,UAAU,CAACM,4BADT;AAERC,MAAAA,IAAI,EAAEL,QAAQ,CAACK;AAFP,KAAD,CAAT;AAID,GATD,CASE,OAAOC,KAAP,EAAc;AACd,UAAMV,GAAG,CAAC;AACRO,MAAAA,IAAI,EAAEL,UAAU,CAACS,0BADT;AAERD,MAAAA,KAAK,EAAEA,KAAK,CAACD;AAFL,KAAD,CAAT;AAID;AACF;;AAED,UAAUG,uBAAV,CAAkCC,OAAlC,EAA2C;AACzC,MAAI;AACF,UAAMT,QAAQ,GAAG,MAAMH,KAAK,CAAC;AAC3BI,MAAAA,GAAG,EAAE,2CADsB;AAE3BC,MAAAA,MAAM,EAAE,KAFmB;AAG3BQ,MAAAA,MAAM,EAAED,OAAO,CAACC;AAHW,KAAD,CAA5B;AAKA,UAAMd,GAAG,CAAC;AACRO,MAAAA,IAAI,EAAEL,UAAU,CAACa,iCADT;AAERN,MAAAA,IAAI,EAAEL,QAAQ,CAACK;AAFP,KAAD,CAAT;AAID,GAVD,CAUE,OAAOC,KAAP,EAAc;AACd,UAAMV,GAAG,CAAC;AACRO,MAAAA,IAAI,EAAEL,UAAU,CAACc,+BADT;AAERN,MAAAA,KAAK,EAAEA,KAAK,CAACD;AAFL,KAAD,CAAT;AAID;AACF;;AACD,UAAUQ,cAAV,CAAyBJ,OAAzB,EAAkC;AAChC,MAAI;AACF,UAAMT,QAAQ,GAAG,MAAMH,KAAK,CAAC;AAC3BI,MAAAA,GAAG,EAAE,0BADsB;AAE3BC,MAAAA,MAAM,EAAE,KAFmB;AAG3BG,MAAAA,IAAI,EAAEI,OAAO,CAACJ;AAHa,KAAD,CAA5B;AAKA,UAAMT,GAAG,CAAC;AACRO,MAAAA,IAAI,EAAEL,UAAU,CAACgB,qBADT;AAERT,MAAAA,IAAI,EAAEL,QAAQ,CAACe;AAFP,KAAD,CAAT;AAID,GAVD,CAUE,OAAOT,KAAP,EAAc;AACd,UAAMV,GAAG,CAAC;AACRO,MAAAA,IAAI,EAAEL,UAAU,CAACkB,mBADT;AAERV,MAAAA,KAAK,EAAEA,KAAK,CAACD;AAFL,KAAD,CAAT;AAID;AACF;;AAED,UAAUY,uBAAV,GAAoC;AAClC,QAAMvB,UAAU,CAACI,UAAU,CAACoB,4BAAZ,EAA0CnB,kBAA1C,CAAhB;AACD;;AAED,UAAUoB,gBAAV,GAA6B;AAC3B,QAAMzB,UAAU,CAACI,UAAU,CAACsB,qBAAZ,EAAmCP,cAAnC,CAAhB;AACD;;AAED,UAAUQ,6BAAV,GAA0C;AACxC,QAAM3B,UAAU,CACdI,UAAU,CAACwB,iCADG,EAEdd,uBAFc,CAAhB;AAID;;AAED,MAAMe,aAAa,GAAG,CACpB5B,IAAI,CAACsB,uBAAD,CADgB,EAEpBtB,IAAI,CAACwB,gBAAD,CAFgB,EAGpBxB,IAAI,CAAC0B,6BAAD,CAHgB,CAAtB;AAMA,eAAeE,aAAf","sourcesContent":["import { takeLatest, fork, put } from 'redux-saga/effects';\nimport axios from 'axios';\nimport  appActions  from '../../actions';\n\nfunction* getCurrentSemester() {\n  try {\n    const response = yield axios({\n      url: '/student-portal/enrollment/current-semester',\n      method: 'GET',\n    });\n    yield put({\n      type: appActions.GET_CURRENT_SEMESTER_SUCCESS,\n      data: response.data,\n    });\n  } catch (error) {\n    yield put({\n      type: appActions.GET_CURRENT_SEMESTER_ERROR,\n      error: error.data,\n    });\n  }\n}\n\nfunction* getInstitutionStructure(actions) {\n  try {\n    const response = yield axios({\n      url: '/app/institution-structure/student-portal',\n      method: 'GET',\n      params: actions.params,\n    });\n    yield put({\n      type: appActions.GET_INSTITUTION_STRUCTURE_SUCCESS,\n      data: response.data,\n    });\n  } catch (error) {\n    yield put({\n      type: appActions.GET_INSTITUTION_STRUCTURE_ERROR,\n      error: error.data,\n    });\n  }\n}\nfunction* getAllMetadata(actions) {\n  try {\n    const response = yield axios({\n      url: '/student-portal/metadata',\n      method: 'GET',\n      data: actions.data,\n    });\n    yield put({\n      type: appActions.GET_META_DATA_SUCCESS,\n      data: response.metadata,\n    });\n  } catch (error) {\n    yield put({\n      type: appActions.GET_META_DATA_ERROR,\n      error: error.data,\n    });\n  }\n}\n\nfunction* watchGetCurrentSemester() {\n  yield takeLatest(appActions.GET_CURRENT_SEMESTER_REQUEST, getCurrentSemester);\n}\n\nfunction* watchGetMetadata() {\n  yield takeLatest(appActions.GET_META_DATA_REQUEST, getAllMetadata);\n}\n\nfunction* watchGetInstitutionStructures() {\n  yield takeLatest(\n    appActions.GET_INSTITUTION_STRUCTURE_REQUEST,\n    getInstitutionStructure\n  );\n}\n\nconst forkFunctions = [\n  fork(watchGetCurrentSemester),\n  fork(watchGetMetadata),\n  fork(watchGetInstitutionStructures),\n];\n\nexport default forkFunctions;\n"]},"metadata":{},"sourceType":"module"}