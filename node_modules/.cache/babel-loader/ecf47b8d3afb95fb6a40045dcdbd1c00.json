{"ast":null,"code":"import{isEmpty}from'lodash';import React,{useEffect}from'react';import{useDispatch,useSelector}from'react-redux';import{AuthLayout}from'../../components/shared';import MainLayout from'../../components/shared/MainLayout';import{authActions}from'../../config/actions';import{getAccessToken}from'../../config/services/storageService';import ErrorBoundary from'../Errors/ErrorBoundary';import AuthUserLoader from'./AuthUserLoader';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Dashboard=function Dashboard(){var dispatch=useDispatch();var _useSelector=useSelector(function(state){return state.auth;}),authUser=_useSelector.authUser,isAuthenticated=_useSelector.isAuthenticated;var _useSelector2=useSelector(function(state){return state.setting;}),selectedMenu=_useSelector2.selectedMenu;var accessToken=getAccessToken();useEffect(function(){if(!isEmpty(accessToken))dispatch(authActions.setIsAuthenticated(true));},[accessToken,selectedMenu]);return/*#__PURE__*/_jsx(ErrorBoundary,{children:isAuthenticated===true?/*#__PURE__*/_jsx(_Fragment,{children:isEmpty(authUser)?/*#__PURE__*/_jsx(AuthUserLoader,{}):/*#__PURE__*/_jsx(MainLayout,{})}):/*#__PURE__*/_jsx(AuthLayout,{})});};export default Dashboard;","map":{"version":3,"sources":["/Users/admin/Documents/react-projects/hesmis/hesmis-front/src/containers/Dashboard/index.jsx"],"names":["isEmpty","React","useEffect","useDispatch","useSelector","AuthLayout","MainLayout","authActions","getAccessToken","ErrorBoundary","AuthUserLoader","Dashboard","dispatch","state","auth","authUser","isAuthenticated","setting","selectedMenu","accessToken","setIsAuthenticated"],"mappings":"AAAA,OAASA,OAAT,KAAwB,QAAxB,CACA,MAAOC,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,UAAT,KAA2B,yBAA3B,CACA,MAAOC,CAAAA,UAAP,KAAuB,oCAAvB,CACA,OAASC,WAAT,KAA4B,sBAA5B,CACA,OAASC,cAAT,KAA+B,sCAA/B,CACA,MAAOC,CAAAA,aAAP,KAA0B,yBAA1B,CACA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,C,gGAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACtB,GAAMC,CAAAA,QAAQ,CAAGT,WAAW,EAA5B,CACA,iBAAsCC,WAAW,CAAC,SAACS,KAAD,QAAWA,CAAAA,KAAK,CAACC,IAAjB,EAAD,CAAjD,CAAQC,QAAR,cAAQA,QAAR,CAAkBC,eAAlB,cAAkBA,eAAlB,CACA,kBAAyBZ,WAAW,CAAC,SAACS,KAAD,QAAWA,CAAAA,KAAK,CAACI,OAAjB,EAAD,CAApC,CAAQC,YAAR,eAAQA,YAAR,CAEA,GAAMC,CAAAA,WAAW,CAAGX,cAAc,EAAlC,CAEAN,SAAS,CAAC,UAAM,CACd,GAAI,CAACF,OAAO,CAACmB,WAAD,CAAZ,CAA2BP,QAAQ,CAACL,WAAW,CAACa,kBAAZ,CAA+B,IAA/B,CAAD,CAAR,CAC5B,CAFQ,CAEN,CAACD,WAAD,CAAcD,YAAd,CAFM,CAAT,CAIA,mBACE,KAAC,aAAD,WACGF,eAAe,GAAK,IAApB,cACC,yBAAGhB,OAAO,CAACe,QAAD,CAAP,cAAoB,KAAC,cAAD,IAApB,cAAyC,KAAC,UAAD,IAA5C,EADD,cAGC,KAAC,UAAD,IAJJ,EADF,CASD,CApBD,CAsBA,cAAeJ,CAAAA,SAAf","sourcesContent":["import { isEmpty } from 'lodash';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AuthLayout } from '../../components/shared';\nimport MainLayout from '../../components/shared/MainLayout';\nimport { authActions } from '../../config/actions';\nimport { getAccessToken } from '../../config/services/storageService';\nimport ErrorBoundary from '../Errors/ErrorBoundary';\nimport AuthUserLoader from './AuthUserLoader';\n\nconst Dashboard = () => {\n  const dispatch = useDispatch();\n  const { authUser, isAuthenticated } = useSelector((state) => state.auth);\n  const { selectedMenu } = useSelector((state) => state.setting);\n\n  const accessToken = getAccessToken();\n\n  useEffect(() => {\n    if (!isEmpty(accessToken)) dispatch(authActions.setIsAuthenticated(true));\n  }, [accessToken, selectedMenu]);\n\n  return (\n    <ErrorBoundary>\n      {isAuthenticated === true ? (\n        <>{isEmpty(authUser) ? <AuthUserLoader /> : <MainLayout />}</>\n      ) : (\n        <AuthLayout />\n      )}\n    </ErrorBoundary>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}