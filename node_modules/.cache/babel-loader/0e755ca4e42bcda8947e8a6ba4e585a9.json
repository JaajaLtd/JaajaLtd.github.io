{"ast":null,"code":"import{get}from'lodash';import React from'react';import{Card,Form}from'react-bootstrap';import{useForm}from'react-hook-form';import{FaSignInAlt}from'react-icons/fa';import{useSelector}from'react-redux';import{InputText,SubmitButton}from'../../components/common';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var LoginForm=function LoginForm(_ref){var onSubmit=_ref.onSubmit;var _useForm=useForm(),register=_useForm.register,handleSubmit=_useForm.handleSubmit,errors=_useForm.errors;var loginIn=useSelector(function(state){return state.auth.loginIn;});return/*#__PURE__*/_jsxs(Card,{className:\"bg-white rounded \",children:[/*#__PURE__*/_jsx(Card.Header,{className:\"py-3 border-0 rounded-top\",children:/*#__PURE__*/_jsx(\"div\",{className:\"w-100 text-center text-md text-info font600\",children:\"LOGIN\"})}),/*#__PURE__*/_jsx(Card.Body,{className:\"pt-2\",children:/*#__PURE__*/_jsxs(Form,{onSubmit:handleSubmit(onSubmit),children:[/*#__PURE__*/_jsx(InputText,{name:\"username\",label:\"Username\",requiredField:true,register:register({required:'Username field is required'}),error:get(errors,'username.message')}),/*#__PURE__*/_jsx(InputText,{type:\"password\",name:\"password\",label:\"Password\",requiredField:true,register:register({required:'Password is required'}),error:get(errors,'password.message')}),/*#__PURE__*/_jsx(SubmitButton,{className:\"text-uppercase text-white text-sm mt-3 w-100 mb-2 font600\",text:\"Login\",loading:loginIn,iconBefore:/*#__PURE__*/_jsx(FaSignInAlt,{className:\"me-1\"}),loadingText:\"Signing in...\"})]})})]});};export default LoginForm;","map":{"version":3,"sources":["/Users/admin/Documents/react-projects/hesmis/hesmis-front/src/containers/Auth/LoginForm.jsx"],"names":["get","React","Card","Form","useForm","FaSignInAlt","useSelector","InputText","SubmitButton","LoginForm","onSubmit","register","handleSubmit","errors","loginIn","state","auth","required"],"mappings":"AAAA,OAASA,GAAT,KAAoB,QAApB,CAEA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,CAAeC,IAAf,KAA2B,iBAA3B,CACA,OAASC,OAAT,KAAwB,iBAAxB,CACA,OAASC,WAAT,KAA4B,gBAA5B,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,SAAT,CAAoBC,YAApB,KAAwC,yBAAxC,C,wFAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAAkB,IAAfC,CAAAA,QAAe,MAAfA,QAAe,CAClC,aAA2CN,OAAO,EAAlD,CAAQO,QAAR,UAAQA,QAAR,CAAkBC,YAAlB,UAAkBA,YAAlB,CAAgCC,MAAhC,UAAgCA,MAAhC,CACA,GAAMC,CAAAA,OAAO,CAAGR,WAAW,CAAC,SAACS,KAAD,QAAWA,CAAAA,KAAK,CAACC,IAAN,CAAWF,OAAtB,EAAD,CAA3B,CAEA,mBACE,MAAC,IAAD,EAAM,SAAS,CAAC,mBAAhB,wBACE,KAAC,IAAD,CAAM,MAAN,EAAa,SAAS,CAAC,2BAAvB,uBACE,YAAK,SAAS,CAAC,6CAAf,mBADF,EADF,cAIE,KAAC,IAAD,CAAM,IAAN,EAAW,SAAS,CAAC,MAArB,uBACE,MAAC,IAAD,EAAM,QAAQ,CAAEF,YAAY,CAACF,QAAD,CAA5B,wBACE,KAAC,SAAD,EACE,IAAI,CAAC,UADP,CAEE,KAAK,CAAC,UAFR,CAGE,aAAa,KAHf,CAIE,QAAQ,CAAEC,QAAQ,CAAC,CACjBM,QAAQ,CAAE,4BADO,CAAD,CAJpB,CAOE,KAAK,CAAEjB,GAAG,CAACa,MAAD,CAAS,kBAAT,CAPZ,EADF,cAWE,KAAC,SAAD,EACE,IAAI,CAAC,UADP,CAEE,IAAI,CAAC,UAFP,CAGE,KAAK,CAAC,UAHR,CAIE,aAAa,KAJf,CAKE,QAAQ,CAAEF,QAAQ,CAAC,CACjBM,QAAQ,CAAE,sBADO,CAAD,CALpB,CAQE,KAAK,CAAEjB,GAAG,CAACa,MAAD,CAAS,kBAAT,CARZ,EAXF,cAsBE,KAAC,YAAD,EACE,SAAS,CAAC,2DADZ,CAEE,IAAI,CAAC,OAFP,CAGE,OAAO,CAAEC,OAHX,CAIE,UAAU,cAAE,KAAC,WAAD,EAAa,SAAS,CAAC,MAAvB,EAJd,CAKE,WAAW,CAAC,eALd,EAtBF,GADF,EAJF,GADF,CAuCD,CA3CD,CAiDA,cAAeL,CAAAA,SAAf","sourcesContent":["import { get } from 'lodash';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Card, Form } from 'react-bootstrap';\nimport { useForm } from 'react-hook-form';\nimport { FaSignInAlt } from 'react-icons/fa';\nimport { useSelector } from 'react-redux';\nimport { InputText, SubmitButton } from '../../components/common';\n\nconst LoginForm = ({ onSubmit }) => {\n  const { register, handleSubmit, errors } = useForm();\n  const loginIn = useSelector((state) => state.auth.loginIn);\n\n  return (\n    <Card className=\"bg-white rounded \">\n      <Card.Header className=\"py-3 border-0 rounded-top\">\n        <div className=\"w-100 text-center text-md text-info font600\">LOGIN</div>\n      </Card.Header>\n      <Card.Body className=\"pt-2\">\n        <Form onSubmit={handleSubmit(onSubmit)}>\n          <InputText\n            name=\"username\"\n            label=\"Username\"\n            requiredField\n            register={register({\n              required: 'Username field is required',\n            })}\n            error={get(errors, 'username.message')}\n          />\n\n          <InputText\n            type=\"password\"\n            name=\"password\"\n            label=\"Password\"\n            requiredField\n            register={register({\n              required: 'Password is required',\n            })}\n            error={get(errors, 'password.message')}\n          />\n\n          <SubmitButton\n            className=\"text-uppercase text-white text-sm mt-3 w-100 mb-2 font600\"\n            text=\"Login\"\n            loading={loginIn}\n            iconBefore={<FaSignInAlt className=\"me-1\" />}\n            loadingText=\"Signing in...\"\n          />\n        </Form>\n      </Card.Body>\n    </Card>\n  );\n};\n\nLoginForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}