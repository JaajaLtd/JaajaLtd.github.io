{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/react-projects/hesmis-front/src/containers/RegistrationHistory/index.jsx\",\n    _s = $RefreshSig$();\n\nimport { isEmpty } from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport { Accordion, Card } from 'react-bootstrap';\nimport { FaUserEdit } from 'react-icons/fa';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { DataNotFound, ReloadButton } from '../../components/common';\nimport AccordionHeader from '../../components/common/AccordionHeader';\nimport { registrationActions } from '../../config/actions';\nimport SingleRegistrationHistory from './SingleRegistrationHistory';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RegistrationHistory = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    registrationHistories,\n    gettingRegistrationHistory\n  } = useSelector(state => state.registration);\n  const {\n    currentStudentProgramme\n  } = useSelector(state => state.auth);\n  const [activeKey, setActiveKey] = useState(1);\n\n  const reloadRegistrationHistory = () => {\n    dispatch(registrationActions.getRegistrationHistory(currentStudentProgramme === null || currentStudentProgramme === void 0 ? void 0 : currentStudentProgramme.id));\n  };\n\n  useEffect(() => {\n    if (isEmpty(registrationHistories)) reloadRegistrationHistory();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n      className: \"py-2  text-secondary text-sm mb-2 font600\",\n      children: [\"MY REGISTRATION HISTORY\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-options\",\n        children: /*#__PURE__*/_jsxDEV(ReloadButton, {\n          loading: gettingRegistrationHistory,\n          onClick: reloadRegistrationHistory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), isEmpty(registrationHistories) ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(DataNotFound, {\n        message: \"You have No Registration History.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(ReloadButton, {\n          loading: gettingRegistrationHistory,\n          onClick: reloadRegistrationHistory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Accordion, {\n        defaultActiveKey: \"1\",\n        activeKey: activeKey,\n        children: registrationHistories.map((registrationHistory, index) => /*#__PURE__*/_jsxDEV(Accordion.Item, {\n          eventKey: index + 1,\n          className: \"mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(AccordionHeader, {\n            activeKey: activeKey,\n            eventKey: index + 1,\n            setActiveKey: setActiveKey,\n            className: registrationHistory.is_active === false ? 'text-danger font600' : 'font600',\n            children: [/*#__PURE__*/_jsxDEV(FaUserEdit, {\n              className: \"me-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }, this), `REGISTRATION FOR ${registrationHistory === null || registrationHistory === void 0 ? void 0 : registrationHistory.registration_study_year}, ${registrationHistory.event_semester} - ${registrationHistory.academic_year}`, registrationHistory.is_active === false && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"badge badge-danger text-uppercase p-1 mx-1\",\n              children: \"De-registered\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: registrationHistory.is_active === false ? 'text-danger' : '',\n              children: /*#__PURE__*/_jsxDEV(SingleRegistrationHistory, {\n                registrationHistory: registrationHistory\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this)]\n        }, registrationHistory.event_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)]\n  }, void 0, true);\n};\n\n_s(RegistrationHistory, \"3L9QGdR2qocCYbD3ivvMkW8OmWo=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = RegistrationHistory;\nexport default RegistrationHistory;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegistrationHistory\");","map":{"version":3,"sources":["/Users/admin/Documents/react-projects/hesmis-front/src/containers/RegistrationHistory/index.jsx"],"names":["isEmpty","React","useEffect","useState","Accordion","Card","FaUserEdit","useDispatch","useSelector","DataNotFound","ReloadButton","AccordionHeader","registrationActions","SingleRegistrationHistory","RegistrationHistory","dispatch","registrationHistories","gettingRegistrationHistory","state","registration","currentStudentProgramme","auth","activeKey","setActiveKey","reloadRegistrationHistory","getRegistrationHistory","id","map","registrationHistory","index","is_active","registration_study_year","event_semester","academic_year","event_id"],"mappings":"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","sourcesContent":["import { isEmpty } from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport { Accordion, Card } from 'react-bootstrap';\nimport { FaUserEdit } from 'react-icons/fa';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { DataNotFound, ReloadButton } from '../../components/common';\nimport AccordionHeader from '../../components/common/AccordionHeader';\nimport { registrationActions } from '../../config/actions';\nimport SingleRegistrationHistory from './SingleRegistrationHistory';\n\nconst RegistrationHistory = () => {\n  const dispatch = useDispatch();\n  const { registrationHistories, gettingRegistrationHistory } = useSelector(\n    (state) => state.registration\n  );\n  const { currentStudentProgramme } = useSelector((state) => state.auth);\n  const [activeKey, setActiveKey] = useState(1);\n\n  const reloadRegistrationHistory = () => {\n    dispatch(\n      registrationActions.getRegistrationHistory(currentStudentProgramme?.id)\n    );\n  };\n\n  useEffect(() => {\n    if (isEmpty(registrationHistories)) reloadRegistrationHistory();\n  }, []);\n\n  return (\n    <>\n      <Card.Header className=\"py-2  text-secondary text-sm mb-2 font600\">\n        MY REGISTRATION HISTORY\n        <div className=\"card-options\">\n          <ReloadButton\n            loading={gettingRegistrationHistory}\n            onClick={reloadRegistrationHistory}\n          />\n        </div>\n      </Card.Header>\n      {isEmpty(registrationHistories) ? (\n        <>\n          <DataNotFound message=\"You have No Registration History.\" />\n          <div className=\"text-center\">\n            <ReloadButton\n              loading={gettingRegistrationHistory}\n              onClick={reloadRegistrationHistory}\n            />\n          </div>\n        </>\n      ) : (\n        <>\n          <Accordion defaultActiveKey=\"1\" activeKey={activeKey}>\n            {registrationHistories.map((registrationHistory, index) => (\n              <Accordion.Item\n                eventKey={index + 1}\n                className=\"mb-2\"\n                key={registrationHistory.event_id}\n              >\n                <AccordionHeader\n                  activeKey={activeKey}\n                  eventKey={index + 1}\n                  setActiveKey={setActiveKey}\n                  className={\n                    registrationHistory.is_active === false\n                      ? 'text-danger font600'\n                      : 'font600'\n                  }\n                >\n                  <FaUserEdit className=\"me-2\" />\n                  {`REGISTRATION FOR ${registrationHistory?.registration_study_year}, ${registrationHistory.event_semester} - ${registrationHistory.academic_year}`}\n                  {registrationHistory.is_active === false && (\n                    <div className=\"badge badge-danger text-uppercase p-1 mx-1\">\n                      De-registered\n                    </div>\n                  )}\n                </AccordionHeader>\n                <Accordion.Body>\n                  <div\n                    className={\n                      registrationHistory.is_active === false\n                        ? 'text-danger'\n                        : ''\n                    }\n                  >\n                    <SingleRegistrationHistory\n                      registrationHistory={registrationHistory}\n                    />\n                  </div>\n                </Accordion.Body>\n              </Accordion.Item>\n            ))}\n          </Accordion>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default RegistrationHistory;\n"]},"metadata":{},"sourceType":"module"}